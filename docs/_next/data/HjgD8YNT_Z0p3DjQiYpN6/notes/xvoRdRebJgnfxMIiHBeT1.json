{"pageProps":{"note":{"id":"xvoRdRebJgnfxMIiHBeT1","title":"Lecture 12","vault":{"fsPath":"vault"},"type":"note","desc":"","links":[],"anchors":{"concurrency":{"type":"header","text":"Concurrency","value":"concurrency","line":9,"column":0},"principles-of-concurrency":{"type":"header","text":"Principles of Concurrency","value":"principles-of-concurrency","line":11,"column":0},"key-terms":{"type":"header","text":"Key Terms","value":"key-terms","line":17,"column":0},"difficulties-in-concurrency":{"type":"header","text":"Difficulties in Concurrency","value":"difficulties-in-concurrency","line":30,"column":0},"enforce-single-access":{"type":"header","text":"Enforce Single Access","value":"enforce-single-access","line":35,"column":0},"os-role-in-solving-difficulties":{"type":"header","text":"OS Role in solving difficulties","value":"os-role-in-solving-difficulties","line":40,"column":0},"process-interaction":{"type":"header","text":"Process Interaction","value":"process-interaction","line":45,"column":0},"mutual-exclusion":{"type":"header","text":"Mutual Exclusion","value":"mutual-exclusion","line":51,"column":0},"approaches-to-mutual-exclusion":{"type":"header","text":"Approaches to Mutual Exclusion","value":"approaches-to-mutual-exclusion","line":59,"column":0},"hardware-support-for-mutual-exclusion":{"type":"header","text":"Hardware Support for Mutual Exclusion","value":"hardware-support-for-mutual-exclusion","line":65,"column":0},"extra-points":{"type":"header","text":"Extra Points","value":"extra-points","line":80,"column":0}},"fname":"courses.Semester 5.Operating System.Lecture 12","updated":1634062937767,"created":1634062937767,"parent":"OGq6U8MXIG3wwETNLR4b6","children":[],"data":{},"contentHash":"c33ee13eb7520379c4024695feeb4217","custom":{}},"body":"<h1 id=\"lecture-12\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#lecture-12\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Lecture 12</h1>\n<h2 id=\"concurrency\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#concurrency\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Concurrency</h2>\n<h2 id=\"principles-of-concurrency\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#principles-of-concurrency\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Principles of Concurrency</h2>\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-12-23-55-10.png\"></li>\n<li>Interaction of processes mean sharing, synchronization etc.</li>\n<li><img src=\"/notes/assets/images/2021-10-12-23-56-09.png\"></li>\n</ul>\n<h2 id=\"key-terms\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#key-terms\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Key Terms</h2>\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-12-23-59-05.png\"></li>\n<li><img src=\"/notes/assets/images/2021-10-12-23-59-21.png\"></li>\n<li>Greatest example of deadlock is traffic jam at a cross road where none of the cars are able to move.</li>\n<li><img src=\"/notes/assets/images/2021-10-13-00-00-27.png\"></li>\n<li>Race Condition: Suppose that two threads are trying to change a variable's value.</li>\n<li>The final value will be defined by that thread which executes later and thus realtive timeing of execution is important.</li>\n<li>Uniprocessor\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-02-50.png\"></li>\n</ul>\n</li>\n<li>Multiprocessor\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-03-49.png\"></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"difficulties-in-concurrency\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#difficulties-in-concurrency\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Difficulties in Concurrency</h2>\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-04-49.png\"></li>\n<li>If the global resource is not handled properly than it might be left in some adverse state which is not desired.</li>\n</ul>\n<h2 id=\"enforce-single-access\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#enforce-single-access\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Enforce Single Access</h2>\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-11-05.png\"></li>\n<li>This method is similar to that of Serial programming whereas each process is executed one after the other.</li>\n</ul>\n<h2 id=\"os-role-in-solving-difficulties\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#os-role-in-solving-difficulties\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>OS Role in solving difficulties</h2>\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-13-01.png\"></li>\n<li>Recap: OS keeps track of various processes with the help of PCBs.</li>\n</ul>\n<h2 id=\"process-interaction\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#process-interaction\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Process Interaction</h2>\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-14-30.png\"></li>\n<li>Renewable resource means that a resource that can be used by other process even after completion of one process. Eg. Printer</li>\n<li>Consumable resource means that a resource that can not be used by other processes after completion of one process. Eg. Message communication.</li>\n</ul>\n<h2 id=\"mutual-exclusion\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#mutual-exclusion\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Mutual Exclusion</h2>\n<ul>\n<li>Requirements\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-22-32.png\"></li>\n<li><img src=\"/notes/assets/images/2021-10-13-00-24-38.png\"></li>\n<li><img src=\"/notes/assets/images/2021-10-13-00-26-53.png\"></li>\n<li>Critical section means a particular code section which uses the same shared resource.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"approaches-to-mutual-exclusion\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#approaches-to-mutual-exclusion\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Approaches to Mutual Exclusion</h2>\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-27-54.png\"></li>\n<li><img src=\"/notes/assets/images/2021-10-13-00-28-37.png\"></li>\n<li>Support from Programming language or OS - Java has synchronize constructor (will be covered in depth later).</li>\n</ul>\n<h2 id=\"hardware-support-for-mutual-exclusion\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#hardware-support-for-mutual-exclusion\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Hardware Support for Mutual Exclusion</h2>\n<ul>\n<li>Disabling Interrupts\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-30-01.png\"></li>\n<li>Suppose a process is in critical section and is executing an operation on I/O.</li>\n<li>If, due to some reasons, the process is interrupted and blocked, then only the other process has the chance of getting executed in the same critical section.</li>\n<li>This can be thus solved by disabling the interrupts before entering the critical section.</li>\n<li>Issues\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-32-45.png\"></li>\n</ul>\n</li>\n<li>Solution\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-33-48.png\"></li>\n<li><img src=\"/notes/assets/images/2021-10-13-00-34-32.png\"></li>\n<li><img src=\"/notes/assets/images/2021-10-13-00-34-49.png\"></li>\n<li>Refer book for more info on compare and swap and exchange instruction.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"extra-points\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#extra-points\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Extra Points</h2>\n<ul>\n<li><img src=\"/notes/assets/images/2021-10-13-00-21-32.png\"></li>\n</ul>","noteIndex":{"id":"GL4YoVrbDUHLnf946YtXV","title":"Curated Notes","vault":{"fsPath":"vault"},"type":"note","desc":"","links":[],"anchors":{},"fname":"root","updated":1630150480330,"created":1629975412335,"parent":null,"children":["Jq5ki9jf1QLTdc3DYLRW4","3ONxZ3Khb7nFPdLxlV1ib","Z2JlSyF7TPv3hFanVQhJd"],"body":"\n\r\n\r\nYou have reached the home page of my curated notes. I am a third year student pursuing Computer Science and Engineering at Ahmedabad University.\r\n\r\nFeel free to use this resource to its best potential and reach out to me on [Linkedin](https://www.linkedin.com/in/sameep-vani/) and do checkout my [GitHub](https://github.com/Sameep1234)\r\n","data":{},"contentHash":"e9b530a3175371dde392f83db6e59628","custom":{"nav_order":0,"permalink":"/"}},"collectionChildren":null,"customHeadContent":null,"config":{"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"siteUrl":"https://sameep1234.github.io","assetsPrefix":"/notes","copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Sameep","description":"Personal knowledge space","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"author":"Sameep","logo":"vault/logo.gif","ga_tracking":"G-VZ67P3SVZE","siteLastModified":true,"gh_edit_branch":"main","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"version":4,"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false}},"workspace":{"dendronVersion":"0.70.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journalc","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"}},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true}}},"__N_SSG":true}