<<<<<<< HEAD
[{"doc":"This page has not yet sprouted","title":"This page has not yet sprouted","hpath":"403","content":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","url":"https://sameep1234.github.io/notes/notes\\403.html","relUrl":"notes\\403.html"},{"doc":"Curated Notes","title":"Curated Notes","hpath":"root","content":"\nYou have reached the home page of my curated notes. I am a third year student pursuing Computer Science and Engineering at Ahmedabad University.\n\nFeel free to use this resource to its best potential and reach out to me on [Linkedin](https://www.linkedin.com/in/sameep-vani/) and do checkout my [GitHub](https://github.com/Sameep1234)\n","url":"https://sameep1234.github.io/notes","relUrl":"/"},{"doc":"Stepwellradio","title":"Stepwellradio","hpath":"Stepwellradio","content":"\r\n","url":"https://sameep1234.github.io/notes/notes\\3ONxZ3Khb7nFPdLxlV1ib.html","relUrl":"notes\\3ONxZ3Khb7nFPdLxlV1ib.html"},{"doc":"Steptech","title":"Steptech","hpath":"Stepwellradio.Steptech","content":"\r\n","url":"https://sameep1234.github.io/notes/notes\\xm1zwK8k3nHvutw0hqXhh.html","relUrl":"notes\\xm1zwK8k3nHvutw0hqXhh.html"},{"doc":"Continuous Integration and Continuous Deployment","title":"Continuous Integration and Continuous Deployment","hpath":"Stepwellradio.Steptech.Continuous Integration and Continuous Deployment","content":"\n\r\n## Using Github actions\r\n\r\n### Continuous Integrations (CI)\r\n* DevOps software development practice to automate the integration of code changs from multiple contributors into a single software project.\r\n* In simple terms, CI helps to build your code as soon as it is pushed into the branch where CI workflow is defined.\r\n* This way we don't have to manually build and check for errors in the code. It would all be automated and done by github actions.\r\n* Steps\r\n    * Go to github actions tab on the site.\r\n    * Click create new workflow.\r\n    * Under the continuous integration workflows, click more  continuous integration workflows.\r\n    * Select the **Python application** and click set up this workflow.\r\n        * name: Self-explanatory\r\n        * on: when do you want to trigger the scripts\r\n        * push: Implies that the scripts will trigger on push\r\n        * branches: On which branch shall the \"event\" (push, pull etc) occur, so as to trigger CI workflow.\r\n        * jobs: **Most important part.**\r\n        * build: We specify whether we are building or deploying (write deploy instead of build to let it know that its a deploy script)\r\n        * runs-on: Remote desktop offered by **github.**\r\n        * steps: Self-explanatory\r\n        * uses: preferable keep it actions/checkout@v2. It implies that we are just building and not deploying. For deploying we will need to \"ssh\" into the server and hence we will need to change this.\r\n        * name: name of the script\r\n        * uses: Since, we selected python, keep it as it is.\r\n        * with: Specify the version, for us it would be a python version.\r\n        * run: Here write the script for building your project\r\n        ```bash\r\n        pip install flake8\r\n        pip install pytest\r\n        cd frontend\r\n        npm install\r\n        npm run build\r\n        ```\r\n        * The above script builds our react frontend project.\r\n        * flake8 is a python library to check coding styles and warnings including some imported libraries that are unused and undefined names etc.\r\n        * For information on pytest follow this [link](https://realpython.com/pytest-python-testing/)\r\n        * Initially pytest will give an error and hence it would be better to comment it. This bug is yet to be fixed.\r\n        * Commit the file and your CI is ready to go!\r\n\r\n> Check for errors in the details section and resolve any that is encountered.\r\n\r\n### Continuous Deployment (CD)\r\n* It is a software release process that uses automated testing to validate any changes and deploys it to the server.\r\n* Simply put, after CI, it deploys your code to the production environment automatically.\r\n\r\n\r\n> There are two ways to acheive this. One, to accomodate the code in the CI.yml file itself and the other is to create a whole new file for increasing modularity.\r\n* We have done the second approach.\r\n* For the first one, copy the build code written above and instead of build (under jobs), write deploy and then write the code as per the below steps.\r\n\r\n* Steps\r\n    * Go to actions tab on the site.\r\n    * Click create new workflow.\r\n    * Click on **create a workflow yourself.**\r\n    * Most of the code remains the same as that in CI.\r\n    * Under jobs, replace build with deploy.\r\n    * Delete the **workflow_dispatch** code.\r\n    * Further, delete the **uses section and single command code** under **steps**.\r\n    * By now, you will only be left with one multi-line script under **steps**.\r\n    * Replace the **name** with anything relavant.\r\n    * Then type the following without any tabs or indentation. **Note that the following should be exactly below name and without a hypen (-)**\r\n        * uses: appleboy/ssh-action@master\r\n        * This allows github to \"ssh\" into our server.\r\n    * Now open a terminal in your **local machine** and type the following command.\r\n        * ```bash\r\n            ssh-keygen -C <EMAILID>\r\n        ```\r\n        * Make sure to replace <EMAILID> with radio's email ID.\r\n        * This will create a new public and private key.\r\n    * Then, go to the settings of the repository.\r\n    * Left hand side, click on secrets and then click on new repository secret.\r\n    * Provide your newly created **private key** and name it anything relevant.\r\n    * Now \"ssh\" into the server and under .ssh/authorized_keys, place the newly created **public key** in it.\r\n    * Now go back on github site and add the with section shown in the below image. Make sure it is exactly the same except changing the secrets name accoring to what you have added in github secrets.\r\n    * ![](/assets/images/2021-09-12-18-19-36.png)\r\n    * **Make sure that you change the secrets with your respective server.**\r\n    * With the same indentation as that of host, key etc. write script for deployment.\r\n    * script: |\r\n        ```bash\r\n        cd stepwellradio\r\n        git pull https://<YOUR_USERNAME>:<PERSONAL ACCESS TOKEN>@github.com/<USERNAME><REPO_NAME>.git\r\n        python -m pip install --upgrade pip\r\n        pip install flake8 pytest\r\n        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi\r\n        cd frontend\r\n        npm install\r\n        cd ..\r\n        cd backend\r\n        python manage.py collectstatic\r\n        echo \"Deployed Successfully\"\r\n        ```\r\n    * Once it is done, you are good to go.\r\n    * Check details of guthub actions to make sure that there aren't any errors during the deployment.\r\n    * Some potential errors\r\n        * python, pip, nodejs and npm not installed.\r\n        * So make sure that these are installed on the server.\r\n        * **Note that these errors are just for first time set up of the server and hence the commands that are needed to install these need not be placed under the scripts.**\r\n\r\n> There are certain errors that are yet to be resolved like deploy should happen after build returns exit code 0 and some python virtual environment related issues.\n","url":"https://sameep1234.github.io/notes/notes\\3FLsdp7cHrFpp80a3luTz.html","relUrl":"notes\\3FLsdp7cHrFpp80a3luTz.html"},{"doc":"Courses","title":"Courses","hpath":"courses","content":"\n","url":"https://sameep1234.github.io/notes/notes\\Jq5ki9jf1QLTdc3DYLRW4.html","relUrl":"notes\\Jq5ki9jf1QLTdc3DYLRW4.html"},{"doc":"Semester 5","title":"Semester 5","hpath":"courses.Semester 5","content":"\n","url":"https://sameep1234.github.io/notes/notes\\O93aKwUCEnkxTR7S8V2eZ.html","relUrl":"notes\\O93aKwUCEnkxTR7S8V2eZ.html"},{"doc":"Sensors","title":"Sensors","hpath":"courses.Semester 5.Sensors","content":"\n","url":"https://sameep1234.github.io/notes/notes\\BU8smu6Xa4e3tkB0iVHT9.html","relUrl":"notes\\BU8smu6Xa4e3tkB0iVHT9.html"},{"doc":"Lecture 9","title":"Lecture 9","hpath":"courses.Semester 5.Sensors.Lecture 9","content":"\n> This lecture was donated to a practice quiz and nothing new was taught. Thus, look at LMS practice quiz section for some extra questions.\n","url":"https://sameep1234.github.io/notes/notes\\88fOniPiLmcGg3awHDMs5.html","relUrl":"notes\\88fOniPiLmcGg3awHDMs5.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Sensors.Lecture 8","content":"\n# Strain Sensitivity and Force Sensor\n\n## Sensitivity and Bridge Circuit\n* ![](/assets/images/2021-09-29-15-47-15.png)\n* In a bridge circuit, the larger the value of drop for the same strain, the larger would be the sensitivity.\n* To acheive this we use two strain gauges, one for changing the value of R4 and other to change the value of R3.\n* Note that on increasing the value of R4, the potential was dropping. To acheive the same, we need to attach the strain guage in such a fashion that the value of R3 decreases.\n* Only if R3 decreases will the drop increase.\n* Now to further increase the sensitivity, we use strain guage in place of R1 and R2 also.\n* The manner of attaching the strain guage gets reversed because we want to decrease the value of R1 to increase the value of potential drop.\n* Types of bridges\n    * Quater - Only one strain guage is used.\n    * Half - Two strain guages are used.\n    * Full - Four starain guages are used.\n* Note that we should use the same/identical strain guages for (R4, R3) pair and (R1, R2) because the strain resistance is a function of temperature also and we want the conditions to be almost similar for both the strain guages.\n* This is also the reason as to why three strain guages are not used in a bridge. (This is because we want to acheive temperature independence).\n* It is obvious that full bridge is the best in terms of sensitivity but it is costlier than others.\n\n## Quater Bridge Configuration\n* ![](/assets/images/2021-09-29-16-30-21.png)\n\n## Half Bridge Configuration\n* ![](/assets/images/2021-09-29-16-32-36.png)\n\n## Full Bridge Configuration\n* Bending Strain\n    * ![](/assets/images/2021-09-29-16-34-20.png)\n* Axial Strain\n    * ![](/assets/images/2021-09-29-16-35-18.png)\n\n## Force Sensing Resistance\n* Conducting foam is pressed and the contact resitance will decrease.\n* This is the method by which we define a relationship with force and resistance.\n* Types\n    * Shunt Mode Force Sensitive Resistor\n        * Foam is only on one side.\n    * Thru Mode force sensitve resistor\n        * Froam is on both the sides.\n\n## Force vs Voltage\n* We are benefitted if the change in resistance is somehow reflected by the change in voltage.\n* To achieve this, we use the below given circuit.\n* ![](/assets/images/2021-09-29-16-45-49.png)\n* Make sure to select R1 as 1k unless specified otherwise.\n\n## Force Alarm\n* ![](/assets/images/2021-09-29-16-47-54.png)\n* Vref depends on problem and hence it is not fix that the value of Vref must be 4V.\n","url":"https://sameep1234.github.io/notes/notes\\LbDKJD0pB7bkoOR3RWvtL.html","relUrl":"notes\\LbDKJD0pB7bkoOR3RWvtL.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Sensors.Lecture 7","content":"\n# Stress and strain\n\n## Hook's Law\n* Amount of deformation is proportional to the force applies to any object.\n* ![](/assets/images/2021-09-17-09-41-24.png)\n* F = k*(Change in length)\n* **Note that the force should be small for the relationship to be linear.**\n* If force greater than the threshold is applied than the relationship is not linear.\n* Elstic region corresponds to the range of force where the object will retain its shape.\n\n## Axial vs Transverse force\n* This is called tensile force.\n* ![](/assets/images/2021-09-17-09-45-18.png)\n* Transverse strain means along the length of the object at perpendicular angle.\n\n## Compressive Force\n* ![](/assets/images/2021-09-17-09-48-42.png)\n* $\\frac{F}{A}$ is called stress or pressure.\n* Units of young's modulus is same as stress or pressure i.e N/m*2 or Pascal (Pa).\n\n## Strain Gauge\n* Sensor for measuring strain\n* ![](/assets/images/2021-09-17-10-07-40.png)\n* ![](/assets/images/2021-09-17-10-10-23.png)\n* Now to calculate change in resistance, we measure the change in current or change in voltage and indirectly find change in resistance.\n* $\\frac{Change in R}{R}$ is very small and adding \"1\" might just lead to nothing.\n* To avoid this, we need to set a circuit such that the voltage across the resistor is linearly proportional to $\\frac{Change in R}{R}$.\n* We need a wheatstone bridge to get the linear proportionality.\n    * ![](/assets/images/2021-09-17-10-16-43.png)\n* **Understand the equation formed.**\n* Bridge circuit for strain measurment\n    * In the above figure, R4 is the strain gauge whereas others are normal resistors which are all equal.\n    * In bending strain or a tensile strain, the formula still remains the same becuase in either of the cases, the length of the resistor in the strain gauge will change and hence, resitance will change.\n    * ![](/assets/images/2021-09-17-10-22-11.png)\n    * Final Equation\n        * ![](/assets/images/2021-09-17-10-24-07.png)\n    * **Note that the strain will always be positive.** According to the equation the negative value might change as change in voltage (Vo) might be negative if R4 gets too high.\n","url":"https://sameep1234.github.io/notes/notes\\QYvF9K1IRAtE3LVihayMy.html","relUrl":"notes\\QYvF9K1IRAtE3LVihayMy.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Sensors.Lecture 6","content":"\n## Feedback control\n* Here we are considering the example of an engine of the car.\n* ![](/assets/images/2021-09-03-09-49-46.png)\n* Motor is used for getting a particular position and not a particular speed.\n* Particular position will ensure that the desired speed is achieved.\n\n## Pulse Width modulation\n* Width of the pulse determines the average voltage. Higher the width of the pulse, higher the voltage and vice versa.\n* Control of the DC Voltage would not be very efficient if you use a potentiometer and this is because the potentiometer will decipate a lot of power.\n* Thus, we use pulse width modulation because changing the pulse of a wave does not require much power and can be easily done.\n* ![](/assets/images/2021-09-19-15-25-30.png)\n\n## Important relationships\n* Note that this is for throttle vavle and potentiometer outpur for a car.\n* However, the pedal angle does not go from 0 to 90 degrees. It goes from 0 to 45 degrees and hence to make the throttle valve equal to the pedal valve, we use amplifier or simply use a double Vcc for pedal potentiometer.\n* ![](/assets/images/2021-09-03-09-55-04.png)\n\n## H bridge\n* ![](/assets/images/2021-09-19-15-43-30.png)\n* We have achieved to reverse the direction of rotation of motor without reversing the polarity using H bridge.\n* **Note that the switches shown are mechanical but in real life, they are electrical.**\n* Electrical H Bridge IC\n    * ![](/assets/images/2021-09-19-15-45-17.png)\n\n## Extra Points\n* 90 degrees means full open valve and **don not confuse it with 360 degrees**\n","url":"https://sameep1234.github.io/notes/notes\\hudJTsmsAwHGkzWplHL95.html","relUrl":"notes\\hudJTsmsAwHGkzWplHL95.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Sensors.Lecture 5","content":"\n\r\n# Control Systems\r\n\r\n## Introduction\r\n* System which controls a physical quantity.\r\n* Components of control system\r\n    * Control element (Eg. Timer)\r\n    * Plant (Eg. Heating coil)\r\n* Type of control system\r\n    * Open Loop: Control action is independent of the control variable.\r\n        * We must assume the timer setting to be correct.\r\n        * Block Diagram\r\n        ![](/assets/images/2021-09-02-13-09-13.png)\r\n    * Closed Loop: Control action is dependent of the control variable.\r\n        * User will have manual control.\r\n        * Feedback recieved with the help of human senses. Can also be used as feedback in automatic control systems. For this, the feedback has to be electrical.\r\n        * This means that the control action depends on the output variable.\r\n    * There are various other factors which can't be known and hence are assumed to be constant. For example, ageing and changes in load weight. \r\n    * The main difference between open loop and close loop system is of feedback which is not present in open loop system.\r\n\r\n## Steady state calculation\r\n![](/assets/images/2021-09-02-13-20-17.png)\r\n* A is the gain of the amplifier. It is dimensionless. Also called as the loop gain.\r\n* Km is the motor constant. Upto Km, we will get the **speed** of the motor.\r\n* Ks is the sensor constant. Speed sensors input is speed and output is voltage. Dimension of Ks is opposite tso that of Km. Ks = $\\frac{Vf}{N}$.\r\n* N = speed in rpm.\r\n* A*Km*Ks is called the loop gain of the system. So larger its value, the smaller is the difference and hence we get almost equal value to Vs.\r\n* So it is better to obtain loop gain of 100 and it is achievable.\r\n\r\n## Specification of control systems\r\n* Accuracy of output in steady state.\r\n* Speed of response.\r\n* Feedback (Improves both).\r\n    * Because of this, the effective time constant is reduced and hence speed and accuracy is improved.\r\n\r\n## Steps in analysis of control system\r\n![](/assets/images/2021-09-02-13-49-06.png)\r\n\r\n## Example of Oven\r\n* Block Diagram\r\n    * ![](/assets/images/2021-09-19-14-39-38.png)\r\n* The rate of increase depends on thermal resistance and thermal capacitance.\r\n* ![](/assets/images/2021-09-19-14-42-28.png)\r\n* Heat flow is in watts. Theta is in degrees and thus thermal resistance is in degrees per watts.\r\n* ![](/assets/images/2021-09-19-14-45-07.png)\r\n* ![](/assets/images/2021-09-19-14-45-30.png)\r\n* Mathematical model of oven\r\n    * ![](/assets/images/2021-09-19-14-46-21.png)\r\n* **For steady state**\r\n    * ![](/assets/images/2021-09-19-14-47-40.png)\r\n    * 'q' is the coil wattage of the oven.\r\n* Electrical Equivalent\r\n    * ![](/assets/images/2021-09-19-14-50-15.png)\r\n    * Note that the electrical equations are just the analogous equations.\r\n\r\n## Set Point and Closed system equivalent\r\n* The temperature reached in steady state is called set point.\r\n* For oven, it is qR.\r\n* ![](/assets/images/2021-09-19-14-53-10.png)\r\n* ![](/assets/images/2021-09-19-14-53-30.png)\r\n* Left hand side part is the steady state voltage and as evident from the figure it has some error.\r\n* However, if Kp is chosen to be very large as compared to 1, this error is highly reduced.\r\n* The coefficient of $\\frac{dVo}{dt}$ is time constant and here in our case it is $\\frac{RC}{Kp + 1}$.\r\n* Thus, on increasing Kp, time constant is reduced and a faster response is obtained.\r\n\r\n## Loading effect in Open Loop System\r\n* ![](/assets/images/2021-09-19-14-57-54.png)\r\n* **Note that the steady state voltage is reduced by half and this is a significant drop.**\r\n\r\n## Loaded system with feedback\r\n* ![](/assets/images/2021-09-19-14-58-56.png)\r\n* Slight difference is there in the denominator.\r\n\r\n## LTspice simulation\r\n* ![](/assets/images/2021-09-19-15-01-58.png)\r\n* Watch [video](https://drive.google.com/file/d/1-aeTFcX9shA_R6Owlvv1iaxCVnFcwAAQ/view) for better understanding (1:11:00)\n","url":"https://sameep1234.github.io/notes/notes\\gI0T7ym1Q2nLF29FW5zQs.html","relUrl":"notes\\gI0T7ym1Q2nLF29FW5zQs.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Sensors.Lecture 4","content":"\n# TinkerCAD\n> This lecture included the demo of TinkerCAD and hence there are not much notes of it.\n\n## Extra Points\n* [Arduino Code Reference](https://www.arduino.cc/reference/en/)\n* Digital Read Function\n    * Pin from which digital input is read.\n    * Syntax: x = digitalRead(Inpin);\n* Analog Read\n    * Syntax: x = analogread(potPin);\n    * x ranges between 0 to 1023.\n* Serial Communication\n    * Syntax = Serial.begin(9600)\n    * This has to be used in setup part of the program structure.\n    * Will establish serial communication between computer monitor and Arduino.\n    * Syntax: Serial.println(\"ADC Output\");\n    * This will print it as a string on the monitor.\n* Digital to Analog Conversion calculation\n    * ![](/assets/images/2021-09-01-23-10-27.png)\n","url":"https://sameep1234.github.io/notes/notes\\qeyCdoyopW6V6iQp2UDkg.html","relUrl":"notes\\qeyCdoyopW6V6iQp2UDkg.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Sensors.Lecture 3","content":"\n# Best Fit, Measurement and Control Systems\n\n## Points\n* With one value of x, take many values of y and then take the average\n* Error can occur at input as well as output side\n## Standard Error and Standard Deviation\n> Measures how much discrepancy (difference) is likely to be in the sample mean and the population mean.\n\n* Std Dev = Spread of data around the mean\n\n![](/assets/images/2021-08-27-09-42-54.png)\n* In excel, multiply by sqrt(nx) and divide by sqrt(nx-1) to get the correct result\n![](/assets/images/2021-08-27-09-44-23.png)\n## Precision\n> Degree of reproducibility of a measurement\n\n* Accuracy and precision are different. **Outputs** for calculation is close enough then your calculation is precise but accuracy depends on the whether the output values are close to the actual value means it is accurate.\n* It is also possible that the output is more accurate and less precise and vice versa.\n![](/assets/images/2021-08-31-23-19-59.png)\n\n## Resolution\n> Smallest measurable increment\n\n* Eg. Resolution of 1mv is greater than that of 10mv.\n* But it also depends on the type of application. If 100mv is the measurement required then 10mv is a nice resolution and 1mv resolution will be redundant\n## Span and Range\n> Span: Linear operating range\n\n* This means that the relationship between two values must be a linear relation.\n\n> Range: Simple range (No explanation needed)\n\n## Best Fit Line\n![](/assets/images/2021-08-27-10-03-26.png)\n* Error is the difference between best fit value and the actual value.\n\n![](/assets/images/2021-08-27-10-09-13.png)\n> We take n-2 because measured values are mean and not true values and two variables are involved.\n\n## Computerized measurement and control systems\n\n## Development of software\n> Question to think: How to store the software or computer program in the circuit board?\n\n* General purpose computer is required to build a software for specific purpose computer.\n* Write the code in the laptop and then upload the code on the board.\n\n## Arduino Board\n* Components\n    * Input Pins (6 Analog Pins)\n    * Battery Connector/Receptor\n    * Output Pins (Analog)\n    * USB Connector\n    * 14 Digital pins which can be used as either input or output i.e the pins are configurable.\n* Voltages range from 0V to 5V.\n* PWM - Pulse wave modulated (Explained in further letures).\n* On the actual arduino board, they are represented by a '~' sign.\n* Pin13 has built in LED for testing and hence doesn't require any external LED's in order to test the program.\n\n## Analog to Digital converter\n* For a 10 bit ADC which is generally found in arduino, there would be 1024 values starting from 0 and going to 1023 with increment as 1.\n* This, means that value corresponding to 1023 is 5V.\n* **ADC are linear.**\n\n## Sampling rate of ADC\n* Sampling rate = 9650 samples/sec. This is fixed for an arduino board.\n* Maximum theoretical frequency of the input analog signal is half of this.\n\n## Pulse Wave Modulation (PWM)\n![](/assets/images/2021-09-01-22-26-19.png)\n* As seen in the above figure, Tw is the pulse width and T is the time period of the wave.\n* Average value of periodic wave = $\\frac{Area under one time period}{Time period}$\n* Duty cycle ranges from 0 to 255 corresponding to 0% and 100% respectively.\n\n## Program Structure\n* ![](/assets/images/2021-09-01-22-31-18.png)\n* **Statements under setup function will be executed only once and vice versa for loops.**\n","url":"https://sameep1234.github.io/notes/notes\\OE2ZBtafsUjrbdZpQgqVn.html","relUrl":"notes\\OE2ZBtafsUjrbdZpQgqVn.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Sensors.Lecture 2","content":"\n# Callibration of Sensors and Errors\n\n## Advantages of Linear sensors\n* Callibration will be easy.\n* Scale would be crowded for non-linear sensor at lower temperature range.\n* Calculation becomes easier.\n\n## Extra Points\n* ADC is always linear.\n* Equation written in the program will be stored in the processor.\n* Sometimes, the equation is complicated and hence it becomes difficult for processor to sovle that equation.\n* To solve this, we use table look up. In this, we form a table of x and y values and then search for a particular value. We can use some of the most efficient search algorithm.\n* Callibration means to create a table between the two variables.\n\n## Algorithm for Digital instrument\n* Start ADC by sending a pulse at the start of conversion line and then will wait for end of conversion line.\n* Then read y1 (always an integer discrete value because it is output is binary).\n* Calculate inverse function of x or look up in the table.\n* Display because we want the value to be stable for some point.\n* Add delay.\n* Repeat the above procedure.\n\n## Error and Accuracy\n\n> Difference between measured and true value.\n\n* Formula\n![](/assets/images/2021-08-31-15-32-11.png)\n\n> Accuracy means values that are aligned with standard rules or laws.\n\n* Exact true value to be found is not possible. Thus, we require the best standards and these are called as primary standards.\n* These do no change with temperature, pressure etc.\n* Secondary standards are less accurate and are calibrated using primary standards.\n* These can also be costly and thus we use working standards.\n* Types of errors\n    * Systematic error\n        * Instrument inaccuracies\n        * Faulty design of an experiment\n    * Random errors\n        * Human errors\n        * Noise\n![](/assets/images/2021-08-31-16-01-54.png)\n\n## Calibration procedure\n![](/assets/images/2021-08-31-15-37-26.png)\n* Measure the values generated by intrument under the test and compare it with the values generated by secondary and working stadndards.\n","url":"https://sameep1234.github.io/notes/notes\\rkRE070MRlTYGTxfAAxPr.html","relUrl":"notes\\rkRE070MRlTYGTxfAAxPr.html"},{"doc":"Lecture 10","title":"Lecture 10","hpath":"courses.Semester 5.Sensors.Lecture 10","content":"\n# Temperature Sensor\n\n## Resistance Temperature Detectors (RTD)\n* ![](/assets/images/2021-10-07-15-11-54.png)\n* ![](/assets/images/2021-10-07-15-17-18.png)\n* Typical value of R0 is 100 ohms and that of alpha will depend on the material and geometry of the setting.\n* ![](/assets/images/2021-10-07-15-18-13.png)\n* Usually in real world, the RTD is placed in the heated chamber and you will be located far away. This means that the wires would have some resistance.\n* Therefore, the voltage you get is actually the potential drop from RTD and the wires.\n* This might lead to large errors.\n* 4 Wire RTD measurement\n    * ![](/assets/images/2021-10-07-15-20-41.png)\n    * The drop in the inner wires can be neglected because the volmeter has high resistance and hence calibration will remain valid.\n\n## Thermocouples\n* ![](/assets/images/2021-10-07-15-23-07.png)\n* Cold junction compensation\n    * Copper wire will have some resitance and thermocouple materials used.\n    * Thus, cold junction will also have different voltage than hot end.\n    * Hence, we need to compensate.\n    * ![](/assets/images/2021-10-07-15-28-56.png)\n    * Automatic Junction Compensation\n        * ![](/assets/images/2021-10-07-15-31-44.png)\n* Merits and Demerits\n    * ![](/assets/images/2021-10-07-15-25-34.png)\n* ![](/assets/images/2021-10-07-15-26-41.png) \n","url":"https://sameep1234.github.io/notes/notes\\9xeBb3gedOfz9uJLNUzUS.html","relUrl":"notes\\9xeBb3gedOfz9uJLNUzUS.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Sensors.Lecture 1","content":"\n# Introduction to course\n\n## Course Material\n* Principles and applications of Electrical Engineering, 5th Edition by Giorgio Rizzoni, McGraw-Hill\n\n## Assessment and Evaluation\n* Quiz 1: 11%\n* Mid Semester Exam: 22%\n* Quiz 2: 6%\n* Assignments: 11%\n* Project: 15%\n* End Semester Exam: 35%\n* **Open Book Exam on LMS**\n\n> ## **Absolute Grading System**\n\n![](/assets/images/2021-08-29-20-32-26.png)\n\n## Extra Points\n* Engineering applications always require accurate measurement and control over physical quanities.\n* It is easy to transmit signal in electrical form.\n* We might need to process the signal and it is easier to perform operations in electrical form.\n* Thus, we need sensors.\n\n## Transducers and Sensors\n* Convert one form of signal to another form.\n* If you convert non-electrical signal to an electrical signal, it is called a sensor.\n* Thus, sensors are subset of transducers.\n* Actuator is device converting electrical to non-electrical signal.\n\n## Sensor Calibration\n![](/assets/images/2021-08-30-10-01-01.png)\n\n> We need curve fitting to obtain equation from the data points.\n\n## Curve Fitting\n* Process of finding suitable equation between y and x when table of values of x and y is known.\n* Polynomial form in general case\n* Steps in excel\n    * Select the data points.\n    * Go to insert.\n    * Select scatter plot.\n    * Chart will appear.\n    * Right click on any data point on the chart and select trendline option.\n    * Choose Polynomial and select the appropriate order.\n    * **Check the display equation and display R^2 in chart option.**\n","url":"https://sameep1234.github.io/notes/notes\\SyVfhynb0qtmDiyx1y1M5.html","relUrl":"notes\\SyVfhynb0qtmDiyx1y1M5.html"},{"doc":"Operating System","title":"Operating System","hpath":"courses.Semester 5.Operating System","content":"\n","url":"https://sameep1234.github.io/notes/notes\\OGq6U8MXIG3wwETNLR4b6.html","relUrl":"notes\\OGq6U8MXIG3wwETNLR4b6.html"},{"doc":"Lecture 9","title":"Lecture 9","hpath":"courses.Semester 5.Operating System.Lecture 9","content":"\n# Scheduling Algorithms (Cont.)\n\n## Comparision (FCFS, RR, SPN)\n* ![](/assets/images/2021-09-28-15-14-20.png)\n* Note that for **round robin**, there is a **constant selection** function because whatever process is there, you run it and block it if the time exceeds time quantum.\n* Throughput means number of processes completed in a given time frame.\n* Response time means the time when the process is first admitted into the system and it gets first chance to execute.\n* **Note that the overhead in round robin is high if the time quantum is too low because of more frequent switching. Thus, we need to swap the overhead of RR with that of SPN int he above image.**\n\n## Shortest Remaining Time (SRT)\n* ![](/assets/images/2021-09-28-15-22-39.png)\n* The process with the minimum service time will be given the chance.\n* **But note that if a process requires service time of 5 units and comes to ready state for I/O operations and has already worked for 3 units of time, then the remaining time i.e 2 units is considered and not the original service time of 5 units.**\n* Example\n    * ![](/assets/images/2021-09-28-15-28-55.png)\n    * Note that both B and D have the same amount of remaining time left and hence any tie breaker can be used and the simplest one that is used here is the FCFS.\n    * ![](/assets/images/2021-09-28-15-29-57.png)\n    * Compared to SPN, Mean TAT and mean NTAT is less and hence is better than SPN.\n\n## Highest Response Ratio Next (HRRN)\n* ![](/assets/images/2021-09-28-15-31-07.png)\n* As the name suggest, when current process completes or is blocked, choose next process with the greatest ratio.\n* Effect on processes\n    * ![](/assets/images/2021-09-28-15-34-20.png)\n* It is thus going to balance out each process because of obvious reasons.\n* Example\n    * ![](/assets/images/2021-09-28-15-38-03.png)\n    * ![](/assets/images/2021-09-28-15-38-13.png)\n    * Note that when T = 9 \"D\" had higher ratio than \"E\" but at T = 13, \"E\" has the higher raio than \"D\". Thus, we should always calculate the ratios at each time interval.\n    * Also note that mean times in this algorithm is greater than that of SRT and SPN but is somewhere in between and it is lower than that of FCFS.\n\n## Comparision (SPN, SRT and HRRN)\n* ![](/assets/images/2021-09-28-15-40-07.png)\n\n## Feedback Scheduling (FB)\n* ![](/assets/images/2021-09-28-15-43-17.png)\n* ![](/assets/images/2021-09-28-15-49-15.png)\n* Here we have multiple ready queues.\n* So if a process in the first queue is not completed in the given time quantum, it is appended in the second queue.\n* The priority of the second queue is lower than that of the first queue and so on.\n* Thus, longer processes are **penalized.**\n* **Note that withing each queue, there is FCFD algo being executed except the last queue where RR is being executed.**\n* ![](/assets/images/2021-09-28-15-53-31.png)\n* Example\n    * ![](/assets/images/2021-09-28-15-55-42.png)\n    * ![](/assets/images/2021-09-28-15-59-07.png)\n    * ![](/assets/images/2021-09-28-15-59-26.png)\n    * ![](/assets/images/2021-09-28-16-00-12.png)\n* Issues and its solution\n    * ![](/assets/images/2021-09-28-16-01-01.png)\n    * ![](/assets/images/2021-09-28-16-03-15.png)\n    * This means that if a process has spent some amount of time, it should not move to a lower priority queue, it should actually be moved to a higher priority queue.\n    * This can reduce the waiting time significantly.\n* Note that FB is also called as multi-level feedback strategy because it has multiple levels of queue.\n\n## Other Scheduling Algorithms\n* ![](/assets/images/2021-09-28-16-05-48.png)\n* Priority scheduling means that based on some criteria you provide some priority.\n    * In nonpreemptive version, whichever process is running will continue to run unless it is finished or blocked and then the next process will be selected based on the priority.\n    * In preemptive version, the currently running process will be interrupted by a higher priority process in the queue.\n* Longest Job First is the direct opposite of SPN.\n* Longest Remaining time is the direct opposite of SRT.\n\n> In real operating system, some hybrid versions are used.\n","url":"https://sameep1234.github.io/notes/notes\\34tGpG4ranHBd9HzSjzAD.html","relUrl":"notes\\34tGpG4ranHBd9HzSjzAD.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Operating System.Lecture 8","content":"\n# Uniprocessor Scheduling Algorithms\n\n* We would be discussing only short-term scheduling.\n* They mainly include dispatching techniques.\n* Algorithms available\n    * ![](/assets/images/2021-09-20-08-08-03.png)\n* Selection Function\n    * ![](/assets/images/2021-09-20-08-10-10.png)\n* Normalized TAT is better quantity to compare two scheduling algorithms.\n* Normalized TAT is relative delay and it represents how much a process needs to wait.\n* We can't have normalized TAT less than 1 because service time can never be more than TAT.\n\n## Decision Mode\n* Specifies the instants in time at which the slection functions is exercised.\n* Two Types\n    * Nonpreemptive - Once a process is in running state, it will continue until it terminates or blocks itself for I/O.\n        * This means it can't be forcefully stopped.\n    * Preemptive - Currently running process may be interrupted and moves to ready state by the OS.\n        * This normally occurs when new process arrives, on an interrupt or periodically.\n        * In simple terms, this will occur when a new process is inserted or an interrupt is passed or periodically this premption is performed.\n* Normally preemptive mode is preferred even though it increases overhead because of more frequent process switching but it also prevents one process from monopolizing the processor.\n* For example, a process requires a user input and if user is on a break, the process will block all other processes which otherwise would have ran. This is called monopolizing the processor.\n\n## CPU Bound and I/O Bound\n* If a process spends most of its time in processor, then it is called CPU bound and vice versa.\n* Example of I/O bound process includes chatting. It uses I/O for most of the time because it is waiting for the user to enter the values.\n\n## First Come First Serve (FCFS)\n* ![](/assets/images/2021-09-20-08-14-00.png)\n* It is one of the most fair strategy in the **real world.**\n* w = waiting time.\n* For better efficiency TAT should be as low as possible.\n* Example\n    * ![](/assets/images/2021-09-28-10-54-38.png)\n* Issues\n    * A short process may have to wait a very long time before it can execute.\n    * ![](/assets/images/2021-09-20-08-33-39.png)\n\n## Round Robin (RR)\n* ![](/assets/images/2021-09-28-12-18-13.png)\n* It is a type of **preemptive** FCFS.\n* Simple explanation\n    * There will be a queue.\n    * The process will run for some time.\n    * If the process is not completed, that process is blocked and put into ready queue.\n    * The next process runs.\n* Time given to each and every process is called time slice or **time quantum.**. It is represented by \"q\".\n* Example\n    * For the below example, the time quantum is 4. Thus, if a process is not finished after 4 units of time, it will be placed at last in the ready queue.\n    * ![](/assets/images/2021-09-28-12-26-01.png)\n    * Now we have the same example but with q = 1.\n    * ![](/assets/images/2021-09-28-12-40-19.png)\n    * Note here that the Mean NTAT for q = 4 is better than that when q = 1.\n    * Depending on the implementation of OS, these can be either pre defined or may be changed during the execution.\n* Issues\n    * ![](/assets/images/2021-09-28-12-44-01.png)\n* Thus, the ideal value of time quantum is slightly greater than the time required for a typical process interaction.\n* Relative Treatment\n    * ![](/assets/images/2021-09-28-13-24-26.png)\n\n## Virtual Round Robin\n* ![](/assets/images/2021-09-28-13-26-40.png)\n* In this strategy, we are assigning priority to I/O blocked processes by maintaining different queues.\n\n## Shortest Process Next (SPN)\n* ![](/assets/images/2021-09-28-15-00-03.png)\n* Example\n    * In the below example, the time shown is wrong and do your own calculation.\n    * ![](/assets/images/2021-09-28-15-03-17.png)\n    * ![](/assets/images/2021-09-28-15-03-30.png)\n* Issues\n    * ![](/assets/images/2021-09-28-15-03-48.png)\n    * Having knowledge of service time is one of the biggest overhead in **all the algorithms seen till now.**\n    * For interactive process, it is the most difficult job because the value can never be known.\n    * This is because, the process will have to wait for either I/O or for any user input.\n\n## Extra Points\n* DMA - Data memory access (DMA) is a hardware circuit through which all the data is transfered after an I/O is available.\n","url":"https://sameep1234.github.io/notes/notes\\TDArvOmokgPIewQeuuXzw.html","relUrl":"notes\\TDArvOmokgPIewQeuuXzw.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Operating System.Lecture 7","content":"\n# Process/Processor Scheduling\n\n> Note that we have assumed uniprocessor system and hence we will be studying uniprocessor scheduling\n\n## Sceduling\n* OS handles resources and hence called as resource manager.\n* Processor provides resources in terms of its execution time.\n> Aim: Assign processes to be executed by processor over time, in a way that meets system objectives.\n\n* Response time means the time elapsed between process creation and the **first response** from that process.\n* Throughput means rate of job completion. This means how many processes can be completed in one unit time is called throughput.\n* Processor efficiency means that processor should not be idle and hence should be used to its fullest.\n* Objectives\n    * ![](/assets/images/2021-09-10-10-00-58.png)\n    * Starvation of a process means deprived of processor time.\n    * Example of overhead is process switching.\n* Types\n    * ![](/assets/images/2021-09-10-10-03-11.png)\n    * Short-term sheduling is also known as dispatcher.\n    * ![](/assets/images/2021-09-10-10-04-24.png)\n\n## State transition diagram\n* ![](/assets/images/2021-09-10-10-05-29.png)\n* We can put a newly created process directly into ready state if there is enough memory and if there is not enough memory, we put it in ready/suspended state.\n* This task is done by long-term scheduling and the rest is self-explanatory.\n* **Swapping** happens when the process is **swapped** from {ready and ready/suspend} and {block and blocked/suspend}.\n* Same thing in a different way\n    * ![](/assets/images/2021-09-10-10-13-06.png)\n\n## Long-Term Scheduling\n* ![](/assets/images/2021-09-10-10-13-29.png)\n* Some questions\n    * Will it be possible to predict the I/O requirements?\n        * In case of interactive jobs, it is not possible, but for **batch jobs**, it is possible.\n    * Similar for expected execution time\n\n## Medium-Term Scheduling\n* ![](/assets/images/2021-09-10-10-17-23.png)\n\n## Short-Term Scheduling\n* ![](/assets/images/2021-09-10-10-17-45.png)\n* Whenever there is a need for **process switch**, dispatcher comes into the picture.\n* Process needs to switch when process is terminated, interrupt occurs, I/O operations etc.\n* Criterias of classification of short-term scheduling\n    * User-oriented\n        * Response time\n        * This means to give response as fast as possible from user perspective.\n    * System-oriented\n        * Effective and efficient utilization of the processor.\n        * Designers must keep in mind while deciding the dispatcher strategy, the processor should not be underutilized.\n    * Performance related\n        * Quantitative and easily measure.\n        * Eg. Response time and throughput.\n    * Non-performance related\n        * Qualitative and hard to measure.\n        * Eg. User-Satisfaction\n* Interdependency in criterias\n    * User oriented and performance related.\n        * ![](/assets/images/2021-09-10-10-29-24.png)\n        * Turnaround time is approriate for batch jobs and not for interactive jobs because in interative jobs, user interaction plays a key role. \n        * For example, a process is waiting for a user input and the user has gone to take a break, then it will remain stagnant and hence turnaround time will increase drastically.\n        * The deadlines are in real-time systems or embedded systems.\n    * User oriented and non-performance related\n        * ![](/assets/images/2021-09-10-10-39-44.png)\n    * System-oriented and performance related\n        * ![](/assets/images/2021-09-10-10-40-58.png)\n    * System-oriented and non-performance related\n        * ![](/assets/images/2021-09-10-10-43-31.png)\n        * In the third criteria, we require medium-term and long-term scheduling because memory is one of the resource that is used by the process and processor.\n\n## Priority based scheduling\n* ![](/assets/images/2021-09-10-10-45-56.png)\n* Each ready queue has different priority, but processes inside the **same ready queue, have the same priority.**\n\n> Now this may lead to starvation problem. Suppose, there are 3 ready queues and at any particular instance of time, there is at least one process in the first two ready queues. This means that the processes in the third queue will not be allocated any time. This is the starvation problem. \n\n> To solve this, we allow a process to change its priority-based on its age or execution history. This means that whenever some process has been executed for some time and is to be again inserted in the ready queues, its priority should be lowered down.\n\n## Various Scheduling Policies\n* ![](/assets/images/2021-09-10-10-55-01.png)\n* Out of all these, round robin and feedback are the most practical theories.\n* Others are good in theory, but not in practice.\n\n## Selection Function\n* ![](/assets/images/2021-09-10-10-56-15.png)\n\n## Decision Mode\n* Specifies the instance in time at which the selection function is executed.\n* Two categories\n    * ![](/assets/images/2021-09-10-11-00-20.png)\n    * For non-preemptive, the OS will never put a process in blocked/removed state unless it is fully terminated or blocked because of I/O.\n    * Round robin is a strategy where every process is assigned some amount of time and even if process is still able to run, it is not blocked, it is put back directly into Ready state and the next process is dispactched to running state.\n\n> Which mode should be preffered?\n* Preemptive as it prevents one process from **monopolizing** the processor.\n* This means that a very big process will not block others till it iterminates.\n* Even though there would be some overhead of frequent switching of the process, but its advantage outweighs its disadvantage.\n\n## Process States for Linux\n* ![](/assets/images/2021-09-10-13-24-18.png)\n* Commands related to processes in ubuntu\n    * lscpu = Gives information regarding the processor in your system.\n    * ps -aux = Gives information about the processes that are currently there in the system.\n    * Note: ps itself is the command but it won't provide much information as ps -aux.\n* System calls\n    * fork() = Create a new process\n    * exec() = Execute other programs in current process\n    * wait() = Wait for child process to terminate\n    * exit() = Terminate the execution\n","url":"https://sameep1234.github.io/notes/notes\\oREhPLLLMs4TqeMPSoCK2.html","relUrl":"notes\\oREhPLLLMs4TqeMPSoCK2.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Operating System.Lecture 6","content":"\n# Process Control and Process Management\n\n> Process management will be studied in UNIX SVR4 file system.\n\n## Functions of OS kernel\n* ![](/assets/images/2021-09-06-08-10-29.png)\n* ![](/assets/images/2021-09-06-08-13-17.png)\n* ![](/assets/images/2021-09-06-08-13-59.png)\n\n## Process Creation\n* Once new process is decided to be created, OS performs following tasks\n    * Assigning unique ID.\n    * Allocating space in memory.\n    * Initializing PCB (The most important part of a process).\n    * Setting up of appropriate links.\n    * Creating or expanding other data structures.\n\n## Process Switching\n* For small amount of time, some process will run and then other will run. This time is very small and hence we see it like all the processes are running parallely.\n* Thus, when one process goes away and other process needs to be loaded, this is called process switching.\n* Process switching is totally different than mode switching. In a process execution, there may occur mode switching. \n* Mode switching means switching from user to kernal mode vice versa.\n\n> So why is process gets switched?\n* ![](/assets/images/2021-09-06-08-23-14.png)\n\n* Reasons for switching (Eg.)\n    * Clock interrupt (time slice expired)\n    * I/O Interrupt (an event occured)\n    * Memory fault (trap) - Accessing memory which is not available.\n\n* Mode Switching - When a running process changes its mode from one to other.\n    * While switching the mode, processor state information of PCB is saved (user to kernel) and restored back (kernel to user).\n    * Mode switch, thus becomes the subset of prcess switch.\n    * Thus, process switch will take more time then mode switch.\n* Steps in process switch\n    * ![](/assets/images/2021-09-06-08-28-44.png)\n\n> Is OS a process?\n* Basically OS is a code/program which is in between hardware and application that we run.\n* Designs of OS to explain execution of OS\n    * ![](/assets/images/2021-09-06-08-33-06.png)\n\n## Different designs\n* Non-process Kernel\n* Execution within User Processes\n    * ![](/assets/images/2021-09-06-08-36-42.png)\n* Process-based OS\n    * ![](/assets/images/2021-09-06-08-37-48.png)\n    * More like microkernel architecture.\n\n## Process management in UNIX SVR4\n* SVR4 stands for System V Release 4.\n* **Most** of the the OS executes in user process.\n* System processes - Kernel mode only\n* User Processes\n    * User mode to execute user programs and utilities.\n    * Kernel mode to execture instructions that belong to kernel\n* Process with ID 1 = Linux boots and creates a swapper process which in turn creates init process with ID = 1.\n* This init process creates all the process required to run Linux on boot up.\n* init process works only in kernel mode.\n* Some other process that execute only in kernel mode include dispatcher etc.\n* States\n    * ![](/assets/images/2021-09-06-08-47-29.png)\n    * Fork is the system call used to create new process.\n    * Two extra states\n    * Blocking state is called sleep state.\n    * Zombie state means that process is executed but some imformation realted to data structure and all is still saved for accounting purposes.\n    * Here running state is divided into two parts viz user running state and kernel running state.\n    * At a time, a process can be in either user running state or kernel running state but **not both.**\n    * Preempted is almost similar to ready to run in memory state. In fact they are managed by a common combined queue.\n* UNIX Process Image\n    * A process in UNIX is a set of DS that provide the OS with all the information necessary to manage and dispatch processes.\n    * Process image in UNIX can be categorized as follows\n        * User-Level Context\n            * ![](/assets/images/2021-09-09-11-14-50.png)\n        * Register Context\n            * ![](/assets/images/2021-09-09-11-15-08.png)\n        * System-Level Context\n            * ![](/assets/images/2021-09-09-11-15-54.png)\n            * Most of the information regarding PCB is maintained in process table and they **must be accessible to kernel.**\n            * U Area - Most of the process control information is present in U area. This is also a part of PCB. However, majority of information related to PCB is present in Process table.\n            * Information in U area is accessible to a process only if it is in running state.\n            * 1st and 3rd are static DS means they will not change during the life of a process.\n            * 2nd and 4th are dynamic data structure and will change according to various states of the process.\n* Process Creation in UNIX\n    * fork() is used to create new processes.\n    * ![](/assets/images/2021-09-09-11-26-30.png)\n    ![](/assets/images/2021-09-09-11-27-38.png)\n    * If returned value is 0, it means it is child process and vice versa.\n    * Once child is created, then it depends on the situation which one will execute.\n            \n## Extra Points\n> What is in process table?\n* ![](/assets/images/2021-09-09-11-22-44.png)\n\n> What is in U area?\n* ![](/assets/images/2021-09-09-11-23-18.png)\n","url":"https://sameep1234.github.io/notes/notes\\2mia7HDoJV0UdrV8b0gZF.html","relUrl":"notes\\2mia7HDoJV0UdrV8b0gZF.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Operating System.Lecture 5","content":"\n## Suspended Process\n* It is possible that at one point all the processes are waiting for I/O and processor will remain idle.\n* Issues to address\n    * Processor could be idle most of the time.\n* Solution\n    * **Swap these processes to disk to free RAM and execute some new processes**.\n* Blocked state, thus, becomes suspend state when swapped to disk.\n* Now 5-state gets converted to 6-state model\n\n## 6-state model\n* ![](/assets/images/2021-09-01-08-08-39.png)\n* Notice that blocked processes are transferred to suspended processes but suspened processes are directly transfered to ready state.\n* OS now has two ways\n    * Admit new processes\n    * Activate previously suspended processes\n* Subsets of suspend state\n    * Blocked/Suspend: Process in secondary memory and awaiting an event.\n    * Ready/Suspend: \n\n## 7-state model\n* ![](/assets/images/2021-09-01-08-13-46.png)\n* Newly created process will remain in ready/suspend state until there is memory avaible to move it to ready state.\n* Eg. When booting up, memory is awailable and hence it is possible to directly admit new process into ready state.\n* New state transitions\n    * ![](/assets/images/2021-09-01-08-22-08.png)\n\n## Characterisitcs of suspended processes\n* Process not immediately available for execution because it is in secondary memory.\n* It may or may not be waiting for an event. It may be moved only to free some RAM.\n* \"Agent\" puts the process in suspended state. Agents include either itself (Eg. Some process which occur only periodically), parent procees or OS in order to preclude its execution.\n* Process may not be removed until agent orders the removal. Most of the time agent is OS.\n\n## Reason for process suspension\n* ![](/assets/images/2021-09-01-08-32-36.png)\n\n## Relation between process and resource\n> Recap: OS is a resource manager. Process is a program in execution.\n\n![](/assets/images/2021-09-01-08-38-45.png)\n* **Main memory as a resource means**\n* Virtual memory is extention of secondary memory into main memory.\n* Some part of HDD is considered in RAM.\n\n## Data Structures\n* OS must have information about current status and all processes and all resources.\n* Thus, OS maintains tables for each of the functionalities it offers\n* Memory Table\n    * Keep tracks of main and secondary memory.\n    * Must include information\n        * Allocation of main memory to processes.\n        * Allocation of secondary memory to processes.\n        * Protection attributes for access to shared memory regions.\n        * Information required to manage virtual memory.\n* I/O Table\n    * Manage I/O device and channels of computer.\n    * Must include information\n        * Availability of I/O device.\n        * Status of I/O operation whether I/O device is available or not.\n        * Location in main memory for source and destination\n* File Table\n    * Must include information\n        * Existence of files.\n        * Location on secondary memory.\n        * Current Status.\n        * Others (Who can access? etc.)\n* Process Table\n    * Must include information\n        * Location of **process** in the memory.\n        * Process attributes.\n    * Memory, I/O and files are managed on behalf of processes, so there has to be some reference to these resources in process tables. (Like foreign key)\n\n## Physical manifestation of a process\n> Menifestation means presentation.\n\n![](/assets/images/2021-09-01-08-53-11.png)\n\n* Elements of process image\n    * User Data\n    * User Program\n    * User Stack\n    * Process Control Block (PCB)\n\n## Process Location\n* It is not required in main memory. Someting called virtual memory also exists.\n* Process image is maintained as a contiguous block of memory (**in secondary memory**).\n* Maintained in secondary memory (majority of its part).\n* Some part should be loaded in main or at least in virtual memory.\n* Moreover, to execute process, some part must be in main memory.\n* Thus, only needs to know which parts of process are in main and secondary memory and where are they located.\n\n## Attributes in PCB\n* Process identification\n* Processor state information\n* Process control information\n\n## Process Identification\n* Identifier of this process.\n* Identifier of parent process.\n* User identifier (To which user this process belongs to?)\n\n## Processor state information\n> Processor state is always **stored in register.**\n\n* User Visible registers\n    * Most of the times they are the address registers and data registers\n    * It means that these registes can be directly visible by programs running in user-mode.\n    * Generally they are 8-32 regsiters but some RISC implementations may have over 100.\n* Control and status registers\n    * Program counter - Contains address of the next instruction.\n    * Condition codes - Result of the most recent ALU operation.\n    * Status information - Contains inturrept flags and execution mode (They are also known as program/process status mode).\n* Stack Pointers (Registers)\n    * Process image uses stack to maintain parameters and calling addresses for procedures and system calls.\n    * There could be multiple stacks and each stack has a stack pointer pointing to the top of the stack.\n\n## Process control information\n> Manages additional information that is needed by the OS to control and coordinate the various active processes.\n\n* These include the following\n    * ![](/assets/images/2021-09-09-10-01-56.png)\n    * IPC stands for Inter-process communication\n    * Process privileges includes \"What area can be accessed by the process\" or \"Which mode?\" etc.\n* Scheduling and State information\n    * ![](/assets/images/2021-09-09-10-03-54.png)\n* Data Structuring\n    * ![](/assets/images/2021-09-09-10-04-13.png)\n    * For each state (blocked, ready etc.) there would be one queue and generally they are made using linked list.\n* IPC\n    * ![](/assets/images/2021-09-09-10-05-14.png)\n    * It occurs when two process talk to each other\n* Process privileges\n    * ![](/assets/images/2021-09-09-10-05-56.png)\n    * What kind of file, area of memory etc.\n* Memory Management\n    * ![](/assets/images/2021-09-09-10-06-58.png)\n* Resource Ownership and Utilization\n    * ![](/assets/images/2021-09-09-10-06-39.png)\n\n> ## What does Process image contain?\n* ![](/assets/images/2021-09-09-10-08-11.png)\n\n## Role of PCB\n* It is the most important DS.\n* It contains most of the information regarding a process excpet stack pointers.\n* It manages the processes.\n* Thus, it requires protection.\n    * If not done then,\n        * It may damage the block and destroy OS's ability to manage the processes.\n        * Any change in design will affect many other modules of OS.\n","url":"https://sameep1234.github.io/notes/notes\\BjGodSmGeG11e3UACx3wt.html","relUrl":"notes\\BjGodSmGeG11e3UACx3wt.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Operating System.Lecture 4","content":"\n# Process: Description and Control\n\n## Requirements of OS as a Process Manager\n* Interleave the execution of multiple processes. Here we assume that there is always a single processor system.\n* Allocate resources to processes and protect them from each other.\n* Enable process to share and exchange information. Eg. Parent and Child processes.\n* Enable synchronization among processes.\n\n## Process\n* Program in execution.\n* Instance of program running\n* Entity that can be assigned to and executed on a processor\n* **Unit of activity defined by program, its states and its associated resources.**\n* Process Elements\n    * Program code (generally shared)\n    * Set of data\n    * Attributes that describes the state\n    \n## Attributes\n* Indentifier - Unique ID of each process\n* State - Current situation of the process (Either running or not running)\n* Priority - Self explanatory\n* Program Counter - Keeps information about next process to be executed\n* Memory pointers - Pointers to program code and data to be processed. Along with this, it also includes shared memory blocks.\n* Context data\n* I/O status information - Eg. List of files in use by the process etc.\n* Accounting information - Eg. Time limits, clocks used etc.\n\n> In short the attributes can be called as meta-data.\n\n## Process Control Block (PCB)\n* All the attributes discussed above are part of this block.\n* Basically, it is a type of data structure.\n\n> **Thus, process is a combination of program code, associated data and PCB**\n\n## Running on single resource\n* To manage multiple processes on a single resources then scheduling comes to the picture.\n* Thus, you allocate certain span of time to each process and once it gets finished, immediately another process starts.\n* It gives an appearance that every process runs at the same time because the total time taken by all the process combined is really small.\n* **Trace - List of instructions that are executed by a process.**\n* **Dispatcher - Program that switches the processor from one process to another.** It is a type of short term scheduler.\n\n## Execution of Processes by Processor\n* Suppose that there are some processes which have a lot of instructions to execute. This might take time which is greater than the allocated one.\n* So in the middle of the execution of a process, dispatcher stops the execution and decides which process should go next.\n* Once decided, either execution of new process starts or execution of old process continues.\n* Then, suppose there is an I/O request. Since this is a slow operation, the dispatcher will allow another process to run on the processor.\n* This goes on and on untill all the processes are executed.\n\n> The above method is from **processor POV** and is called **interleaving of processes** and the OS manages this through **dispatcher**. From **process POV**, the process gets executed sequencially.\n\n## Process States\n* Two states\n    * Running\n    * Not running\n* Transition from **not running** to **running** state is called **dispatch** and is called **pause** for the opposite scenario.\n* There can be at most only one process in running state at a given instance of time.\n* There are 'n' number of processes in the non-running state.\n* Thus, to manage all these processes, we need **queue** as the data structure.\n\n## Note\n* The below picture lists conditions under which a process can be created or terminated.\n* ![](/assets/images/2021-08-29-15-16-50.png)\n\n* Process spawning means event where a process creates a new process.\n\n## 5-State Process Model\n* Conditions when the process which is running will pause and enter in the queue:\n    * Time slot alloted to the process is over.\n    * Made some I/O request which may take time.\n* Now, dispatcher needs to identify which processes are ready to be executed and then dispatch it from the middle of the queue.\n* This process is time consuming and complex.\n* To resolve this, OS must maintain multiple queues. Since there are two types of processes, one who did not terminate but their allocated time got over and others who are waiting for I/O or other resouces.\n* This, in turn is the 5-state process model.\n* Total states in this model\n    * New - Process that has just been created but not admitted to the pool of the ready state processes.\n        * **Not loaded in main memory but is created.**\n        * This means that PCB for that process has been created but its corresponding data and program has not been loaded/created in the main memory.\n    * Ready\n    * Blocked/Waiting\n    * Running\n    * Exit (Earlier it was not a state but now it is) - Process which has been released from the pool of processes.\n        * However, there is some part of PCB left in main memory for accounting.\n\n![](/assets/images/2021-08-29-15-32-07.png)\n\n## State Transitions\n\n* ![](/assets/images/2021-08-29-15-36-29.png)\n\n* Ready and Blocked process can enter directly to exit state when its parent process has terminated or the process is terminated by the OS.\n* When process spawning occurs, then child process is created in the new state.\n* Hang state is equivalent to blocked/waiting state.\n\n## Multiple Blocked Queue\n* Suppose there are 10 processes which are in blocked queue waiting for HDD to get accesible and there are 90 processes that are in hang mode.\n* Now once HDD is ready to be accessed, OS will have to search this blocked queue and move all these processes to ready state.\n* This is again time consuming and complex. Hence multiple blocked queue model emerged.\n\n![](/assets/images/2021-08-29-15-48-46.png)\n","url":"https://sameep1234.github.io/notes/notes\\5th40SAttRbGJ4HOcWaM9.html","relUrl":"notes\\5th40SAttRbGJ4HOcWaM9.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Operating System.Lecture 3","content":"\n\r\n# System Calls and Architecture of UNIX\r\n\r\n## Intro to system calls\r\n* System calls are the most important and crucial concept in OS. It is basically a link connecting user to the OS.\r\n* Formally, it is a **programming interface (like waiter connecting customers to kitchen in a restaurant)** to use the services provided by the OS. They are the programs that help give access to the functionalities provided by the OS.\r\n*  They are written in a high-level language like C or C++.\r\n* POSIX API is used for Linux and Win32 API is used for windows.\r\n\r\n## Implementation of System Call\r\n* Associated with each function call. Eg. If you call a function printf() in C, then it internally calls an associated system call telling the OS to display the written part on the scree.\r\n* Every OS have a list of system call along with ID's.\r\n* System call interface maintains a table with ID's as indices.\r\n* This interface invokes a particular system call in OS kernel and returns the status and return-values if any.\r\n* Details are hidden from programmer by the API.\r\n\r\n## Relationship between API, System Call and OS\r\n\r\n![](/assets/images/2021-08-29-10-48-06.png)\r\n\r\n## Types of system calls\r\n* File Management - Eg. create, open, close etc.\r\n* Device Management - request, release, read, write etc.\r\n* Protection - control access, get and set permissions etc.\r\n* Information maintenance - get time, set process etc.\r\n* Communications - create, delete communication, send or recieve messages etc.\r\n\r\n### Architecture of UNIX\r\n\r\n* ![](/assets/images/2021-08-29-11-08-15.png)\r\n\r\n* UNIX is an OS just like Linux.\r\n* In fact linux is based on UNIX but is more complicated than UNIX.\r\n* UNIX system follows monolithic approach\r\n* UNIX System Kernel\r\n\r\n![](/assets/images/2021-08-29-11-10-53.png)\r\n\r\n* **In Linux or UNIX, everything is in terms of files. Thus, it becomes crucial to understand file system.**\n","url":"https://sameep1234.github.io/notes/notes\\iwC11xUes40umcvnmZiTU.html","relUrl":"notes\\iwC11xUes40umcvnmZiTU.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Operating System.Lecture 2","content":"\n\r\n# Evolution of OS and Kernel\r\n\r\n## Evolution of OS\r\n* Serial Processing\r\n* Simple Batch Systems\r\n* Multiprogrammed Batch Systems\r\n* Time Sharing Systems\r\n* many others\r\n\r\n## Serial Processing\r\n* There was no OS.\r\n* To run the program, we would have to type a command for everything.\r\n* A program at that time was called a job which is a set of instructions along with the data on which the instructions need to be executed.\r\n* Issues\r\n    * Scheduling\r\n        * Fixed amount of time allocated to each instruction.\r\n        * Conflict between instructions requiring more or less time.\r\n    * Setup Time\r\n        * Loading of compiler and program is time consuming\r\n\r\n## Simple Batch System\r\n* Monitor Program were used which were kind of OS - A very rudimentary OS.\r\n* It is a software that controls the sequence of events.\r\n* No direct access to users unlike Serial Processing.\r\n* Job is submitted to an operator who batches similar instructions together and places them on the input device/hardware.\r\n* In this way, the time consumed is averaged out and the processor can be utilized to its maximum.\r\n* Control is given back to monitor after program gets terminated.\r\n\r\n> Monitor is a special program that manages execution of each program in the **batch**. It controls the sequence of events. Resident monitor (another name for simple monitor) is software always in memory. It reads in job and gives control to the processor which in turn returns the control back to monitor\r\n\r\n> Processor executes instructions from the memory i.e monitor which resides in the memory. It gains control from monitor to execute the task and once completed returns the control to monitor.\r\n\r\n> JCL (Job control language) - It is a programming language that provides instruction to the monitor about the compiler and data to be used.\r\n\r\n* Modes of operation\r\n    * User mode (Analogy: Normal Mode) - Programs submitted by the user to the memory are executed in this mode. **Not all instructions may be executed.**\r\n    * Kernal mode (Analogy: Admin Mode) - Part of a modern OS that actually performs I/O Management, Process Management etc. Nowadays, we have many other utility programs running which are a part of OS, but kernal is the most important one which manages the above mentioned things.\r\n\r\n* Issues\r\n    * Processor remains idle.\r\n    * Slow compared to processor even with automatic job sequence.\r\n\r\n![](/assets/images/2021-08-28-23-38-27.png)\r\n\r\n## Uniprogramming\r\n\r\n> Processor must wait for I/O instruction to complete before proceeding further.\r\n\r\n## Multiprogramming\r\n\r\n> Opposite of uniprogramming. Still there will be some waiting time but at least it can be reduced and hence is better than uniprogramming.\r\n\r\n## Time sharing systems\r\n* The program is being shared through different users and different monitors. Thus, can be used to handle multiple interactive jobs.\r\n* Processor time is shared among multiple users.\r\n* This time is in milli or micro seconds. This is called short burst or quantum of computation.\r\n\r\n![](/assets/images/2021-08-29-00-06-36.png)\r\n\r\n## OS Structure\r\n* *For general purpose OS, the program is very large.*\r\n* Ways to structure OS\r\n    * Monolitic Approach (Analofy coding in C where there are no classes) - Everything combined in one place.\r\n        * Eg. Older LINUX and UNIX\r\n        * Advantages\r\n            * Speed as everything is connected\r\n            * Performance\r\n        * Disadvantages\r\n            * Difficult to maintain and modify\r\n    * Layered Approach - OS divided into number of layers.\r\n        * Layer 0 = hardware and Layer n = user interface layer\r\n        * A particular layer can use functions and services of **lower-level layers only (layers below it).**\r\n        * Eg. Older windows versions\r\n    * Microkernels - Move as much functionalities as possible to user mode from kernel mode. \r\n        * Unlike that in layered and monolithic where majority of the functionalities is available in only kernal mode.\r\n        * I\\O and interrupt management, primitive memory management, inter-process communication and basic scheduling were kept in kernel mode.\r\n        * All other functionalities will be running in user mode.\r\n        * Advantages\r\n            * Time is reduced significantly as the time to change the mode from user to kernel and vice versa is almost completely diminished.\r\n            * Porting of OS to newer architecture becomes easier (will be covered in upcoming lectures).\r\n            * More reliable because less code is running in kernel mode.\r\n            * More secure as less code has to be valudated in kernel.\r\n        * Disadvantages\r\n            * Performance overhead to change the mode.\r\n        * Eg. Mach, MINIX, Windows NT Client-Server\r\n    * Modules - Most moedern OS implement kernel modules\r\n        * These are loadable kernel module\r\n        * Uses OOP\r\n        * Similar to layers but is more flexible\r\n        * Eg. Device Drivers (These are loaded as needed within the kernel)\r\n        * Solaris Modular Approach (will be covered in upcoming lectures).\r\n    * Hybrid Approach - Combines multiple approaches to address performance, security and usability.\r\n        * Eg. Linux and Solaris = monolithich + modular, windows = monolithic + microkernel and Mac OS and IOS = Darwin which is microkernel and BSD Unix kernel implemented over layered model\n","url":"https://sameep1234.github.io/notes/notes\\DuyqCiM0madNn92jbmrbQ.html","relUrl":"notes\\DuyqCiM0madNn92jbmrbQ.html"},{"doc":"Lecture 15","title":"Lecture 15","hpath":"courses.Semester 5.Operating System.Lecture 15","content":"\n# Producer/Consumer (Cont.)\n\n> The question was what would happen if we changed the order in which semaphores are released?\n\n* Assume that in consumer, we are waiting for delay to restore. It is possible that before realeasing semaphore s, it waits for delay. Since producer is waiting for s and consumer is waiting for producer to restore delay, a condition called deadlock is created.\n* To solve this, we use a local variable to store the value of n in consumer and we are goot to go.\n\n## Solution using General Semaphores\n* ![](/assets/images/2021-10-24-17-47-13.png)","url":"https://sameep1234.github.io/notes/notes\\P2vNJv8oCEB07qYCfwef9.html","relUrl":"notes\\P2vNJv8oCEB07qYCfwef9.html"},{"doc":"Lecture 14","title":"Lecture 14","hpath":"courses.Semester 5.Operating System.Lecture 14","content":"\n# Semaphores\n\n## Primitives\n* The fundamental principle is that two or more processes can cooperate by means of simple signals, such that a process can be forced to stop at a specified place until it has recieved a specific signal.\n* The three operations that it is allowed are initialization, decrement and increment.\n* ![](/assets/images/2021-10-24-17-05-31.png)\n* count represents how many initial processes can enter a critical section and thus is generally initalized to 1.\n* Binary Semaphore Primitives\n    * ![](/assets/images/2021-10-24-17-14-54.png)\n\n## Strong and Weak Semaphore\n* ![](/assets/images/2021-10-24-17-17-13.png)\n\n## Mutual Exclusion through Semaphore\n* ![](/assets/images/2021-10-24-17-18-14.png)\n* **mutex** is similar to binary semaphore, the only difference is that the process which called signal is the only one who can unblock the critical section by calling semwait whereas it was vice versa in binary semaphores.\n\n## Producer/Consumer Problem\n* ![](/assets/images/2021-10-24-17-22-44.png)\n* ![](/assets/images/2021-10-24-17-23-25.png)\n* For now assume that buffer is infinite.\n    * ![](/assets/images/2021-10-24-17-24-44.png)\n    * ![](/assets/images/2021-10-24-17-27-25.png)\n    * ![](/assets/images/2021-10-24-17-28-04.png)\n    * 'n' represents how many items can be consumed.\n    * 's' is the semaphore used for mutual exclusion whereas 'delay' is the semaphore used for synchronization between producer process and consumer process.\n    * We have used binary semaphore here.\n    * The consumer will wait untill producer starts producing.\n    * Issues\n        * ![](/assets/images/2021-10-24-17-33-42.png)\n        * ![](/assets/images/2021-10-24-17-36-03.png)\n        * Process switch is not handled properly.","url":"https://sameep1234.github.io/notes/notes\\ICHVGmEuVKOKYojlCpdyD.html","relUrl":"notes\\ICHVGmEuVKOKYojlCpdyD.html"},{"doc":"Lecture 13","title":"Lecture 13","hpath":"courses.Semester 5.Operating System.Lecture 13","content":"\n# Hardware and Software Approaches for Mutual Exclusion\n\n## Special Machine Instructions\n* ![](/assets/images/2021-10-13-10-18-47.png)\n\n## Compare&Swap Instruction\n* ![](/assets/images/2021-10-13-10-19-43.png)\n* *word is the **memory location** that we are going to test.\n*  ![](/assets/images/2021-10-13-10-20-57.png)\n* ![](/assets/images/2021-10-13-10-22-07.png)\n* Note that bolt is a global variable.\n* Thus, at a time only one process can be in the critical section.\n\n## Exchange Instruction\n* The instruction exchanges the contents of a register with that of a memory location.\n* ![](/assets/images/2021-10-17-23-08-36.png)\n* ![](/assets/images/2021-10-17-23-15-14.png)\n\n## Advantages of Hardware Approach\n* ![](/assets/images/2021-10-17-23-12-09.png)\n\n## Disadvantages of Hardware Approach\n* ![](/assets/images/2021-10-17-23-15-45.png)\n* ![](/assets/images/2021-10-17-23-17-31.png)\n\n## Software Approaches\n* When you write your own program, you try to achieve mutual exclusion.\n* Attempt 1\n    * ![](/assets/images/2021-10-17-23-19-32.png)\n    * Suppose process 0 needs to enter into critical section every hour and process 1 needs to enter the critical section 1000 times in an hour.\n    * Now, it is suppose process 0 exits the critical section and allows process 1 to enter.\n    * turn variable is set 0 for the next 1 hour because process 0 is not going to go in the critical section.\n    * This means that process 1 will suffer.\n    * Secondly, if one process fails, the other process is permanently blocked.\n* Attempt 2\n    * ![](/assets/images/2021-10-17-23-24-37.png)\n    * In this attempt, we continuously check the flag of other process and if it is false, then only enter the critical section.\n    * Furthermore, lock the critical section by toggling the flag and once the process leaves the critical section, toggle the flag to free the critical section for other processes.\n    * Lets say process 0 gets switched after executing the first line.\n    * The problem is obvious then. **We can't acheive mutual exclusion.**\n* Attempt 3\n    * ![](/assets/images/2021-10-17-23-42-42.png)\n    * Deadlock situation can arrise if one instruction per process is executed.\n* Attempt 4\n    * ![](/assets/images/2021-10-17-23-46-03.png)\n    * Livelock situation can arrise if delay are same because both will check at the same time.\n    * Similar situation can arrise if one instruction is executed at a time.\n\n## Dekker's Algorithm\n* ![](/assets/images/2021-10-17-23-49-52.png)\n* ![](/assets/images/2021-10-17-23-50-05.png)\n* Each process first says that I want to enter with turning flag = true.\n* Then it checks other processes and whether they are in the critical section or not by checking flag as well as turn variables.\n* Then waits if both are true and vice versa.\n\n## Peterson's Algorithm\n* ![](/assets/images/2021-10-17-23-53-55.png)\n* It is reduced and less complex then dekker's algorithm.\n* Correctness\n    * ![](/assets/images/2021-10-17-23-54-58.png)","url":"https://sameep1234.github.io/notes/notes\\DNVMAERWrj3HKJidtLnpT.html","relUrl":"notes\\DNVMAERWrj3HKJidtLnpT.html"},{"doc":"Lecture 12","title":"Lecture 12","hpath":"courses.Semester 5.Operating System.Lecture 12","content":"\n# Concurrency\n\n## Principles of Concurrency\n* ![](/assets/images/2021-10-12-23-55-10.png)\n* Interaction of processes mean sharing, synchronization etc.\n* ![](/assets/images/2021-10-12-23-56-09.png)\n\n## Key Terms\n* ![](/assets/images/2021-10-12-23-59-05.png)\n* ![](/assets/images/2021-10-12-23-59-21.png)\n* Greatest example of deadlock is traffic jam at a cross road where none of the cars are able to move.\n* ![](/assets/images/2021-10-13-00-00-27.png)\n* Race Condition: Suppose that two threads are trying to change a variable's value.\n* The final value will be defined by that thread which executes later and thus realtive timeing of execution is important.\n* Uniprocessor\n    * ![](/assets/images/2021-10-13-00-02-50.png)\n* Multiprocessor\n    * ![](/assets/images/2021-10-13-00-03-49.png)\n\n## Difficulties in Concurrency\n* ![](/assets/images/2021-10-13-00-04-49.png)\n* If the global resource is not handled properly than it might be left in some adverse state which is not desired.\n\n## Enforce Single Access\n* ![](/assets/images/2021-10-13-00-11-05.png)\n* This method is similar to that of Serial programming whereas each process is executed one after the other.\n\n## OS Role in solving difficulties\n* ![](/assets/images/2021-10-13-00-13-01.png)\n* Recap: OS keeps track of various processes with the help of PCBs.\n\n## Process Interaction\n* ![](/assets/images/2021-10-13-00-14-30.png)\n* Renewable resource means that a resource that can be used by other process even after completion of one process. Eg. Printer\n* Consumable resource means that a resource that can not be used by other processes after completion of one process. Eg. Message communication.\n\n## Mutual Exclusion\n* Requirements\n    * ![](/assets/images/2021-10-13-00-22-32.png)\n    * ![](/assets/images/2021-10-13-00-24-38.png)\n    * ![](/assets/images/2021-10-13-00-26-53.png)\n    * Critical section means a particular code section which uses the same shared resource.\n\n## Approaches to Mutual Exclusion\n* ![](/assets/images/2021-10-13-00-27-54.png)\n* ![](/assets/images/2021-10-13-00-28-37.png)\n* Support from Programming language or OS - Java has synchronize constructor (will be covered in depth later).\n\n## Hardware Support for Mutual Exclusion\n* Disabling Interrupts\n    * ![](/assets/images/2021-10-13-00-30-01.png)\n    * Suppose a process is in critical section and is executing an operation on I/O.\n    * If, due to some reasons, the process is interrupted and blocked, then only the other process has the chance of getting executed in the same critical section.\n    * This can be thus solved by disabling the interrupts before entering the critical section.\n    * Issues\n        * ![](/assets/images/2021-10-13-00-32-45.png)\n    * Solution\n        * ![](/assets/images/2021-10-13-00-33-48.png)\n        * ![](/assets/images/2021-10-13-00-34-32.png)\n        * ![](/assets/images/2021-10-13-00-34-49.png)\n        * Refer book for more info on compare and swap and exchange instruction.\n\n## Extra Points\n* ![](/assets/images/2021-10-13-00-21-32.png)","url":"https://sameep1234.github.io/notes/notes\\iNXeDmEvd3nkVwKpwVRsl.html","relUrl":"notes\\iNXeDmEvd3nkVwKpwVRsl.html"},{"doc":"Lecture 11","title":"Lecture 11","hpath":"courses.Semester 5.Operating System.Lecture 11","content":"\n# Threads\n\n## Introduction\n* ![](/assets/images/2021-10-12-16-45-08.png)\n* The unit of dispatching is referred to as a thread or lightweight process.\n* Thus, to define thread, we can say that it is an independent path of execution of instruction.\n* The unit of resource ownership is referred to as a process or task.\n\n## Multithreading\n* ![](/assets/images/2021-10-12-16-47-59.png)\n* Threads, in  greneral, run the same set of instructions. \n* However, it might be the case where the interaction with client make some more instructions to execute or some instructions to get skipped.\n* Eg. Server pool of threads for each client, Word program checking spelling and displaying output at the same time.\n\n## Single Thread approach and Multi thread approach\n* ![](/assets/images/2021-10-12-16-52-16.png)\n* ![](/assets/images/2021-10-12-16-53-25.png)\n\n## Relationship between process and multithreading\n* ![](/assets/images/2021-10-12-16-55-14.png)\n\n## Multithreaded environment\n* When we have one or more threads in process, each thread has the following\n    * ![](/assets/images/2021-10-12-16-57-25.png)\n* Theoritical Definition: Thread is an **independent** program counter operating **within** a process.\n\n## Thread vs Process\n* ![](/assets/images/2021-10-12-17-00-26.png)\n* Recap: User address space contains the program and the data.\n* Thus, we can see that the user address space is shared with multiple threads within the same process.\n\n## Benefits of threads\n* ![](/assets/images/2021-10-12-17-04-46.png)\n\n## Case study - File Server Application\n* ![](/assets/images/2021-10-12-17-06-59.png)\n\n## Single User System\n* In file server, we can have multiple client requests and multiple threads, but in single user system, it is not the case.\n* Foreground/Background processes can be handled using threads individually.\n* Asynchronous Processing - Eg. Backing up in background.\n* Faster Execution - Read one set of data while processing another set.\n* Organization - Eg. For a word processing program, may allow one thread for each file being edited.\n\n## Management of thread at process level and similarities with processes\n* ![](/assets/images/2021-10-12-17-11-53.png)\n* ![](/assets/images/2021-10-12-17-12-55.png)\n\n## Thread states and its operations\n* ![](/assets/images/2021-10-12-17-13-25.png)\n* ![](/assets/images/2021-10-12-17-14-36.png)\n\n## Remote Procedure Call\n* It means that from one program, we are calling a procedure of another program in the remote machine.\n* Distributed computing concept starts with RPCs.\n* ![](/assets/images/2021-10-12-17-16-34.png)\n* Single Thread Model\n    * ![](/assets/images/2021-10-12-17-16-55.png)\n* Multi Thread Model\n    * ![](/assets/images/2021-10-12-17-17-52.png)\n\n## Uniprocessor Multithreading\n* ![](/assets/images/2021-10-12-17-19-06.png)\n\n## Thread Synchronization\n* ![](/assets/images/2021-10-12-17-20-26.png)\n* ![](/assets/images/2021-10-12-17-23-12.png)\n\n## Categories of Thread Implementation\n* User Level Threads (ULT)\n    * ![](/assets/images/2021-10-12-19-32-18.png)\n    * Java supports ULT.\n    * Suppose that a thread is running and makes a system call.\n    * Since, it made a system call, it must go through the kernel.\n    * The kernel is not aware about the thread, it is only aware about the process and thus, the whole process gets blocked.\n    * Overall, the process state and thread state may not change simultaneously or concurrently.\n    * Advantage\n        * ![](/assets/images/2021-10-12-19-41-26.png)\n        * ![](/assets/images/2021-10-12-19-41-38.png)\n        * The different scheduling is done only for application and not done by the kernel as kernel is not aware about the threads.\n        * ![](/assets/images/2021-10-12-19-43-51.png)\n    * Disadvantage\n        * ![](/assets/images/2021-10-12-19-44-22.png)\n        * ![](/assets/images/2021-10-12-19-44-39.png)\n* Kernel Level Threads (KLT)\n    * ![](/assets/images/2021-10-12-22-45-15.png)\n    * Advantages\n        * ![](/assets/images/2021-10-12-23-45-11.png)\n    * Disadvantages\n        * ![](/assets/images/2021-10-12-23-45-33.png)\n\n## Combined Approach\n* ![](/assets/images/2021-10-12-23-49-04.png)\n* Eg. Solaris uses this approach.\n\n## Thread and Process\n* ![](/assets/images/2021-10-12-23-49-57.png)\n* For 1:M, at a time, a thread belongs to one process.","url":"https://sameep1234.github.io/notes/notes\\XV4krgl1Xqw99yjO9sLyX.html","relUrl":"notes\\XV4krgl1Xqw99yjO9sLyX.html"},{"doc":"Lecture 10","title":"Lecture 10","hpath":"courses.Semester 5.Operating System.Lecture 10","content":"\n# Scheduling Algorithm (Cont.)\n\n## Fair-share scheduling\n* ![](/assets/images/2021-09-28-17-22-11.png)\n* ![](/assets/images/2021-09-28-22-08-43.png)\n* ![](/assets/images/2021-09-28-22-10-49.png)\n* ![](/assets/images/2021-09-28-22-13-43.png)\n* The algorithms discussed till now does not include who is the user that created the process, which groups are being used etc.\n* This algorithm takes care of such things.\n* Please note that fair share does not necessarily mean equal, but it can also mean that if weight assigned to a process is more, the work completed by it is expected to be more in the long run.\n* Implementation\n    * ![](/assets/images/2021-09-28-22-17-59.png)\n    * ![](/assets/images/2021-09-28-22-23-39.png)\n* Some calculation\n    * ![](/assets/images/2021-09-28-22-25-10.png)\n    * CPUj(i) means time utilized by a process j till \"i\" interval.\n    * ![](/assets/images/2021-09-28-22-29-51.png)\n    * The second point can be easily visualised with the help of formula.\n* Example\n    * ![](/assets/images/2021-09-28-22-37-44.png)\n    * It is given in the question that the Process B and C combined are assigned 50% and Process A alone is assigned 50% weightage.\n\n## Traditional (older) UNIX Scheduling\n* ![](/assets/images/2021-09-28-22-39-46.png)\n* Some calculations\n    * ![](/assets/images/2021-09-28-22-42-57.png)\n* ![](/assets/images/2021-09-28-22-43-23.png)\n* The purpose of the nicej is to maintain that the priority of any particular process does not go too down with increasing value of CPUj(i) and remains between the **assigned band.**\n* Types of band with **decreasing order of priority**\n    * ![](/assets/images/2021-09-28-22-46-13.png)\n    * From the above figure, we can conclude that the swapper band has the highest priority whereas the user processes have the lowest priority.\n* Example\n    * Note that in the below example, we are only considering **user processes.**\n    * ![](/assets/images/2021-09-28-22-49-26.png)\n    * **Note that the process which will be executing next will be that whose priority value is lowest which means highest priority.**\n","url":"https://sameep1234.github.io/notes/notes\\HaLC0S6nmXGxECDqZ0RXF.html","relUrl":"notes\\HaLC0S6nmXGxECDqZ0RXF.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Operating System.Lecture 1","content":"\n# Introduction to Operating System\n\n## Course Material\n* Textbook - Operating Systems: Internals and Design Principles, 9th Edition, by William Stallings, Pearson\n\n## Computing System\n\n> Basic purpose is to perform computation on input data and generate results\n\n* Comprised of hardware, software and data.\n* Secondary storage stores all the programs (like code in C).\n* To execute it, first load it into the memory (RAM).\n* For any program to run by the processor, first fetch, then execute and then finally check for the interrupts.\n\n> Operating System will perform the task of loading the program from secondary memory (Hard Disks) to main memory (RAM)\n\n## Functions of OS\n* I/O Management\n* Process Management\n* Memory Management\n* File Management\n\n> Operating system is a program that acts as an intermediary between a user of a computer and the computer hardware.\n\n## Objectives of OS\n* Convenience - Makes computer easy to use\n* Efficiency - Manages resources efficiently\n* Ability to evolve - Easy to adapt changes\n\n## Users of Computing System\n* End User - Use the application as it is. Eg. Excel Users\n* Programmer - Developing applications. Need to understand utility programs and OS\n* Operating System Designer/System Level Programmer - Creates OS/**Works with computer hardware**/Develop or write a driver\n\n> Driver is a piece of software that understands a hardware. It understands the internals of the attached hardware.\n\n## Services provided by OS\n\n> Through these services OS attains \"Convenience\".\n\n* Program development\n* Program execution\n* Access I/O devices (Eg. CDs, Pendrives)\n* Controlled access to files (Provides protection in multi-access systems (Eg. Multiple users in same laptop))\n* System access\n* Error detection and response (Eg. Errors in reading CDs)\n* Accounting (Collect usage statistics/Monitor performance)\n\n## Resource Management\n* Movement\n* Storage\n* Processing of data\n\n> OS is a program that is executed by the CPU! (Kind of ironic. OS handles CPU but is executed by CPU XD)\n","url":"https://sameep1234.github.io/notes/notes\\NilMPClAkIcBxY9gXn4hR.html","relUrl":"notes\\NilMPClAkIcBxY9gXn4hR.html"},{"doc":"Material Science and Engineering","title":"Material Science and Engineering","hpath":"courses.Semester 5.Material Science and Engineering","content":"\n","url":"https://sameep1234.github.io/notes/notes\\SkPPj7voTTRpF7d0XMYNV.html","relUrl":"notes\\SkPPj7voTTRpF7d0XMYNV.html"},{"doc":"Lecture 9","title":"Lecture 9","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 9","content":"\n# Burger Vector\n","url":"https://sameep1234.github.io/notes/notes\\gi1QE3CwwwrRaE0vOW9cq.html","relUrl":"notes\\gi1QE3CwwwrRaE0vOW9cq.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 8","content":"\n","url":"https://sameep1234.github.io/notes/notes\\gZWdHxe7beJXxLOmqBZDk.html","relUrl":"notes\\gZWdHxe7beJXxLOmqBZDk.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 7","content":"\n","url":"https://sameep1234.github.io/notes/notes\\rucqsOq5X9zXPptJHo7F9.html","relUrl":"notes\\rucqsOq5X9zXPptJHo7F9.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 5","content":"\n# X-ray Diffraction (XRD)\n\n> Diffraction occurs when a eave encounters a series of regularly shaped obstacles that are capable of scattering the wave and have spacings that are comparable in magnitude to the wavelength.\n\n## Key Points\n* [Site](http://calistry.org/calculate/latticePlanesMillerIndices) to view miller indices and planes easily.\n* When two waves are in sync with the phase of each other, it is called constructive interference and vice versa.\n* In case of constructive interference, the amplitude of the final wave will be added and vice versa.\n* X-Rays are a form of electromagnetic radiation that have high energies and short wavelengths of the order of the atomic spacings for solids.\n* ![](/assets/images/2021-09-08-14-54-08.png)\n* Here d = interplanar spacing and will remain the same for a particular material.\n* We would be using copper k-alpha. Advatage is immediate cooling of the metal.\n* Copper k-beta gives very low intensity and hence is avoided for XRD study.\n* Wavelength of XRD = 1.54 angstrom (fixed for all calculation).\n* **For diffraction to occur, 2dsin($\\theta$) = n$\\lambda$ must be satisfied where n = order of reflexion.**\n* **Always take n=1 unless specified. n = 1 implies first order diffraction.**\n\n> Key Question: How to decide which element to take (like Copper, Molebdenum or Cobalt)?\n* So in such cases, first we check the intentsity and then the d-spacing as it remains the same for the same material.\n\n## X-Ray Diffractogram Image\n* ![](/assets/images/2021-09-18-09-10-15.png)\n\n## Bragg's law\n* ![](/assets/images/2021-09-08-14-47-40.png)\n* It is the relationship among x-ray wavelength, interatomic spacing and angle of diffraction for **contructive interference.**\n* **Note that if the bragg's law is not satisfied then the destructive interference will occur and a very low-intensity diffracted beam will be produced.**\n\n## X-Ray Diffractogram\n> Curve between intensity and diffraction angle (2$\\theta$).\n\n## How to identify which crystal structure? (SC, BCC or FCC)\n* For that we have to calculate $h^2$ + $k^2$ + $l^2$ where h,k and l are the miller indices.\n* Then use the below image.\n    * ![](/assets/images/2021-09-08-16-03-14.png)\n    * For SC, always calculate till 8th step and **show that 7 is absent/missing.**\n    * If 7 comes in the series then multiply the whole series with 2 to get BCC structure.\n    * ![](/assets/images/2021-09-08-16-50-04.png)\n\n## How to identify material based on lattice parameter?\n* First thing to **remember** is that angle is **2$\\theta$** with **intensity.**\n* Then use the below image to follow the steps.\n    * ![](/assets/images/2021-09-09-07-53-22.png)\n    * **Note: 2$\\theta$ values may differ based on XRD**\n    * Now, if any of the first 3 columns comes whole integer, then we get our $h^2$ + $k^2$ + $l^2$.\n    * Otherwise, we go on multiplying with 4, then with 5 and so on untill we get a whole integer and that becomes the value of $h^2$ + $k^2$ + $l^2$.\n    * To calculate a, find average of the **peaks**.\n","url":"https://sameep1234.github.io/notes/notes\\H0BgcOKxQkTg1e7v0sq05.html","relUrl":"notes\\H0BgcOKxQkTg1e7v0sq05.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 4","content":"\n\r\n# Directions and Planes\r\n\r\n## Points to ponder (**Lecture 3**)\r\n* Each corner atom in a unit cell contribute 1/8 in cubes and 1/6 in hex.\r\n* Body center atom contribute 1 and face atoms contribute 1/2.\r\n* For hcp number of atoms in the unit cell is 6. (3 BC (contribute 1), 2 FC (contribute 1/2), 12 Corner (contribute 1/6))\r\n\r\n## Density Computation\r\n* $\\rho$ = $\\frac{nA}{VcNa}$\r\n* Here $\\rho$ is the density, n is the number of atoms in a unit cell, A is the atomic mass of the element, Vc is the volume of unit cell and Na is the avogadro's number.\r\n* **Note that this density is theoretical and not measured. There is some discrepancy between the two.**\r\n\r\n## Crystal Directions\r\n> These include linear density and planar density\r\n\r\n* ![](/assets/images/2021-08-29-18-16-42.png)\r\n\r\n> Always divide by the biggest number. Eg. 4th case in the above image.\r\n\r\n## Extra points\r\n* To represent direction, use square brackets.\r\n* To represent plane, use round brackets.\r\n* Parallel planes belong to the same **family** of planes.\r\n* To represent family of planes, use curly brackets.\r\n* To represent family of directions, use angular brackets.\r\n* There should not be comma between numbers in either of the cases.\r\n* Negative coordinates are also possible and are represented by a bar over the number.\r\n* For hcp, the coordinate system is different and contains one more extra coordinate in the xy plane.\r\n* We calculate it using the below formula.\r\n    * ![](/assets/images/2021-09-17-21-44-05.png)\r\n* Lattice parameters include the three edge lengths (a, b, c) and the three interaxial angles ($\\alpha$, $\\beta$, $\\gamma$).\r\n\r\n\r\n> Why are planes in a lattice important?\r\n* Determining crystal structure\r\n* Plastic deformation\r\n* Transport properties\r\n\r\n## Miller Indices\r\n* This is one of the information required to study X-Ray defractogram\r\n* Procedure to find these indices\r\n    * Note the intercepts made by plane in terms of **lattice constants** a,b and c.\r\n    * Note the coefficient of the intercepts.\r\n    * Find inverse of them.\r\n    * Find LCM and multiply them by LCM.\r\n    * These points that you get are the Miller indices.\r\n\r\n> Example of calculating Miller indices\r\n\r\n![](/assets/images/2021-08-29-18-27-28.png)\r\n\r\n## How to draw planes?\r\n* First get the miller indices.\r\n* **Be careful about what is given, if intercepts are given the  calculate miller indices otherwise directly use miller indices provided.**\r\n* Simply select an origin and the plane must pass through the miller indices.\r\n* Make sure to treat miller indices as simple coordinates.\r\n\r\n## Angle between planes\r\n![](/assets/images/2021-08-29-18-43-28.png)\r\n\r\n## Linear and Planar Density\r\n![](/assets/images/2021-08-29-18-45-11.png)\r\n\r\n* This is **atomic** density.\r\n* FCC Structure\r\n    * Case 1 (100)\r\n        * Linear Density = $\\frac{number of atoms}{length of the vector}$ = $\\frac{1}{a}$\r\n        * Planar Density = $\\frac{number of atoms}{area of the plane}$ = $\\frac{2}{a^2}$\r\n    * Case 2 (110)\r\n        * Linear Density = $\\frac{2}{\\sqrt{2}a}$\r\n        * Planar Desity = $\\frac{2}{\\sqrt{2}a^2}$\r\n    * Case 3 (111)\r\n        * Linear Density = $\\frac{1}{\\sqrt{3}a}$\r\n\r\n## Points to Ponder\r\n* For the area for calculation of planar density, follow these steps\r\n    * Imagine the plane and the crystal lattice.\r\n    * Use [this site](http://calistry.org/calculate/latticePlanesMillerIndices) for better visualization.\r\n    * The corner atoms will contribute 1/4 to the area, the face atoms will contribute 1/2 to the area and the body centered atoms will contribute 1 to the area.\n","url":"https://sameep1234.github.io/notes/notes\\P6hS8rnnzYatrcl2pNkoI.html","relUrl":"notes\\P6hS8rnnzYatrcl2pNkoI.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 3","content":"\n\r\n# Crystal Lattice\r\n\r\n### Sorry for the inconvinience but please refer this [site](https://unread.parthshah.ml/notes/omAwLOv3wYSYrihgzYlu4.html) for lecture 3 notes.\r\n\r\n## Extra Points\r\n* A crystalline material is one in which the atoms are situated in a repeating or periodic array over large atomic distances.\r\n* **Keep in mind that while calculating coordination number, it is the lattice which is considered and not the unit cell. A lattice a combination of unit cells.**\n","url":"https://sameep1234.github.io/notes/notes\\FuSEupSRICAtvtzK1dcEZ.html","relUrl":"notes\\FuSEupSRICAtvtzK1dcEZ.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 2","content":"\n\r\n# Atomic Structure, Bonding and Energy\r\n\r\n## Classification of materials\r\n![](/assets/images/2021-08-28-10-22-07.png)\r\n\r\n* Types of materials\r\n    \r\n    * Semiconductor\r\n    * Polymer\r\n    * Metals\r\n    * Ceramics\r\n    * Biomaterials\r\n    * Composites\r\n\r\n> Composite material is formed by the combination of two or more types of materials. But why do we need composite materials?\r\n\r\n* Reduce Weight\r\n* Lowers the cost of the material\r\n* Gives strength to the device\r\n* **Mediates propogation of charge/current**\r\n\r\n## Atomic structure\r\n\r\n* Atomic mass unit = 1/12 of the mass of most common isotope of carbon.\r\n* Atomic weight is weighted average of atomic masses of naturally occuring isotopes.\r\n* A mole is amount of matter with mass in grams equal to atomic mass in amu.\r\n* A mole of carbon has a mass of 12 grams.\r\n* **One mole has 6.023 x 10^23 number of atoms (also called as Avogadro's number)**\r\n* Number density formula: \r\n\r\n![](/assets/images/2021-08-28-15-14-09.png)\r\n\r\nHere Nav = avogadro's number, $\\rho$ = mass density and A = atomic mass\r\n\r\n* De broglie wavelength: \r\n\r\n![](/assets/images/2021-08-28-15-58-00.png)\r\n\r\n* Heisenberg Uncertainty Principle: \r\n\r\n![](/assets/images/2021-08-28-15-58-34.png)\r\n\r\n### Electronic Structure of isolated atoms\r\n* n  principal shell (1,2,3... or K,L,M...)\r\n* l = anular (sub shell) (s,p,d,f)\r\n* ml = magnetic (-l to +l including 0)\r\n* ms = spin (1/2, -1/2)\r\n\r\n> Ionization potential is the energy required to pull out a valence electron (in vacuum) and by convention it is positive. Electron affinity is energy gained by putting an electron in (from vacuum) and by convention it is negative.\r\n\r\n> Electronegativity is the measure of how likely an atom will take up or give up an electron.\r\n\r\n* Valence electrons determine the physical properties viz chemical, electrical, thermal and optical\r\n* Electropositive elements easily give up electrons to become positive ions. These generally rest in the left sife of the periodic table and vice versa for electronegative elements.\r\n* This means electronegativity is smaller on left side and larger on the right side.\r\n\r\n## Physical properties in Periodic table\r\n![](/assets/images/2021-08-28-16-08-27.png)\r\n\r\n## Bonding in solids\r\n* At large distances, interactions are negligible and at small distances each atom exerts forces on the other.\r\n* These include, force of attraction and that of repulsion.\r\n\r\n![](/assets/images/2021-08-28-16-12-56.png)\r\n\r\n* Fnet = Fr + Fa. At equilibrium Fnet = 0\r\n* Usually the distance between the two atoms at equilibrium position is 0.3nm.\r\n\r\n## Potential Energy\r\n\r\n> **Here potential energy and energy are used interchangebly.**\r\n\r\n* Energy is integration of foice wrt the radius.\r\n* Enet = Ea + Er.\r\n* **Relation between force and energy is that energy is integration of force.**\r\n\r\n![](/assets/images/2021-08-28-16-17-07.png)\r\n\r\n* Attraction energy = -A/r and Repulsive energy = B/power(r,n)\r\n* E0 = Bonding energy at minimum distance. This means that it is the energy required to seperate two atoms to an infinite seperation.\r\n* It the curve above is deep, this implies that the material is rigid and inflexible and vice versa.\r\n* If the double derivative of the energy (equivalent to single derivative of force equation) equation at r = r0 is less than 0 then it is stable and vice versa.\r\n* To find the equalibrium position, make the single derivative of the energy equation (equivalent to the force equation) equal to 0.\r\n* The mechanical stiffness (elasticity) of a material is dependent on the shapr of its F vs r diagram.\r\n* Steep curve means relatively stiff and vice versa.\r\n\r\n## Ionic Bonding\r\n* Generally takes place between metals and non-metals. There is a complete transfer of electron.\r\n* **Difference between electronegativity is of prime importance. Ionic bonding only occurs between atoms with large differences in electronegativity.**\r\n* Cation = Positive Ion, Anion = Negative Ion\r\n* Primary Bonding means that electrons are completely transferred. Atoms do so to acheive stable configuration. Such type of bonding is very strong (columbic force in case of ionic bonding). (Eg. Ionic, Covalent and Metallic)\r\n* Ionic bonds are non-directional whereas covalent bonds are directional in nature. **Non-directional means that the magnitude of bond is equal in all directions around an ion.**\r\n* Secondary Bonding means that electrons are shared. This type of bonding is weaker compared to primary bonding. (Eg. inert gases (H2, Cl2) or permanet dipoles (H20, HCl))\r\n* Enet (due to all attractions and repulsions) is known as **madelung energy**.\r\n* The predominant bonding in **ceramic materials** is **ionic.**\r\n\r\n## Covalent Bonding\r\n* **Covalent bonding occurs between atoms with small differences in electronegativity.**\r\n* The stable electroninc configuration is achieved by **sharing of electrons**.\r\n* Generally occur between non-metals and is directional bond.\r\n* Number of colvalent bonds is determined by the number of valence electrons.\r\n* Percent of ionic characters:\r\n\r\n![](/assets/images/2021-08-28-16-46-57.png)\r\n\r\n* Here Xa and Xb are the electronegativities of elements a and b. Greater the difference between electronegativities, greater is the ionic bonding and vice versa.\r\n\r\n## Metallic Bonding\r\n* Found in metals and their alloys.\r\n* According to the model presented, the valence electrons are not bound to any particular atom in the solid and are more or less free to drift throughout the entire metal.\r\n* Thus, these are called as electron clound as the electrons are all over the metal.\r\n* The remaining non-valence electrons and nucleus form the ion core and **posses a net positive charge** equal to total valence electrons charge per atom.\r\n* The free electrons sheild the positively charged ion cores from mutually repulsive electrostatic forces along with acting as a **glue**.\r\n* Because of the availability of free electrons, metals are a good conductor of heat and electricity.\r\n\r\n## Van der waals bodning\r\n* All the above mentioned bonds are **primary** bonds and this type of bond is **secondary** in nature.\r\n* It is weaker as compared to primary bonds.\r\n* It is virtually ubiquitous but presence of primary bonds diminishes their effect.\r\n* Usually found between **inert gases**.\r\n* Dipoles are formed which exists whenever there is some separation of positive and negative portions of an atom or molecule.\r\n* Hydrogen bonding is a special type of secondary bonding that exists metweeb some molecules that have hydrogen as one of its constituents.\r\n\r\n## Summary of Bonding\r\n\r\n![](/assets/images/2021-08-28-16-50-27.png)\n","url":"https://sameep1234.github.io/notes/notes\\1aLcWNPDgNX5qkq9mIfSm.html","relUrl":"notes\\1aLcWNPDgNX5qkq9mIfSm.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 1","content":"\n# Introduction to Material Science and Engineering\n\n## Points to Ponder\n* With slight change in physical properties, we can get a whole new material. These are **amorphous** and **crystalline**.\n* Difference between LED and solar cell is that one emits the light and other absorbs the light.\n\n## Assessment and Evaluation\n* Mid Sem Exam - 25%\n* End Sem Exam - 30%\n* Lab Work (including viva (15%) and theory exam (10%)) - 25%\n* Project - 10% (Based on ppt presentation and viva)\n* Tests/Quizes - 10% (Two Quiz of 5% each)\n\n## Project Details\n* Submit a report\n* Viva will be conducted\n\n## Course Material\n* Textbook - Materials Science and Engineering: An Introduction, William D Callister 6th Edition, John Wiley & Sons.\n\n> Central Paradign of Material Science and Engineering\n\n![](/assets/images/2021-08-28-10-09-21.png)\n","url":"https://sameep1234.github.io/notes/notes\\NqoK0JIe4Tl0L1e2S4who.html","relUrl":"notes\\NqoK0JIe4Tl0L1e2S4who.html"},{"doc":"Identity and Behaviour","title":"Identity and Behaviour","hpath":"courses.Semester 5.Identity and Behaviour","content":"\n","url":"https://sameep1234.github.io/notes/notes\\elcUWYUkVJfjM5NLR8toR.html","relUrl":"notes\\elcUWYUkVJfjM5NLR8toR.html"},{"doc":"Lecture 9","title":"Lecture 9","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 9","content":"\n# Decision Making\n\n> This lecture was dedicated to case study \"Leaving\" and hence there is not much notes to take.\n* In this, the main issue was that the environment was not good enough for Joyce to openly communicate and the counter to any such issue is to ask \"What type of environment are you looking forward to?\"\n\n* Get to know about your boss is the prime importance for an employee and vice versa for boss to know their subordinates.\n* These information could be collected by knowing about attitudes, motives, interest, experience and expectation for individuals counter part.\n","url":"https://sameep1234.github.io/notes/notes\\Hr47qzUFcmVUme1LHy5Ct.html","relUrl":"notes\\Hr47qzUFcmVUme1LHy5Ct.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 8","content":"\n# Judgement and Attribution Theory\n> Recap: Behaviour is defined as observable actions.\n\n> The key question that we are are trying to answer is that whether any behaviour shown by the individual could be **attributed** to internal or external factors.\n\n* To answer the question, we need to ask the following three high priority questions so as to make any valid judgement.\n    * How does this person behave in **different situations**?\n    * How do **others** behaving in **similar situations**?\n    * How this person behaved **over time** in a **similar situations**?\n\n> Inferences based on the above three questions\n* **Distinctiveness** - Assess the **individual** for different **situations** and if the answer turns out to be Yes (High), it is the external attribution and vice versa.\n* **Consensurs** - **Compare** with **others** and if the answer turns out to be Yes (High), it is the external attribution and vice versa.\n* **Consistency** - Same individual **always behaved** over time and if the answer turns out to be Yes (High), it is the internal attribution and vice versa.\n* Easy way to remember this is **DISCCO CAB**.\n* ![](/assets/images/2021-09-26-12-18-40.png)\n\n## Judgement and Shortcuts\n* Necessary conditions for making judgement.\n    * Information about all the three elements.\n    * But many times we dont have that and at that time, you should have motivation and time for finding them.\n    * So we essentially assume and shortcuts and sometimes leads to error.\n\n## Errors and Biases in Perception\n* Fundamental Attribution Error\n    * This happens when we are judging **others** and **not ourselves.**\n    * Here, we tend to **underestimate** the **influence of external factors** and **overestimate** hte **influence of internal factors.**\n* Self-Serving Biad\n    * This happens when we are judging **ourselves** and **not others.**\n    * This is a complete opposite of fundamental attribution error.\n    * Whenever we are successful, we tend to attribute it to **internal factors** and vice versa.\n\n## Shortcuts in Judging Others\n* Selective Percepton\n    * Tendency to **choose** to interpret what one sees based on one's interest, experience, attitude and background.\n    * Eg. We don't read each and every news that comes on the feed, we **choose** to read only those that interests us.\n* Halo Effects\n    * Halo means angel which is ususally represented by a yellow circle above his head.\n    * It is the tendency to draw a **positive general impression** about an individual/product based on a single characteristic.\n    * Eg. People prefering apple products are not concerned with the competition and the features avaible in other phones and at what price and thus are **operating under the halo effect.**\n* Horn Effects\n    * Horns usually represent devil.\n    * It is the tendency to draw a **negative general impression** about an individual/product based on a single characteristic.\n    * Eg. Mother/daughter in law case.\n* Stereotyping\n    * It means that we are judging someone based on one's **perception of the group.**\n    * Eg. Being from Gujarat means that you are very good in business or have a entrepreneurial nature.\n","url":"https://sameep1234.github.io/notes/notes\\cqVBObtdH7zSXOgcmSdsW.html","relUrl":"notes\\cqVBObtdH7zSXOgcmSdsW.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 7","content":"\n# Perception and Factors\n\n## Zone of Proximal Development\n* Every individual's learning can be mapped in three concentrix circles.\n* Inner most circle represents things that he/she can do on his/her own.\n* Outer circle includes things that the learner can't do.\n* Whatever lies between these circles is called **zone of proximal development.**\n* This zone indicated all those things which a learner can do with some external help.\n* This process is called **scaffolding.**\n* Example:\n    * Riding the bicyle is in outer most circle.\n    * Child knows balancing while walking and running and hence is in inner most circle.\n    * The father (who holds the bicycle from behind) is basically **operating** in the zone of proximal development.\n\n## Perception\n* Perception is a **process** by which we organize and interpret sensory impressions to give **meaning to out environment.**\n* People's behaviors are based on their perception of reality and not the actual reality itself.\n* Eg. The perception will depend on how severe the consequences are like that example of confiscation of phone.\n\n## Factors that influence perception\n* Perceiver\n    * Attitude\n    * **Motives**\n    * **Interests**\n    * **Experience**\n    * **Expectations**\n* Target\n    * Motion\n    * Sounds\n    * Size\n    * Background\n    * Proximity\n    * Similarity\n* Setting/Context/Situation\n    * Time\n    * Work Setting\n    * Social Setting\n    * Example\n        * A boy is talking to a girl.\n        * A boy is talking to a girl in a workplace.\n        * A boy is talking to a girl in a bar.\n        * A boy is talking to a girl in the temple.\n        * A boy is talking to a girl outside movie theater.\n        * A boy is talking to a girl outside OYO rooms.\n* ![](/assets/images/2021-09-26-11-50-53.png)\n\n> What should we do in case of conflict because of perception?\n* Always look at the three main aspects viz motives, interest and expectations.\n","url":"https://sameep1234.github.io/notes/notes\\rqnSNK50Xu9SVvgndKyPG.html","relUrl":"notes\\rqnSNK50Xu9SVvgndKyPG.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 6","content":"\n# Piaget's and Theory\n\n## Piaget's Theory\n* It's main principle is that children act on their physical environment by playing and exploring to develop schemes.\n* Schemes are nothing but metal representation of bodily movement of something that a person can do with an object.\n* Example of scheme include cricket bat and watch.\n* Schemes develop through **assimilation and accomodation.**\n* Assimination is the process by which new expeciences are incorporated into existing schemes.\n* Accomodation is the process by which schemes are changed and new experiences are **assimilated.**\n* Example is of a child trying to stack smaller blocks on hollow bigger block.\n* Another example can be of telephone. After multiple iterations a child knows that when a telephone rings, we pick it up and talk. Similar is the case with wireless mobile phones but the range is low in wired case.\n* Thus, identifying the scheme is of prime importance. So, for the telephone example, the scheme is that whenever it rings, someone comes and picks it up.\n* Now, the new experience is of mobile phones. What to do when it rings? This has to be incorported by the child.\n* Operations\n    * Those actions that can be reversed or they are called reversible actions.\n    * Types of operations\n        * Cause and effect - Eg. Switch\n        * Conservation of substance - Eg. Clay\n* Four stages\n    * **Sensorimotor stage** (birth to 2 yrs) \n        * Focus on present object and not on the object that is not there.\n        * They have basic schmes of shaking, twisting, pushing etc. (inbuilt)\n    * **Preoperational stage** (2 to 7 years)\n        * Think about the objects that are not present.\n        * Don't think of reversible consequence of actions.\n        * Use perception rather than logic.\n        * Eg. Water in different shapes of container.\n    * **Concrete-Operational stage** (7 to 11 yrs)\n        * These are tied to their actual experiences.\n        * Eg. Water in bottle to glass\n        * **They are not able to generalise the results to all the types of substances.**\n        * They are not able to think in hypothetical situations.\n    * **Formal-Operational stage** (11 to 16 yrs)\n        * Notice similarites between operations performed on different objects.\n        * **They are able to generalise the results obtained in one situations to other situations.**\n        * They can now think in hypothetical world.\n        * Eg. How much air does a room contain? It is the volume of the room.\n\n## Vigotsky's Theory\n* Its main principle is that children develop in the social world by interacting with other people and products of their cultural history.\n* Eg. Child born in a tribe and in a modern family.\n    * The difference between learning language in modern family and that in tribe would be of written documentation.\n    * Tribe people might not have a written manuscript of the symbols and language that they use whereas modern family have perfectly well maintained documentation of the rules and regulations of their language.\n    * Thus, a child in tribe might learn about only the spoken part and not the written part whearas in modern family, a child learns both.\n* Social elements\n    * Symbols\n    * Knowledge\n    * Ideas\n    * Mode of reasoning\n\n## Difference in perspective of both theories\n* ![](/assets/images/2021-09-12-11-44-22.png)\n* In the above example, from piaget's perspective, the child discovered the rule of commutativity because the child acted on the pebbles (physical environment) and while playing with it.\n* From the vigotsky's perspective, the child belongs to the community where they know how to count or at least that community value counting because of which the child started counting.\n* Otherwise, the child could have done numerous other activities with the pebbles like throwing it, catching it etc.\n* This also means that the community also has some symbols that facilitate counting. Otherwise, how will a child count?\n","url":"https://sameep1234.github.io/notes/notes\\8CjQGw4PonYhRfK7rzhYb.html","relUrl":"notes\\8CjQGw4PonYhRfK7rzhYb.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 5","content":"\n# Social Learning Theory\n\n## Social Learning Theory\n> Individuals learn by **observing** what happens to other people and just by being told about something as well as through direct experience.\n\n* In layman terms, social learning theory is that we learn by observing others and in turn gaining **experience**.\n* Observational learning is the process of watching others for gaining **experience.**\n* Vicarious Reinforcement - Not necessary for an individual to explicitly behave in order to learn, it is enough to observe others for some actions and their consequences.\n* It is a natural extension of operant conditioning.\n* **It depends on how an individual perceives and defines the consequence.** Eg. Severity of phone confiscation may be different for those who use two phones and those who use only one.\n* **Bobo Doll Experiment is the very good example of social learning.**\n* Processes\n    * Attentional Processes - focusing on critical features.\n    * Retention Processes - How well the individual remembers action of model.\n    * Motor reproduction processes - Converting retained thoughts into action.\n    * Reinforcement processes - Motivation to exhibit modeled behaviour.\n\n## How do children learn?\n* They act on their physical environment.\n* They are like little scientists who experiment on physical environment.\n* Scheme is **what an object does.**\n","url":"https://sameep1234.github.io/notes/notes\\z1N2v5bLCwlyqin7hxUmX.html","relUrl":"notes\\z1N2v5bLCwlyqin7hxUmX.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 4","content":"\n# Learning and related theories\n\n## Learning\n> Any **relative permanent** change in **behaviour** that occurs as a result of **experience**.\n\n* Relatively Permanent - This does not mean that the time frame should be large. It could be short but it has to be relatively larger than the past conversation.\n* Change in behaviour - Obvious reasons. Observable actions. There could be many types of behaviour including learned and reflexive behaviour.\n* Experience - When you pay attention or focus on a particular conversation or an event, then that convsersation or event becomes the part of **your experience.**\n    * This means that we are involving sensory organs and hence it becomes a part of an experience.\n\n## Theories\n* Classical Conditioning\n    > It is a **learning process** through which we **create new reflexes.**\n\n    * Unconditioned Stimulus - Something that is already there in the environment.\n    * Unconditioned Response - Reflexive behaviour.\n    * Conditioned Stimulus - Something which is not part of the environment or an event that occurs multiple times.\n    * Conditioned Response - Learned behaviour.\n* Operant Conditioning\n    > **Behaviour** is a **function of consequences**. We do something to **get something** or to **avoid something.**\n\n    * If the consequences are positive, you repeat that activity and vice versa.\n    * We call it **operant** because we operate on the world. We are not doing it automatically or reflexively. We **consciously think** about it.\n","url":"https://sameep1234.github.io/notes/notes\\31uJafl3LekVK5T6Q0VDc.html","relUrl":"notes\\31uJafl3LekVK5T6Q0VDc.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 3","content":"\n# Organization-Behaviourist Model\n\n## Extra Points\n* Structuralist - Ask **\"What\"** questions.\n* Functionalist - Ask **\"Why\"** questions.\n* Behaviourist - Ask questions about **observable actions.**. Here we observe actions, experiment on them and then come up with a conclusion.\n\n## Organizational Behaviour Model\n![](/assets/images/2021-09-05-20-02-18.png)\n\n> Organizational Behavior - Field of study that investigates the impact that individuals, groups and structure have on behaviour within organizations for the purpose of applying such knowledge toward improving an organization's effectiveness.\n\n* Fundamental objective of OB Model is to enhance the performance and output of the organization.\n* Organization is consciously coordinated social unit, composed of two or more people that functions on a relatively continuous basis to achieve a common goal or set of goals.\n* In simple terms, it is a group of people who work to achieve a goal in a planned manner and with proper and effective (i.e relatively continuos) communication.\n* Manager is someone who gets the things done through other people in the organization.\n","url":"https://sameep1234.github.io/notes/notes\\D8F3yHqSbtkqcEYo4OAD5.html","relUrl":"notes\\D8F3yHqSbtkqcEYo4OAD5.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 2","content":"\n# Schools of Psychology (Cont.)\n\n## Functionalism\n* Mind and behaviour are adaptive.\n* This means that mind and behaviour are not static. They go hand in hand.\n* Functionalist study mental feats like learning, memory and problem solving.\n* Issue\n    * No scientific method to determine the role of mind (Consciousness of mind).\n    * Can't be called scientific because it can't be generalised. It varies from individual to individual.\n    * Furthermore, it is not observed and experiemented and hence it is other reason for it not being scientific.\n\n## Behaviourlism\n* Not focus on mind, see only the behaviour i.e the observable actions.\n* We can't see what's on the mind, behaviour is the only thing that can be observed.\n* Eg. Dog video with bell and food. Dog associates whenever bell is rung, food will come and hence dog starts salivating on seeing bell even when there was no food around.\n* Three characteristics to keep in mind\n    * Complex behaviour comes from elementary behaviour that we have learnt from the birth.\n    * Focus only on learned behaviour. Disregard any behaviour that the child may have born with.\n    * Human's behaviour is no different that that of an animal.\n\n## Gestalt Psychology\n* Structuralists are wrong.\n* The mind is not made of elements, but it is one as a whole.\n* It works as a whole by identifying certain relationships and patterns.\n    * Objects perceived inthe simplest form.\n    * Humans naturally follow lines or curves.\n    * Mind will attempt to fill in the detail that it not there.\n        * Eg. Below images\n            * ![](/assets/images/2021-09-05-19-13-45.png)\n            * ![](/assets/images/2021-09-05-19-13-58.png)\n* Principles\n    * Emergence - Look for some patterns\n    * Multistability - Two or more figures in the same image.\n    * Reification - Eg. Above cube which is not there but we are able to see it.\n    * Invariance - Images that appear symmetrical but is not proven. We **assume** that they are symmetrical.\n    * Closure\n    * Similarity\n    * Proxitmity\n    * Continuity\n    * ![](/assets/images/2021-09-05-19-16-48.png)\n\n## Johari Window\n> Principle - If you are aware about yourself and this information is public/made available to the general public, they your chances of success and happiness increases.\n\n* It is based on the fact of awareness of inner being and openness to share information with others.\n* Two elements of Johari window\n    * Individual and others\n    * Known and unknown information\n* This makes four quadrant.\n    * First - Information that I as well as others are aware about. It is also called as **arena.**\n    * Second - Information that I am not aware but others are. It is also called **blind spot.**\n    * Third - Information that I am aware but other are not. It is also called as **facade**\n    * Fourth - Information that I as well as others are not aware about. It is also called **unknown/dark.**\n* Objective of Johari Window\n    * Increase the area in **arena** which means the open area/free self\n* We can disclose the information that we know and others don't to increase arena.\n* As for the information that others know but we don't, we take the feedback and increase arena.\n* These include behaviour, attitude, feelings, knowledge, experience and skills at an individual level.\n* For the organization, arena is very small and to increase this area, we need to open up to the team assigned. We should also be ready to seek feedback. Furthermore other members should not feel that they are being judged.\n* To reduce the fourth quadrant, we need to have as many diverse experiences as possible at individual level. At manager level, we can conduct various kinds of interesting activiteis where other members open up. We must provide new opportunities for others to gain diverse experiences.\n","url":"https://sameep1234.github.io/notes/notes\\pHLx9ZAeoFncSSf1INz9V.html","relUrl":"notes\\pHLx9ZAeoFncSSf1INz9V.html"},{"doc":"Lecture 10","title":"Lecture 10","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 10","content":"\n# Decision Making and its related errors\n* When there is a problem, we make a decision and to the method is to choose one of the alternatives that we have in front of us.\n* Problem can be considered as discrepancy exists between current state of affairs and desired state.\n* In simpler terms, it is the difference between what we have and what we want.\n\n\n## Rational decision making model\n* Rational - making consistent **value maximing choices** within spcified constraints.\n* Model\n    * identify the problem.\n    * Identify the decision criteria.\n    * Allocate weights to the criteria.\n    * Develop the alternatives.\n    * Evaluate the alternatives.\n    * Select the best one.\n* Assumptions\n    * All information is available.\n    * Evaluate information in unbiased manner.\n    * select option with highest utility.\n\n## Bounded Rationality\n* A process of making decisions by constructing **simplified models** that extract the **essential features** from problem without capturing all their complexity.\n* It includes choosing of that option which is satisfactory and sufficient to one's needs.\n* How is this done?\n    * Alternatives that are highly visible.\n    * Reviewing alternatives focusing on choice that differ from current state.\n    * Until we find good enough option\n* **Note that in bounded rationality we do not focus on value maximisation but choose that option which is \"good enough\" for our use case.**\n* To search quickly, majority of the \"e-commerce\" sites have filters, customer reviews etc.\n\n## Intuition\n* An **unconscious** process created out of **distilled experience**.\n* Unconscious process means that we don't know that we are actually thinking about that decision.\n* Unconcious proceeses are usually fast, relies on thinking information from different sources and engages with emotion.\n* Expert based intuition decision can be very accurate and thus it can help in effective decision making.\n","url":"https://sameep1234.github.io/notes/notes\\FGeeZIW7TEYtRmns1GJfs.html","relUrl":"notes\\FGeeZIW7TEYtRmns1GJfs.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 1","content":"\n# Introduction to IDTB\n\n## Evaluation Scheme\n* Four Quizes: 20% (Each 5%)\n* Assignments\n* Class Participation: 25%\n* Mid Semester Exam\n* End Semester Exam\n\n> **No plagiarism**\n\n## Psychology\n* Science of behavior and mind.\n* Behavior is the action that can be observed.\n* Difference between emotions/feelings and behavior is that emotions/feelings can't be seen.\n* Mind is anything that lies in the consious and unconsious part.\n* Unconsious knowledge are something that are stored in mind and helps in organizing and reacting to the information.\n* Science is process of gaining knowledge through observation and experimentation.\n\n## Schools of Pyschology\n* Structuralism\n    * Break mind to its constituent elements.\n    * Constituent Elements\n        * Sensations\n        * Images\n        * Emotion/Feelings etc.\n    * Method to break mind into its constituents, we use introspection.\n    * Introspection means objective description. Make sure not to list its functions, meantion the **objective description.**\n    * Issue\n        * Does not tell the functions of mind.\n        * Just breaks down into its constituent elements and then what?\n","url":"https://sameep1234.github.io/notes/notes\\2nldjtbBrvIpAau9kvI1F.html","relUrl":"notes\\2nldjtbBrvIpAau9kvI1F.html"},{"doc":"Heritage Conservation","title":"Heritage Conservation","hpath":"courses.Semester 5.Heritage Conservation","content":"\n","url":"https://sameep1234.github.io/notes/notes\\znYlAnqQDCB58XxxMMdIl.html","relUrl":"notes\\znYlAnqQDCB58XxxMMdIl.html"},{"doc":"Lecture 9","title":"Lecture 9","hpath":"courses.Semester 5.Heritage Conservation.Lecture 9","content":"\n# Wood (Cont.) and Intro to Paper\n\n## Thermal Degradation\n* ![](/assets/images/2021-10-16-18-04-37.png)\n* It is the lignin that catches fire quickly and burns. The actual wood is quite heat resistant.\n\n## Biological Desgradation\n* ![](/assets/images/2021-10-16-18-05-46.png)\n\n## Defects in polychrome wood\n* ![](/assets/images/2021-10-16-18-06-44.png)\n* Varnish is a kind of protective coating.\n* At first, the varnish is very shiny and transperent but over time it turns yellowish brown.\n\n## Prevention and Conservation\n* ![](/assets/images/2021-10-16-18-10-57.png)\n\n# Paper\n* ![](/assets/images/2021-10-16-18-23-37.png)\n* Beat the **wood pulp** so many times that is becomes paper.\n* Firstly a very fine powder is formed.\n* Mechanical Process - Discussed above\n* Chemical Process\n    * Sulphite Process\n        * Take H2SO4 + CaCO3 (Limestome)\n        * Calcium Bisulphite is formed\n        * Dissolves the wood chip\n        * It dissolves most wood but not all.\n    * Kraft Process\n        * Sodium Hydroxide + Sodium Sulphide + water.\n        * Almost all of the wood is dissolved.\n    * Now you have added strong alkali or strong acid and disturbed the pH.\n    * Thus, you have added some amount of degrading process.\n    * It thus becomes the intrinsic agent responsible for degradation of paper.\n    * This processes breaks down the lignin and shorter chain hemicellulose.\n\n## Bleaching\n* ![](/assets/images/2021-10-16-18-30-29.png)\n* The wood pulp becomes white due to bleaching.\n* **Even though it breaks lignin and hemicellulose, it does not harm the cellulose chain.**\n\n## Extra Points\n* Rag paper is made of 100% pure cellulose and is the best paper.\n* This can be obtained only from chemical process as the wood pulp can be dissolved almost completely releasing the pure cellulose.\n* They also dissolve hemicellulose and lignin.","url":"https://sameep1234.github.io/notes/notes\\U0tYvkmDcImMI8bKoEjLq.html","relUrl":"notes\\U0tYvkmDcImMI8bKoEjLq.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Heritage Conservation.Lecture 8","content":"\n# Wood\n\n## Chemical Properties\n* ![](/assets/images/2021-10-16-16-24-44.png)\n\n## Physical Properties\n* ![](/assets/images/2021-10-16-16-25-06.png)\n* Wood is a porous material and **specific gravity** is the density of the wood excluding these pores.\n* Wood shrinks because of the pores. The moisture gets trapped in the pores and when it heats up, the moisture escapes and the wood shrinks.\n* It it shrinks by reducing the length, it is called **cracking** whereas if it rotates as a result of shrinking, it is called **warping**.\n\n## Directions of wood\n* ![](/assets/images/2021-10-16-16-29-58.png)\n* There is a steady flow of water as long as trunk is connected to the roots.\n* The moment it is cut, the water will escape slowly.\n* As a result, the wood will begin to shrink.\n* Thus, we require to cut the wood in a very specific manner/direction such that there is minimum amount of shrinking.\n* Wood has **anisotropic/directional** property which means it has different properties in different directions.\n* This means that percentage of shrinkage will be different in different directions.\n* If the wood is cut along the longitudinal direction, there will be minimum shrinking.\n* But, cutting accross longitudinal directions will not result in long planks of wood.\n* Thus, we cut the wood in radial direction only as it has lower shrinkage percentage then longitudinal and will result in longer planks.\n* The water content, if the wood cut in the tangential direction, is more and thus there would be more shrinking whereas it is not the case in longitudinal and radial direction.\n* Calculating the age of wood with the help of rings is called **dendrochronology**.\n* The seasonal adaption in the radial direction is the reason of lower warping and thus it won't change anymore.\n\n## Shrinkage Curve\n* ![](/assets/images/2021-10-16-16-43-56.png)\n\n## Grains of wood\n* ![](/assets/images/2021-10-16-16-44-43.png)\n\n## Deterioration\n* ![](/assets/images/2021-10-16-16-52-12.png)\n* Physical Degradation\n    * Warping\n    * Cracking\n    * Splitting\n* If the wood loses lignin (binding agent), the wood will develop crack because it will try to fall apart.\n* The outer particles in wood will pull the inner wood in opposite direction resulting in a large straight crack.\n* Swelling and shrinking can also result into network of cracks instead of straight crack.\n* Chemical Degradation\n    * ![](/assets/images/2021-10-16-16-58-26.png)\n    * **Pulp** is the precipitate that you obtain when you dissolve wood in either strong acid or strong alkali.\n\n## Extra Points\n* % shirinkage in\n    * Longitudinal Direction - 0.1% - 0.2%\n    * Radial Direction - 1% - 2%\n    * Tangential Direction - 6% - 12%\n* **Polychrome wood** means that wood is colored (in fact it is multicolored).\n* The sculptures made of wood are generally not carved from single wood.\n* They are joined seperately. To cover the joints, we use the following process.\n    * Wood + Iron nail (to join different parts of wood)\n    * a layer of cloth (muslin or markin in most cases) to hide the joints\n    * Add acid free tissue paper (i.e handmade paper)\n    * Add clay (chalk + kaolin) + glue (it decreases the porosity of papers by filling the pores)\n* **Gilded wood** is prepared in similar manner and is polished a lot.\n* Then it is painted to give shiny appearance.","url":"https://sameep1234.github.io/notes/notes\\wYJMyCXRWhiJtYI1dtW8r.html","relUrl":"notes\\wYJMyCXRWhiJtYI1dtW8r.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Heritage Conservation.Lecture 7","content":"\n# Ceramic and Intro to Wood\n\n## Firing stages of clay\n* First firing is called bisquing and second firing is called glazing.\n* There are two types of water molecules that are bonded with clay viz physically bonded water and chemically bonded water.\n* During bone dry stage of clay, the physically bonded water is released.\n* Now to remove, chemically bonded water, we fire the clay. This immense heating causing chemically binded water to detach from the clay making it very hard.\n* **Note that the temperature when firing the clay should be raised slowly and not drastically.**\n* This is because clay is porous and when firing, chemically bonded water will try to escape. Now, if suddenly the temperature is raised then the chemically bonded water will not escape suddenly.\n* Instead, the silica fuses into one another trapping the chemically bonded water.\n* Now, at high temperatures, these chemically bonded water turns into steam creating air bubbles.\n* As a result, the clay will disintegrate immediately. Same applies for cooling too. You have to cool the clay very slowly.\n\n## Colors of material at different temperature\n* ![](/assets/images/2021-09-12-09-26-10.png)\n\n## Quartz Inversion Temperature\n* ![](/assets/images/2021-09-12-09-26-43.png)\n* Quartz is silicon dioxide (SiO2) and has a trigonal crystalline structure called as alpha-quartz.\n* At 573 degrees it gets converted into beta-quartz which is hexagonal in shape.\n* So now, it holds clay at 6 points unlike earlier where it holded clay at only 3 points.\n* Now, because of this beta-quartz, the properties of silica change and thus, becomes impervious to water damage.\n* Now, if we cool the clay as soon as it reached 573 degrees, only some part of clay will get converted and majority will disintegrate as soon as it comes in contact of water.\n* Therfore, it is of vital importance that we keep the clay at least equal to 573 degrees for about 2-3 hrs. It depends on how big is the pot.\n* Finally, after quartz inversion takes place, clay turns into ceramics.\n\n## Sintering\n* This is the next phase of clay firing starting at 900 degrees.\n* ![](/assets/images/2021-09-12-09-33-49.png)\n* **After this phase, the water will be retained because of fusion of clay particles.**\n* Pores get removed due to exertion of pressure on each silica particle.\n* This process is called **solid phase sintering.**\n\n## Vitrification\n* ![](/assets/images/2021-09-12-09-41-09.png)\n* After solid phase sintering, there might be some pores that are still left which may allow water to pass.\n* Thus, this next phase is crucial to cover all the pores.\n* In order to lower the melting point of silica, flux is added.\n* Flux is **glassy** in nature. In fact, vitri means glass case.\n* Flux are oxides of metals like calcium, sodian, magnesium, lead, potassion, manganese etc.\n* Now, these oxides (in power form) melt at 1600 degrees and form a liquid.\n* This liquid flows into the pores and solidifies there making the clay fully impervious.\n* This process is called **liquid phase sintering.**\n* **Here, note that silica particles are not melting. It is the flux that is melting.**\n\n## Glazing\n* ![](/assets/images/2021-09-12-09-52-17.png)\n* It beautifies clay by giving it a feel of glass.\n* **Vitreous means glassy.**\n\n## Summary of stages of clay\n* Quartz inversion\n* Solid phase sintering\n* Liquid phase sintering (vitrification).\n* This turns clay to ceramics.\n* Glaze\n\n## Extra Points\n* Melting point of silica = 2000 degress.\n\n---\n\n## Wood\n* This is an organic material and is found in nature.\n* Made from cellulose and bio-organisms can decay these materials.\n* Carving would be easier on wood rather than that on stone because wood is way more softer than stone.\n* Wood is higly porous.\n\n## Surfaces of wood\n* Inlay\n    * Insertion of stone by making a fine cut in the wood.\n* Paint\n* Varnish\n* Gilded\n    * Gold leaf is applied with plaster like substance (to provide adhesiveness to gold leaf) to give wood a appearance of metal.\n* Lacquer\n    * Dip the material in lac which develop aesthetic cracks.\n\n## Important timbers\n* ![](/assets/images/2021-09-12-10-10-01.png)\n\n## Types of wood\n* ![](/assets/images/2021-09-12-10-10-47.png)\n* ![](/assets/images/2021-09-12-10-11-49.png)\n\n## Components of wood\n* ![](/assets/images/2021-09-12-10-12-21.png)\n* If all the water is lost from the wood, then the wood would shrink and vice versa.\n* The exansion and contraction takes place in wood to a great extent. This is because wood is made of cellulose.\n* This changes the shape of wood and this process if called warping of wood.\n* Polysaccharides gives wood its woody appearance. They are just mixture of sugar.\n* Hemicellulose is branched chain and cellulose is composed of mixture of unbranched chain. Former is a mixture of sugar whereas latter is the mixture of glucose.\n* Lignin acts as a binding agent and gives wood its hardness and softness. This means that if lignin is less than bonding is less and vice versa.\n* **Phenol is aromatic alcohol.**\n","url":"https://sameep1234.github.io/notes/notes\\dd08EZsqMHXmISQ1jQ0IF.html","relUrl":"notes\\dd08EZsqMHXmISQ1jQ0IF.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Heritage Conservation.Lecture 6","content":"\n# Steel and Ceramics\n\n## Stainless Steel\n* ![](/assets/images/2021-09-11-10-25-39.png)\n* Chromium oxide layer is impervious layer. This means that chromium layer is non-porous.\n* If there is a small scratch in steel objects, then the chromium oxide layer is ripped off and the inner (iron) metal is exposed.\n* This is the place where you may see corrosion in steel objects.\n* Bidriware\n    * ![](/assets/images/2021-09-11-10-31-28.png)\n    * Made using zinc, copper and silver.\n    * Zinc and silver provide silvery appearance and copper provides a bit of yellow appearance.\n    * This black layer appears because of alloy of zinc and copper. Silver is very low in quantity.\n    * First zinc and copper is melted and then the object is dipped in copper sulphate solution to obtain a blackish color.\n    * This black is temporary.\n    * Now, with metallic stylus, designs are engraved. It is a very sharp metallic point/tool.\n    * Then, they take silver wire and hammer it in those grooves and thus this silver design is made. This is called silver inlay.\n    * Now, to smoothen the surface, it is polished. With regorous polishing, all the temporary black goes away and the entire silvery surface turns white.\n    * In final preparation, **mud of bidar** + water + dilute ammonium chloride and a dough is made and then you rub this object.\n    * By doing this, all the zinc area becomes permanent black.\n    * Silver does not become black because silver is less reactive then zinc and hence does not get converted to black color.\n    * **Silver only reacts with sulphide. This is chloride.**\n\n## Ceramics\n> Made of clay. It is neither metallic nor organic. Clay is the final product of weathering of rock.\n\n* Clay is basically silica and alumina. (SiO2 and Al2O3).\n* When you introduce water, clay becomes really soft and it disintegrates easily.\n* To overcome this problem, we heat the clay at very high temperature and as a result, it becomes very hard and dense.\n* So basically, on heating we are removing water and hence it looses its plasticity.\n* Terracotta army\n    * ![](/assets/images/2021-09-11-11-02-41.png)\n    * Terra means earth\n    * Terracota is basically fired clay.\n    * Brick is made of terracota.\n* BASIC Materials\n* Stucco is made from unbaked clay or sunbaked clay. It is not fired but is sunbaked and hence becomes crucial to study.\n* It is majorly found in Gandhara, Afghanistan.\n\n## Types of clay\n* ![](/assets/images/2021-09-11-11-15-46.png)\n* Terracota comes under erathenware. It gets red color due to inclusion of iron.\n* Bone china is a type of porcelain and fired at 1350 degrees and is mostly white in color.\n* White colored clay called kaolin is used to make bone china.\n\n## Stages of clay\n* ![](/assets/images/2021-09-11-11-18-04.png)\n* Bisuqe is also called as bicuit firing and is the first firing stage.\n\n## Extra Points\n* When you keep on heating/firing any material, the ultimate color it will emit will always be white.\n* This happens because of the stages of heating. In the first stage, the carbon layer is burnt and is black in color.\n* Now on further increasing the temperature, you will see orange color and then becomes red and then it becomes ash colored (grey) and finally becomes white.\n","url":"https://sameep1234.github.io/notes/notes\\eANXlaxNHdusvpeFWyqXn.html","relUrl":"notes\\eANXlaxNHdusvpeFWyqXn.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Heritage Conservation.Lecture 5","content":"\n# Patina and Metal Oxide\n\n## Patina Continued.\n* Any layer that is formed on the metal surface is called patina.\n* Layers\n    * Oxide\n    * Carbonate\n    * Sulphate\n    * Acetate\n    * Chloride\n* Those patina which is protective in nature is called noble patina and those that are corrosive in nature are called malignant patina.\n* Cuprous oxide (Brown) and cupric oxide (Black) is noble patina as they do not react and protect copper metal.\n* Greenish layer deposited on copper is carbonate layer.\n    * It is also known as malachite.\n    * **Noble patina** but in very rare cases it is malignant patina.\n* **Malignant Patina (Bronze Disease)**\n    * Bronze metals form chloride layer (atacamite and nantokite).\n    * ![](/assets/images/2021-09-11-00-05-28.png)\n      ![](/assets/images/2021-09-11-00-06-37.png)\n\n## Malachite and Azurite formation\n* ![](/assets/images/2021-09-10-23-50-53.png)\n* Two forms of carbonate layer.\n* Carbonate ions are formed when carbon dioxide is dissoved in water.\n* We may also get carbonic acid in a similar fashion.\n* On scratching a corroded metal, we get pure metal inside it. Now that in turn acts as anode and the corroded layer acts as cathode.\n* Then follow the above figure.\n* Oxidation number is the charge an element has in a compound/molecule.\n\n> If in the environment, if you have a lot of CO2, then what will you get? (Azurite or Malachite)\n* We will get azurite as in more CO2 concentrated areas, it is a stable carbonate layer.\n\n## Iron Oxide\n* Nature of Fe2O3 is unstable (doubtfull) and porous\n* This is malignant patina.\n* Because of its porosity, the inner core of the metal is always exposed and hence is called malignant patina.\n* **Startling fact**\n    * Qutub Minar is made of iron.\n    * Built about 1500-1600 years back.\n    * But still, there is no rusting.\n    * **In iron, a little bit of phosphorous is mixed and it forms a complex layer by reacting with hydrogen and oxygen.**\n    * Hence, the iron pillar does not get corroded.\n    * Now, phosphorous and sulphur have tendency to crack any metal (even iron) if it remains inside that metal.\n    * Hence, when iron is heated to 1500 degrees, phosphorous and sulphur escape and iron is protected.\n    * Then, with continuous hammering, the remaining phosphorous comes out on the surface of the metal and hence forms a protective layer.\n    * To make the pillar, a little bit of zinc was also added in the bottom/base of the pillar.\n    * Zinc acts as a **sacrificial anode.**\n    * This means that zinc will corrode and protect iron.\n","url":"https://sameep1234.github.io/notes/notes\\kmZO7FrAMH0Te6ZwwgzHv.html","relUrl":"notes\\kmZO7FrAMH0Te6ZwwgzHv.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Heritage Conservation.Lecture 4","content":"\n# Electrochemical series and more on metals\n\n* It is the disordered state that is stable state and ordered state is the active one.\n* This is because, you put some energy in the disordered state to make it in order.\n* Every metal, from the moment extraction is done, it wants to go to its ore form.\n* When a metal is corroded, rust hinders the property of metal. Thus, we can say that the non-metallic quality of metal increases.\n* **Magnetic effect** is used to detect how much **core metal** is left and how much **rust** is formed.\n\n## Electrochemical Series\n* ![](/assets/images/2021-09-10-22-24-30.png)\n* The metals here are placed according to their decreasing reactivity. Hence, going down the electrochemical series, the reactivity will decrease.\n* Thus, gold is the least reactive metal and hence it is sometimes also called as noble metal.\n* It basically does not react with anything. It only dissolves in aqua regia.\n* Pure copper does not rust/corrode easily and hence they are used for electrical installations. Another reason for that use is that it is an excellent conductor of electrivity.\n* ![](/assets/images/2021-09-10-22-29-17.png)\n* Oxidation \n    * When a metal looses electron. \n    * The power to loose electron is called oxidation potential.\n    * Lesser reactive metals have lower oxidation potential than more reactive metals.\n* Reduction\n    * When a metal gains electron.\n    * The power to gain electron is called reduction potential.\n    * Lesser reactive metals have higher reduction potential than more reactive metals.\n* Reducing agent is a more reactive metal that displaces a metal from its sulfate state and vice versa.\n* In metallic terms, oxidation is also called corrosion.\n\n## Galvanic Cell\n* Also known as Voltaic cell or Daniel cell or Electrochemical cell\n* ![](/assets/images/2021-09-10-22-39-33.png)\n* Electrode is a solid electrical conductor that carries a current. Two types include anode and cathode.\n* Zinc acts as anode and copper acts as cathode.\n* Electrolyte (Salt Bridge) is of vital importance as it completes the circuit for current to flow.\n* Now once the circuit is complete and current starts flowing, zinc begins to loose electrons.\n* This is because, copper has more reducing potential and as a result has a greater power to pull the electrons.\n* So in time, Zinc gets converted to zinc sulfate and copper sulfate gets converted to pure copper.\n* **To summarize, less reactive metal will get deposited and more reactive metal will get used up during electrolisis.**\n* Thus, to preserve a less reactive metal, just bring a more reactive metal in contact with the less reactive metal. This process is called anodic preferential corrosion or anodic sacrificial protection.\n* Similarly, if a more reactive metal is to be protected than we coat that metal with a less reactive metal and this process is called cathodic protection. (Used mainly for protecting silver by coating gold on it).\n\n## Tarnising of silver\n* Silver is almost a noble metal and hence it is very difficult for it to corrode.\n* ![](/assets/images/2021-09-10-22-53-23.png)\n* Color is black.\n* Oxygen can not harm silver but sulfur can.\n* Only on the surface.\n* We preserve tarnished silver to preserve silver and it also represent age and authenticity in silver artifacts.\n* Patina is just a layer and surface discoloration. It is a surface phenomena.\n* Silver sulfide layer is called as noble patina because it is non reactive.\n* Oxide layer on broze is blackish in color or called as blackish patina.\n* Cuprous oxide layer is brownish in color and later it will change to cupric oxide which is more stable and is blackish in color.\n\n## Types of oxide\n* Unstable metal oxide - Gold, Silver and Platinum\n* Stable metal oxide - Copper, Tin and Lead\n* Volatile metal oxide - Molebdenum\n* Porous metal oxide - Sodium, Potassium, Manganese and iron.\n","url":"https://sameep1234.github.io/notes/notes\\4gfzYPUYc62svMT1nlhT5.html","relUrl":"notes\\4gfzYPUYc62svMT1nlhT5.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Heritage Conservation.Lecture 3","content":"\n# Hardness of Stones and Introduction to metals\n\n## Mohs Hardness Scale\n* ![](/assets/images/2021-09-10-14-42-38.png)\n* Gypsum\n    * Used as one of the raw components of cement and its called calcium sulphate.\n    * It is really soft.\n* Calcite\n    * Chief component of limestone and marble.\n    * It is called Calcium Carbonate\n* Quartz\n    * It is very hard.\n    * Used in sandstone and granite\n    * Hence, these materials are also hard.\n    * It is called silicon dioxide.\n    * Harder than Gypsum and Calcite as evident from the above figure.\n    * Artifacts of sandstone have different colors like shown in below image.\n        * ![](/assets/images/2021-09-10-17-05-34.png)\n    * This means that if **iron content** is more, then it **gives red** color and if **clay content** is more, then it **gives yellow** color.\n    * The red color of the red fort is red because of ferruginous sandstone. This iron gets rusted and gives red color.\n    * The yellow colored sandstone is called as argilesious sandstone.\n\n## Use of stones in monuments\n* Humanyun's Tomb, Delhi\n    * ![](/assets/images/2021-09-10-17-09-03.png)\n    * Made using sandstone (red colored) and marble (white colored).\n* Taj Mahal, Agra\n    * ![](/assets/images/2021-09-10-17-10-02.png)\n    * Again made using sandstone (main platform) and brick and marble (outer/external padding).\n    * Iron slabs/rod are used to padd marble and hence we can see some rusting where iron is inserted.\n\n* **Note: Sandstone is always at base and marble is at top. Marble is a porous stone.**\n\n    > Why is it not the reverse?\n    * This is because, sandstone is a stronger than marble and hence has the capacity to hold the weight of marble.\n* Biwi ka maqbara, Aurangabad\n    * ![](/assets/images/2021-09-10-17-16-57.png)\n    * Made using a very fine and polished limestone and only 25% marble is used.\n\n## Extra Points\n* Average temperature of venus is 470 degrees.\n* Mars surface temperature is -53 degrees.\n* Earth's surface temperature earlier was 290 degrees and nowadays it is 15 degrees.\n    > What was the climatic condition that led it to cool down?\n    * It was covered with Carbon Dioxide, but during formation of limestone, more than 80% of the gas was consumed and thus, the earth's surface temperature cooled.\n* During the production of cement, we are reversing the formation of limestone.\n* Thus, we are releasing a lot of carbon dioxide.\n* Stones used in formation of qutub minar are marble, sandstone and **quartzite.**\n* Based on quartizite, Alai Minar in Delhi was made. Originally, it was supposed to be a replica of Qutub Minar with double height, but could not be completed.\n* Kailashnath Temple, Ellora is made using Basalt which is extrunious igneous rock formed by volcanic rocks.\n* Brihadishwar Temple, Tanjavur is made using granite.\n* **Anything that has to migrate from one surface to other surface, the other surface must be more porous compared to the first one.**\n\n# Metals\n* Most of the metals are subject to corrosion due to atmospheric moisture.\n* Metals used in heritage\n    * ![](/assets/images/2021-09-10-17-37-31.png)\n    * These metals are placed in the order of their corrsion resistance and hardness.\n    * **There is a mistake in the photo. Zinc is more corrosive than iron. Hence swap these two.**\n* Alloys used in heritage\n    * ![](/assets/images/2021-09-10-17-39-29.png)\n    * First coin was prepared from electrum. It is also called green gold if available naturally, but artificially made electrum is called white gold because some amount of palladium.\n    * Brass will corrode first as compared to bronze because it has amounts of zinc.\n    * Broze is made from 90% copper and 10% tin. Similar is the case for brass but with its respective metals.\n    * Pewter will appear like silver, but that silvery finish is mainly due to tin and little bit of silver.\n\n## Extra Points\n* Iron is more abundant than copper in earth's crust.\n* But still copper age was before iron.\n* This is because, melting point of iron is much more than that of copper and hence, it was difficult to make iron objects.\n* Gold only dissolves in aqua regia only.\n* Some metal occur in natural form and other in ore form.\n* Stable state of any metal is its rust form and the most active when it is extracted from ore.\n* This active state is achieved by supplying energy to extract it from its ore.\n","url":"https://sameep1234.github.io/notes/notes\\yz8zHVdRmNG9ZiqQdYnuU.html","relUrl":"notes\\yz8zHVdRmNG9ZiqQdYnuU.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Heritage Conservation.Lecture 2","content":"\n# Observing sculptures and studying stones\n\n### Sorry for the inconvinience but please refer this [site](https://aneri12345.github.io/Personal-Log/notes/PnbqLSRQuiLSmhmofal8q.html) for lecture 2 notes.\n","url":"https://sameep1234.github.io/notes/notes\\Ggrppf3E3epj19rPtzUTY.html","relUrl":"notes\\Ggrppf3E3epj19rPtzUTY.html"},{"doc":"Lecture 15","title":"Lecture 15","hpath":"courses.Semester 5.Heritage Conservation.Lecture 15","content":"\n# Paintings (Cont.)\n\n> How to classify an oil as drying or non-drying oil?\n\n> Check for iodine number. Iodine number greater implies it is drying oil. Iodine number shows mow many glycides are unsaturated. Thus, more unsaturated, more drying and vice versa.\n\n## Acrylic Painting\n* ![](/assets/images/2021-10-17-14-43-34.png)\n* It dries very quickly.\n* It dired to touch in 2 hours and complete drying happens in 1-2 days.\n* It dries by evaporation of water.\n* It contains a synthetic rasin called acrylic rasin and vehicle is water.\n* Acrylic rasin is very similar to oil and hence it does not easily mix with water.\n* Thus, we add emulsifier to bind oil and water.\n* Further, we add surfactants. It has polar (head) and non polar (tail) ends.\n* The water is binded to head and oil to tail and a suspension is created.\n* But the paint formed is can not be used to paint because the microorganisms can grow in the suspension.\n* Thus, we add deformer which is a dispersing agent preventing the microorganisms to grow.\n\n## Fresco Painting\n* ![](/assets/images/2021-10-17-14-49-39.png)\n* It is majorly used in wall paintings.\n* Types\n    * Fresco Buono\n        * Freshly applied\n        * Binder/adhesive is not added.\n        * But to bind, they prepare a lime plaster everyday and dry powders are applied to it when it is wet.\n        * **Pigment is applied when the wall (lime plastered) is wet.**\n        * **One day's work/job reference here.**\n    * Fresco Secco\n        * Dried\n        * **Pigment is applied on dry plaster.**\n        * Pigment is mixed in lime water and applied on dry plaster.\n    * ![](/assets/images/2021-10-17-14-53-26.png)\n\n## Extra Points\n* Function of binder is two folded.\n* It binds the pigment powders together.\n* It makes the paint adhere onto the painted surface.\n* Function of vehicle is to give the binder flow which in turn provides the flow to the binder.\n* The oil in oil painting has to be such that it can dry and binds the paint.\n* Musturd oil, olive oil and groundnut oil are  one such oil that **can't be used.**\n* Drying oil includes linseed oil, poppyseed oil and walnut oil.\n* Drying of oil does not mean evaporation, it means that the oil is oxidized and cross linked.\n* Oxidation makes the oil dry and cross linking makes the oil hard.\n* Cross linking simply means that the molecules of oil get tangled into one another.","url":"https://sameep1234.github.io/notes/notes\\yUHUqQ9obIAjDJt3cKHqz.html","relUrl":"notes\\yUHUqQ9obIAjDJt3cKHqz.html"},{"doc":"Lecture 14","title":"Lecture 14","hpath":"courses.Semester 5.Heritage Conservation.Lecture 14","content":"\n# Paintings (Cont.)\n\n## Types of paint\n* ![](/assets/images/2021-10-17-12-16-38.png)\n\n## Encaustic Painting\n* ![](/assets/images/2021-10-17-12-17-24.png)\n* Made using pigment + wax + heated gum/iron.\n\n## Watercolor Painting\n* ![](/assets/images/2021-10-17-12-18-50.png)\n* Pigment and Binder are very low and solvent/vehicle (water) is very high.\n\n## Tempera Painting\n* ![](/assets/images/2021-10-17-12-20-06.png)\n\n## Goache Painting\n* ![](/assets/images/2021-10-17-12-23-27.png)\n\n## Difference between the three\n* ![](/assets/images/2021-10-17-12-30-49.png)\n\n## Casein Painting\n* ![](/assets/images/2021-10-17-12-36-12.png)\n\n## Oil Painting\n* ![](/assets/images/2021-10-17-12-36-33.png)\n* Pigment is earth colors, binder and vehicle is oil.\n\n## Extra Points\n* Varnish acts as a protective layer and it enhances the colors also.\n* Thus, if the dusts settles on painting, we remove the varnish layer and recoat it with varnish.\n* This way the paintings are preserved for a long time.\n* Sometimes binder acts as both binder and vehicle to let the paint flow.","url":"https://sameep1234.github.io/notes/notes\\sglsQHuYReeKdDYFp7ssU.html","relUrl":"notes\\sglsQHuYReeKdDYFp7ssU.html"},{"doc":"Lecture 13","title":"Lecture 13","hpath":"courses.Semester 5.Heritage Conservation.Lecture 13","content":"\n# Textiles (Cont.)\n\n## Assignment Details\n* Individual Assignment\n    * 10 Marks\n    * Take any object from home and write properties and problems that you observe.\n* Group Assignment\n    * 20 Marks\n    * 2 people in a group\n    * Visit any nearby museum, see the gallery and write a bried report about the display, materials and the environment (microclimate - interior environment)\n    * Look at dust and durt\n    * Lighting conditions\n    * Humidity/Relative Humidity level\n    * Access to pollution\n    * Access to pests/insects etc\n* Deadline is October 31, 2021\n* Write small, precise and not copied.\n\n## Physical Properties of Silk\n* ![](/assets/images/2021-10-17-07-32-00.png)\n* Most of the natural fibers are not strong but silk is.\n* This is because it is a filament fibre and thus there are no joints.\n* Pure silk is raw silk obtained directly fromthe silk worm.\n* Spun silk is left over silk or damanged fibres.\n* Silk is protien based fibre. Thus, it has a protien called serisin which is a type of gum.\n* Thus, silk is degummed to protect it from pests.\n* As a result, it looses weight and weight is added by adding sugar or tanins.\n* It becomes weighted silk.\n\n## Chemical Properties of Silk\n* ![](/assets/images/2021-10-17-07-37-27.png)\n\n## Physical Properties of Wool\n* ![](/assets/images/2021-10-17-07-38-26.png)\n\n## Chemical Properties of Wool\n* ![](/assets/images/2021-10-17-07-39-13.png)\n\n## Physical Properties of Rayon\n* ![](/assets/images/2021-10-17-07-40-01.png)\n* **Rayon is also called as regenerated cellulose. It is also pure cellulose.**\n* It is a cheaper version of cotton.\n* You take cellulose and dissolve in cupra ammonium hydroxide solution.\n* Then we add sulphuric acide to regenerate the cellulose. We initially get a blue color because of copper present in cupra ammonium hydroxide.\n* It is also called viscose rayon and cupra ammonium rayon.\n* **Cotton is still stronger than rayon even though rayon is filament fibre.**\n* This is because in rayon most part is amorphous whereas in cotton, most part is crystalline.\n\n___\n\n# Paintings\n* Paintings come in the category of composite materials.\n* It is a combination of inorganic and organic materials.\n* Structure of canvas painting\n    * ![](/assets/images/2021-10-17-07-48-55.png)\n* Paint is composed of three materials\n    * Pigments - Powder form obtained from earth colors, minerals, vegetables etc.\n    * Binder - Add some glue\n    * Solvent (Generally water) - This we call as vehicle as it adds **flow** to the paint.\n\n## Pigment\n* ![](/assets/images/2021-10-17-07-56-12.png)\n* Inorganic Pigments\n    * ![](/assets/images/2021-10-17-07-56-41.png)\n\n## Binder\n* ![](/assets/images/2021-10-17-07-57-42.png)\n\n## Solvent\n* ![](/assets/images/2021-10-17-07-58-18.png)","url":"https://sameep1234.github.io/notes/notes\\Jr0E0JMLiqPc3xhGWew0R.html","relUrl":"notes\\Jr0E0JMLiqPc3xhGWew0R.html"},{"doc":"Lecture 12","title":"Lecture 12","hpath":"courses.Semester 5.Heritage Conservation.Lecture 12","content":"\n# Textiles\n\n## Properties\n* ![](/assets/images/2021-10-16-21-58-52.png)\n* ![](/assets/images/2021-10-16-21-59-10.png)\n* **Note that the only natural fibre available as filament fibre is silk.**\n* **Most of the natural fibres are staple except silk which is a filament fibre.**\n* ![](/assets/images/2021-10-16-22-21-12.png)\n* As it can be seen filament fibres are stronger than staple fibres.\n* Further, the filament fibres are smooth (because there are no joints) whereas staple fibers are rough (because they have several joints).\n* Thus, almost all synthetic clothes are smooth.\n* ![](/assets/images/2021-10-16-22-23-47.png)\n* Cotton has high wrinkles whereas wool does not.\n* ![](/assets/images/2021-10-16-22-28-46.png)\n* ![](/assets/images/2021-10-16-22-30-41.png)\n\n## Difference between cellulose fibres and synthetic fibres\n* ![](/assets/images/2021-10-16-22-36-20.png)\n* ![](/assets/images/2021-10-16-22-40-32.png)\n\n## Physical Properties of Cotton\n* ![](/assets/images/2021-10-16-22-44-02.png)\n\n## Chemical Properties of Cotton\n* ![](/assets/images/2021-10-16-22-47-06.png)\n\n## Extra Points\n* Wool has great capacity to hold water. In fact it is greater than cotton.\n* Cotton is a good conductor of heat and we wear it in summer so that all the heat is transfered/escapes to the atmosphere. Wool has vice versa effect.\n* **All textiles have high absorption property because it is made of cellulose and hence is hydrophilic**.\n* Cotton is quite resistant to alkalis even to strong ones whereas wool is highly resistant to acids.\n* Thus for wool, you want acidic conditions whereas for cotton you want alkaline conditions and hence they are not washed/cleaned together.","url":"https://sameep1234.github.io/notes/notes\\7ZVjK5LRU74i8a31vJnOe.html","relUrl":"notes\\7ZVjK5LRU74i8a31vJnOe.html"},{"doc":"Lecture 11","title":"Lecture 11","hpath":"courses.Semester 5.Heritage Conservation.Lecture 11","content":"\n# Paper (Cont.)\n\n## Bleaching (Cont.)\n* Oxidising and reducing bleaching agents.\n* Chromophoric groups are the functional groups that impart color to paper.\n* Bleaching agent breaks down these groups by changing the double bond of chromophoric groups into single bond.\n* They change the optical properties of chromophoric groups.\n* As a result, the paper becomes white.\n\n## Sizing and Loading\n* ![](/assets/images/2021-10-16-18-40-57.png)\n* These process gives dimensional stability to paper.\n* Sizing (a material that is amphiphilic) has two purposes\n    * Blocks the pores in paper\n    * Does not let the ink to pass through\n* Loading material is added to increase the weight of paper.\n* Chalk is one of the loading material. \n* But on adding chalk it provides glossiness to the paper.\n* Thus, to remove it we need some other chemical process.\n* Optical brightning agents are used for increasing the brightness of the paper.\n\n## Inks\n* Carbon ink\n    * Lamp Black ink or soot of lamp.\n    * Collect the carbon soot from a burning lamp and use it as ink.\n    * Oil is also there which binds the ink onto the paper.\n* Iron gall ink\n    * ![](/assets/images/2021-10-16-18-52-36.png)\n    * Chemical name of iron gall ink is ferrous tannate.\n    * It is soluble in water but when it is exposed to atmospheric oxygen it is converted to ferric tannate.\n    * This is permanent insoluble in water. It is very dark.\n    * Problem with this ink is that it contains iron and is prone to rusting.\n    * Thus, ghost writing occurs (writing appearing on other side of paper).\n    * Calcium phytate treatment is one solution to prevent further rusting of iron gall ink.\n    * **It is used in ancient manuscript.**\n\n## Extra Points\n* Cellulose is hydrophilic.\n* Absorption rate for paper (cellulose)\n    * ![](/assets/images/2021-10-16-21-42-08.png)\n    * Monomer of cellulose is made of 6 hydroxyl ion.\n    * When it comes in contact of hydrogen, it easily forms water and thus it is hydrophilic.\n\n___\n\n# Textiles\n* Generally, we see cotton, silk, linen, nylon, khadi and wool thread in textiles.\n* Cotton, Linen and Silk are natural soft threads.\n* Silver, gold and copper threads are metallic hard threads.\n* Both these types are constantly in friction and hence they wear away.\n* Metallic thread are heavy and thus damage both of them (natural and metallic thread).","url":"https://sameep1234.github.io/notes/notes\\qK3HNhqkkJAoWNm2cVoX7.html","relUrl":"notes\\qK3HNhqkkJAoWNm2cVoX7.html"},{"doc":"Lecture 10","title":"Lecture 10","hpath":"courses.Semester 5.Heritage Conservation.Lecture 10","content":"\n> The following lecture was dedicated to quiz 1 discussion and hence there is no notes of it.\n\n","url":"https://sameep1234.github.io/notes/notes\\tOqzvpjx9ICNAMlD5ltwc.html","relUrl":"notes\\tOqzvpjx9ICNAMlD5ltwc.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Heritage Conservation.Lecture 1","content":"\n# Introduction to Conservation\n\n### Sorry for the inconvinience but please refer this [site](https://unread.parthshah.ml/notes/RS0pMLTtuIC0G6hKGBSil.html) for lecture 1 notes.\n","url":"https://sameep1234.github.io/notes/notes\\KfgFXSYQDcvTjHz7W9w9R.html","relUrl":"notes\\KfgFXSYQDcvTjHz7W9w9R.html"},{"doc":"Embedded Systems","title":"Embedded Systems","hpath":"courses.Semester 5.Embedded Systems","content":"\n","url":"https://sameep1234.github.io/notes/notes\\a1PatlsCiz7PYsL111lFm.html","relUrl":"notes\\a1PatlsCiz7PYsL111lFm.html"},{"doc":"Midsem Cheatsheet","title":"Midsem Cheatsheet","hpath":"courses.Semester 5.Embedded Systems.Midsem Cheatsheet","content":"\n\r\n## Important Tables\r\n## TCCR0\r\n* ![](/assets/images/2021-10-03-12-04-03.png)\r\n## TCCR1A\r\n* ![](/assets/images/2021-10-02-15-26-54.png)\r\n## TCCR1B\r\n* ![](/assets/images/2021-10-02-15-27-23.png)\r\n## TCCR2\r\n* ![](/assets/images/2021-10-02-15-28-48.png)\r\n## Interrupt Vector Table\r\n* ![](/assets/images/2021-10-02-15-34-36.png)\r\n## TIMSK **(FOR INTERNAL INTERRUPT)**\r\n* ![](/assets/images/2021-10-02-15-32-09.png)\r\n## MCUCR **(FOR EXTERNAL INTERRUPT MODE)**\r\n* ![](/assets/images/2021-10-02-15-30-39.png)\r\n* ![](/assets/images/2021-10-02-15-30-58.png)\r\n## GICR\r\n* ![](/assets/images/2021-10-03-11-40-27.png)\r\n* Interrupt Addresses\r\n    * ![](/assets/images/2021-10-02-15-32-50.png)\r\n## Pull Up\r\n* ![](/assets/images/2021-10-03-13-44-02.png)\r\n\r\n## Important Circuits\r\n* AVR Port Pins\r\n    * ![](/assets/images/2021-10-02-16-46-14.png)\r\n\r\n## Hex To Decimal Code\r\n* ![](/assets/images/2021-10-03-11-46-00.png)\n","url":"https://sameep1234.github.io/notes/notes\\ZgP9mkhDoBGKpzGvemxdD.html","relUrl":"notes\\ZgP9mkhDoBGKpzGvemxdD.html"},{"doc":"Lecture 9","title":"Lecture 9","hpath":"courses.Semester 5.Embedded Systems.Lecture 9","content":"\n","url":"https://sameep1234.github.io/notes/notes\\h6MPygzJyJ9rGsM7qJltU.html","relUrl":"notes\\h6MPygzJyJ9rGsM7qJltU.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Embedded Systems.Lecture 8","content":"\n# 7 Segment LED and Intro to LCD\n\n> ![](/assets/images/2021-10-18-11-18-49.png)\n\n```c\n#include<avr/io.h>\n\nint main()\n{\n    DDRA = DDRB = 0xFF; // Common Cathode PORTA output\n    while(1)\n    {\n        PORTA = 0x77; // Display A\n        PORTB.b0 = 1; // Enable pin\n    }\n    return 0;\n}\n```\n\n> ![](/assets/images/2021-10-18-11-28-58.png)\n\n```c\n#include<avr/io.h>\n\nint main()\n{\n    DDRA = DDRB = 0xFF;\n    int arr[] = {0x90, 0x80, 0xF8, 0x82, 0x92, 0x99, 0xB0, 0xA4, 0xF9, 0xC0}\n    int i;\n    while(1)\n    {\n        PORTB.b0 = 1;\n        for(i=0;i<10;i++)\n        {\n            PORTA = arr[i];\n            delay_ms(1000);\n        }\n    }\n    return 0;\n}\n```\n\n# LCD's\n* Pin Position\n    * ![](/assets/images/2021-10-18-11-46-36.png)\n* Connections with AVR\n    * ![](/assets/images/2021-10-18-11-47-39.png)\n* Internal Components\n    * ![](/assets/images/2021-10-18-11-49-03.png)\n* Some important pins\n    * ![](/assets/images/2021-10-18-11-50-21.png)\n* Pin5 - R/W (Read/Write)\n    * 0 means write and 1 means read\n* Pin6 - Enable\n    * High to low means latch the data.\n    * Mimimum pulse width 450ns\n* Pin7 - OR DB7\n    * 1 means send new information and 0 means not sending new information.\n* C program declaration\n    * ![](/assets/images/2021-10-18-11-54-05.png)\n* C program for LCD Commands\n    * ![](/assets/images/2021-10-18-11-56-02.png)\n* Table for lcd commands\n    * ![](/assets/images/2021-10-18-11-57-33.png)\n\n## Some part left","url":"https://sameep1234.github.io/notes/notes\\dcaLCQa27jweR8cfy2wn8.html","relUrl":"notes\\dcaLCQa27jweR8cfy2wn8.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Embedded Systems.Lecture 7","content":"\n# AVR Interfacing with 7 segment LEDs\n\n## LEDs\n* ![](/assets/images/2021-10-18-09-21-36.png)\n* Basically, whenever an electron tranverse from lower energy state to higher, it requires energy.\n* Whenever it traverse from higher energy state to lower, it emits energy in the form of light.\n* This is basic principle of LEDs.\n* We use semiconductors for it. It has some bandgaps which emit light of particular frequency and as a result emit light of particular color.\n* Connections\n    * ![](/assets/images/2021-10-18-09-25-22.png)\n\n## 7-Segment LEDs\n* Common anode\n    * ![](/assets/images/2021-10-18-09-26-44.png)\n    * Logic 0 means that portion of led will be turned on.\n* Common Cathode\n    * ![](/assets/images/2021-10-18-09-29-44.png)\n    * Logic 1 means that portion of led will be turned on.","url":"https://sameep1234.github.io/notes/notes\\82tJDeMQ7mA41HTOrG90B.html","relUrl":"notes\\82tJDeMQ7mA41HTOrG90B.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Embedded Systems.Lecture 6","content":"\n\r\n# External Hardware Interrupts\r\n\r\n## Activation\r\n* ![](/assets/images/2021-09-29-10-43-25.png)\r\n* Now to activate external hardware interrupt, we use GICR and the first 3 LSB side bits should be set according to our use case and in correspondence with the image above.\r\n\r\n## Features\r\n* ![](/assets/images/2021-09-29-10-45-07.png)\r\n* When we set the interrupts value to be 00, it is also called as **level-triggered interrupt.**\r\n* **Note that 00 corresponds to lower level interrupt which means on connecting group or providing 0, this interrupt will get triggered and on connecting Vcc or providing 1, this interrupt will be disabled.**\r\n* Interrupt 2\r\n    * ![](/assets/images/2021-09-29-10-50-01.png)\r\n    * **Note that there is only one bit for interrupt 2 and hence only 2 possible combinations ar shown in the image above.**\r\n* Now for example, lets say we want to make INT0 interrupt on falling edge triggered. For this, we choose the value of MCUCR = 0x02.\r\n* For INT2, rising edge trigger, write MCUCSR = 0x40. We made D6 to be 1 because the MCUCSR has PIN6 dedicated to interrupt 2.\r\n* **Make sure that if INT2 is asked, you change D6 of MCUCSR and if INT1 or INT0 is asked, you chance (D2, D3) and (D0, D1) respectively.**\r\n\r\n## GIFR\r\n* General Interrupt Flag Register.\r\n* ![](/assets/images/2021-09-29-11-01-33.png)\r\n* Programmer need not worry of clearing the flag as it will be done automatically.\r\n\r\n## Minimum timing of Interrupt Signal\r\n* Minimum timing of interrupt signal means what should be the minimum time for which the interrupt should last so that it is considered as an interrupt and not as a noise.\r\n* ![](/assets/images/2021-09-29-11-03-22.png)\r\n\r\n## Examples\r\n* ![](/assets/images/2021-09-29-11-07-25.png)\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nint main()\r\n{\r\n    DDRC = 0x08; // Define PortC.3 as output\r\n    PORTD = 0x04; // Interrupt comes here.\r\n    GICR = (1<<INT0); // Enable external interrupt 0\r\n    sei(); // Enables global interrupts\r\n\r\n    MCUCR = 0; // Level triggered mode\r\n    while(1); // Run forever\r\n}\r\n\r\nISR (INT0_vect)\r\n{\r\n    PORTC ^= 0x08; // Toggling whenever INT0 goes low\r\n}\r\n```\r\n## Interrupt Priority\r\n* ![](/assets/images/2021-09-29-11-28-58.png)\n","url":"https://sameep1234.github.io/notes/notes\\on61iqE2wZO98Rla5PiI7.html","relUrl":"notes\\on61iqE2wZO98Rla5PiI7.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Embedded Systems.Lecture 5","content":"\n\r\n# Timer (Cont.) and Interrupt\r\n\r\n## Difference between timer 0 and timer 2\r\n* ![](/assets/images/2021-09-20-11-13-11.png)\r\n* Reference to timer 2 means that flags will also differ.\r\n* We have few more prescaling options availble in timer 2.\r\n* Timer2 can be used in real time counter.\r\n* In timer 2 we use TSOC1 and TSOC2. So connecting these will activate the timer 2.\r\n\r\n## Timer 1\r\n* ![](/assets/images/2021-09-20-11-16-29.png)\r\n* Main difference between timer 1 and timer 0 is that timer 1 is 16 bits.\r\n* We may split the 16 bit into two 8 bit register for HIGH and LOW.\r\n* ![](/assets/images/2021-09-20-11-18-45.png)\r\n    * ![](/assets/images/2021-09-20-11-19-54.png)\r\n* The formula for finding time delay remains the same, **only scaling is required.**\r\n\r\n## Interrupt\r\n* While the microcontroller is waiting for the overflow flag to change, we are not using it. That's not desirable.\r\n* The above mentioned process is called polling method in which we are continuously checking the value of flag.\r\n* Polling vs Interrupt\r\n    * ![](/assets/images/2021-09-20-11-23-47.png)\r\n* ![](/assets/images/2021-09-20-11-24-22.png)\r\n* **Always remember that the timer operations are performed under interrupt service routine whereas the main task other than timer is done in main function.**\r\n* Example\r\n    * ![](/assets/images/2021-09-20-11-25-23.png)\r\n    * Note that we are simultaneously doing two things.\r\n    * Here we are performing bitwise OR operation on DDRB to make PIN 5 as output but it is not necessary. We can simply assign it too like we used to do.\r\n    * Then we assign value of TCNT0 that will run 32 times. Roughly it means it is FF - 32.\r\n    * Then, in the main function, we perform the task of transferring data from PORTD to PINC.\r\n    * Now inside ISR, we reassign value of TCNT0 and toggle the PORTB.\r\n* **Upon reset, all interrupts are disabled and to enable interrupt set MSB of status register to activate all interrupts. This means enabling global interrupts.**\r\n* **Set bits of individual interrupts in the control registers. This means enabling local interrupts.**\r\n* Note that we do not have to manually update the value of status register, we just have to call sei() function in C to enable the global interrupt.\r\n* Similarly to disable global interrupt, we have to call cli() function in C.\r\n* Status Registers\r\n    * ![](/assets/images/2021-09-20-11-33-07.png)\r\n    * Note that D7 is the MSB that represents globally enabling interrupt.\r\n* ![](/assets/images/2021-09-20-11-34-26.png)\r\n* sei() and cli() enables and disables **global interrupt** respectively.\r\n* TIMSK - Timer interrupt mask register\r\n    * Note that right now we are concerned with **internal interrupt** only.\r\n    * ![](/assets/images/2021-09-20-11-36-05.png)\r\n    * This means that if you set the appropriate bit (for us, since we are using timer0, we set TOIE0 = 1).\r\n    * Thus, we write TIMSK = (1<<TCIE0) for enabling **local interrupt.**\r\n* interrupt service routine (ISR) (VECTOR TABLE)\r\n* ![](/assets/images/2021-09-29-07-48-38.png)\r\n* TIMER0_OVF_vect means that we are sending overflow flag as a parameter to ISR which will enable the overflow flag **on interrupt** and set the program counter's value to the corresponding location.\r\n* Now inside ISR, we perform timer related operations i.e reassigning TCNT0 value and toggling PORTB's value for generating square.\r\n\r\n## Steps in executing an interrupt\r\n* ![](/assets/images/2021-09-29-07-53-22.png)\r\n* Interrupt Vector Table\r\n    * ![](/assets/images/2021-09-29-10-24-57.png)\r\n    * After the first step is completed, based on the interrupt given, the program counter goes to that particular vector address as per the above image shown.\r\n\r\n## External Input\r\n* ![](/assets/images/2021-09-29-10-40-57.png)\r\n* The red colored pins are external interrupts.\r\n\r\n## Extra Points\r\n* ![](/assets/images/2021-09-29-07-52-43.png)\n","url":"https://sameep1234.github.io/notes/notes\\5G1ouPzQd2x7HeUFhxbiB.html","relUrl":"notes\\5G1ouPzQd2x7HeUFhxbiB.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Embedded Systems.Lecture 4","content":"\n\r\n# Timers (Cont.)\r\n\r\n> Program to generate square wave of time period 100 micro second on Pin 1 of Port A and clock frequency of 1Mz\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid T0Delay() {\r\n    TCNT0 = 206; // Time delay is of 50 microseconds and not 100 microseconds.\r\n    TCCR0 = 0x01; // Normal mode and no prescaling\r\n    while((TIFR & 0x1) == 0); // Check for counter\r\n    TCCR0 = 0; // Stop the clock\r\n    TIFR = 0x1; // Reset flags\r\n}\r\n\r\nint main() {\r\n    DDRA = 0x02; // Define PIN 1 of PORTA to be ouput\r\n    while(1)\r\n    {\r\n        PORTA = 0x02; // Turn PIN 1 of PORTA on\r\n        T0Delay(); // Provide time delay\r\n        PORTA = 0x00; // Turn PIN 1 of PORTA off\r\n        T0Delay(); // Proivde time delay\r\n        // This will generate a square wave form.\r\n    }\r\n    return 0;\r\n}\r\n```\r\n---\r\n\r\n> ![](/assets/images/2021-09-13-11-42-59.png)\r\n\r\n* The outside signal will come from pins of ports as they can have alternate functions too.\r\n* These pins will take the input from port.\r\n* Follow this for more functions\r\n    * ![](/assets/images/2021-09-13-11-44-23.png)\r\n* For internal purpose, assume that the clock frequency is 1Mz. **Note that 1Hz is from outside world.**\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nint main() {\r\n    DDRB = 0x00; // Declare whole port as input because this is where external signal will arrive.\r\n    DDRC = 0xFF; // Declare whole port as output because this is where we will be displaying the count of TCNT.\r\n    PORTB = 0x00; // Set PORTB to 0\r\n    while(1) { // Run forever\r\n        TCCR0 = 0x06; // External clock with falling edge value from the table\r\n        PORTC = TCNT0; // Display contents of TCNT0 on PORTC\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\n## CTC Mode\r\n* It is compare mode. This means that instead of going till 0xFF, it will drop at the set value.\r\n* It may or may not be equal to 0xFF.\r\n* Now to compare the flag, we compare with 0x02. (i.e flag 1 instead of flag 0).\r\n* **This is because the overflow flag is not affected, the compare flag is affected.**\r\n\r\n> Program to generate a square wave of time period 150 microseconds on PIN 1 of PORT A. Assume cystal frequency = 1MHz. use timer in CTC mode.\r\n\r\n* Note that the delay of 150 microseconds is for the whole wave.\r\n* Thus, if we need a delay for only one part of the wave, we need to use a delay of 75 microseconds.\r\n* Now we want to write the value of OCR0.\r\n* Make sure to change the value of TCCR0 for CTC mode.\r\n* Now, the time duration will depend not only on TCNT0 but also on OCR0.\r\n* In normal mode, we are concerned with FF - TCNT0 value but here we are concerned with OCR0 - TCNT0 which must be 75.\r\n* Note that one must always be careful about which flag are we going to use.\r\n* In **normal mode**, we are waiting for **overflow flag** whereas in **CTC mode** we are waiting for the **compare flag**.\r\n* For simplicity, you can put TCNT0 value to be 0 and OCR0 value to be 75. **The concept remains the same i.e OCR-TCNT should be 75.**\r\n* \r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid T0Delay() {\r\n    TCNT0 = 0; // TCNT0 = 0\r\n    OCR0 = 75; // OCR0 - TCNT0 = 75 and TCNT0 = 0\r\n    TCCR0 = 0x09; // TCCR0 value for CTC mode and no prescaling\r\n    while( (TIFR & 0x2) == 0); // Check 1st bit\r\n    TCCR0 = 0; // Stop clock\r\n    TIFR = 0x2; // Reset flags\r\n}\r\n\r\nint main() {\r\n    DDRA = 0x02; // Set PORTA.1 as output pin\r\n    while(1) { // Run forever\r\n        PORTA = PORTA ^ 0x02; // Toggle value at PORTA\r\n        T0Delay(); // Apply time delay\r\n    }\r\n    return 0;\r\n}\r\n```\r\n* Now suppose, we start the value of TCNT0 with 200, then how will the OCR value change?\r\n* For this case, we find the extra distance i.e find from where it \"rolls over\".\r\n* Thus, the value of OCR must be 19 becuase from 200 to 256, we would have covered 56 values and then 19 values remain to provide a proper delay of 75 microseconds.\r\n","url":"https://sameep1234.github.io/notes/notes\\F1AmaGrElexDP3rZKJI3D.html","relUrl":"notes\\F1AmaGrElexDP3rZKJI3D.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Embedded Systems.Lecture 3","content":"\n\r\n# Timer (Cont.)\r\n\r\n## Extra Points\r\n* If prescaling is applied, we multiply the time period of the AVR microcontroller by the same amount as the prescaling ratio.\r\n* Prescaler simply means that we are increasing the time period of the clock. Consequently, we are decreasing the frequency of the clock.\r\n* Time Delay\r\n    * Hex Value\r\n        * ![](/assets/images/2021-09-06-11-10-19.png)\r\n    * Decimal Value\r\n        * ![](/assets/images/2021-09-06-11-11-09.png)\r\n* To clear any flag, write logic **\"1\"** to it.\r\n\r\n## Steps for programming\r\n* ![](/assets/images/2021-09-06-11-23-39.png)\r\n* ![](/assets/images/2021-09-06-11-32-17.png)\r\n\r\n> Question that remains is how to store/measure overflow flag?\r\n* For that we use TIFR (Timer/Counter Interrupt Flag Register). It has dedicated 1-bit to store every flag that we may encounter.\r\n\r\n## TIFR Circuit\r\n* It is an 8-bit register.\r\n* Stores flags and **overflow flag is set on 0th bit**.\r\n* Value \"1\" implies overflowed and vice versa.\r\n> The below given figure will be provided for reference in exam.\r\n* ![](/assets/images/2021-09-06-11-37-11.png)\r\n\r\n* Prescalers slows down the clock. Hence increases the time period.\r\n* Thus, multiply the prescaler to clock time period to get the adequate delay.\r\n* Overflow flag is located on 0th bit. Hence to check overflow we check TIFR & 0x1 to be 0.\r\n* **Make sure that to reset the flag by putting \"1\" to the flag.**\r\n* The reason for this could be understood using an analogy. These are not the direct registers. These like control registers which means they act as a switch. We are pressing the \"reset\" switch (by putting \"1\") and in turn it is telling the actual register to reset the values. Thus, instead of 0, we are passing 1.\r\n* Example questions\r\n    * ![](/assets/images/2021-09-06-11-40-28.png)\r\n    * ![](/assets/images/2021-09-06-11-42-27.png)\r\n    * Toggle bits on 4th Pin of PORTB continuously with delay of 70 microseconds. Use Timer0, normal mode and 1:8 prescaler. Frequency of clock is 8MHz.\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid T0Delay() {\r\n    TCNT0 = 0xBA; // Calculated using the formula\r\n    TCCR0 = 0x02; // 1:8 prescaler value using the table\r\n    while((TIFR & 0x1) == 0); // Continuously run until flag is activated\r\n    TCCR0 = 0; // Stop the clock\r\n    TIFR = 0x1; // Reset the values.\r\n}\r\n\r\nvoid main() {\r\n\tDDRB = 0x10; // PORTB.4 is declared as output pin\r\n\twhile(1) // Run forever\r\n\t{\r\n\t\tPORTB = 0x10; // Turn on\r\n        T0Delay(); // Apply delay\r\n        PORTB = 0x00; // Turn off\r\n        T0Delay(); // Apply delay\r\n\t}\r\n}\r\n```\r\n* Author's method\r\n    * ![](/assets/images/2021-09-06-12-12-18.png)\n","url":"https://sameep1234.github.io/notes/notes\\Y8Eu4fgviDeYqILunOUEG.html","relUrl":"notes\\Y8Eu4fgviDeYqILunOUEG.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Embedded Systems.Lecture 2","content":"\n\r\n# Timers\r\n\r\n## Timers in AVR\r\n* ![](/assets/images/2021-09-05-10-37-02.png)\r\n* ATMEGA32\r\n    * Timer 0: 8-bit\r\n    * Timer 1: 16-bit\r\n    * Timer 2: 8 bit\r\n* Example\r\n    * ![](/assets/images/2021-09-05-10-48-08.png)\r\n    * Complex Solution\r\n    ![](/assets/images/2021-09-05-10-50-57.png)\r\n\r\n## Components\r\n* TCCR: Timer/Counter Control Register\r\n    * 8-bit register\r\n    * ![](/assets/images/2021-09-05-11-18-21.png)\r\n    * When you put 000, timer stops if it is running.\r\n    * Other information given in the image above.\r\n* TOV: Timer Overflow\r\n* TCNT: Timer/Counter Register\r\n    * 8-bit register that increments count.\r\n    * It is a read/write register.\r\n    * **Increments every clock cycle.**\r\n    * Overflow occurs at 0xFF.\r\n    * ![](/assets/images/2021-09-05-11-02-40.png)\r\n* OCR: Output Compare Register\r\n    * It is a read/write 8-bit register.\r\n    * Continuously compared with counter value i.e TCNT value.\r\n    * Used majorly when we are using timer in CTC mode.\r\n* OCF: Output Compare flag\r\n    * If the value compared by the OCR matches the value in TCNT, this flag will be turned on to represent the overflow.\r\n\r\n## Circuit (Timer 0)\r\n![](/assets/images/2021-09-05-10-59-49.png)\n","url":"https://sameep1234.github.io/notes/notes\\jkmMfJvEbQVlIf4g87Sap.html","relUrl":"notes\\jkmMfJvEbQVlIf4g87Sap.html"},{"doc":"Lecture 2 (Lab)","title":"Lecture 2 (Lab)","hpath":"courses.Semester 5.Embedded Systems.Lecture 2 (Lab)","content":"\n# Coding Program and Examples\n\n## Extra Points\n* Different states of pins\n    * ![](/assets/images/2021-09-05-08-42-05.png)\n* Status of 8-bit Registers\n    * ![](/assets/images/2021-09-05-08-50-10.png)\n* Unpacked BCD\n    * 4 LSB's are used.\n    * 4 MSB's are kept 0.\n    * Eg. 4 = 0000 0100\n* Packed BCD\n    * 4 LSB's = One number\n    * 4 MSB's = Second number\n    * Eg. 24 = 0010 0100\n","url":"https://sameep1234.github.io/notes/notes\\pQzSpZXUDlUdOzofCMW0k.html","relUrl":"notes\\pQzSpZXUDlUdOzofCMW0k.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Embedded Systems.Lecture 1","content":"\n\r\n# Introduction to Embedded Systems\r\n\r\n## Course Material\r\n* Text Book - The AVR Microcontroller and Embedded Systems using Assembly and C by Muhammad Ali Mazidi, Sarmad Naimi and Sepehr Naimi.\r\n\r\n## Evaluation Scheme\r\n* End Semester Exam: 30%\r\n* Mid Semester Exam: 25%\r\n* Laboratory Experiments: 45%\r\n* **Relatve Grading**\r\n\r\n## Microprocessor\r\n* Brain of the computer\r\n* A programmable integrated device that takes input, uses memory and produces output.\r\n\r\n> Now in embedded system, we are moving from microprocessor to microcontroller.\r\n\r\n* Key difference between them is that in microprocessor you can use multiple chips externally whereas for microcontroller, you can't use that.\r\n\r\n## Extra Points\r\n* When system performance is critical then use microprocessors because we can manage the RAM and ROM.\r\n* When issues of space, power and rapid development are critical then use microcontrollers because microcontrollers have built in chips and thus, space and time to develop is less.\r\n\r\n> What is embedded system?\r\n\r\n* We are talking about microprocessor and microcontroller.\r\n* A way of working, organizing or performing one or many tasks according to a fixed set of rules, program or plan is called a **system**.\r\n* A system that has the following two properties is called an embedded system.\r\n    * software embedded into a computer hardware.\r\n    * which makes a system dedicated for an application or specific part of an application or product or part of a larger system.\r\n* It has a dedicated purpose software embedded in a computer hardware.\r\n\r\n## Classification\r\n* Stand Alone\r\n    * Designed to perform a very specific task **repetitively**.\r\n    * Non-reactive to the environment conditions.\r\n    * Simplest form of ES.\r\n* Real Time\r\n    * Usually monitors the environment where it is installed.\r\n    * It is required to respond in time to a request.\r\n    * Eg. Systems used in AC.\r\n* Network or Remote Controlled\r\n    * Can be reactive or non-reactive to its environment.\r\n    * Built using specialized communication processor.\r\n    * Eg. Drone\r\n* Mobile\r\n    * Designed to be continuously on the move.\r\n    * Battery Powered\r\n\r\n## Components\r\n* Hardware\r\n* Software\r\n    * Higher level programs that can be changed without replacing the hardware.\r\n* Firmware\r\n    * They are small and fixed programs and data structures that internally control various electronic devices.\r\n    * They are very basic low level programs without which a device would not function at all.\r\n","url":"https://sameep1234.github.io/notes/notes\\Zccsc3smWAqMh6RBI9ohc.html","relUrl":"notes\\Zccsc3smWAqMh6RBI9ohc.html"},{"doc":"Lecture 1 (Lab)","title":"Lecture 1 (Lab)","hpath":"courses.Semester 5.Embedded Systems.Lecture 1 (Lab)","content":"\n\r\n# Selection and Coding\r\n\r\n> #### This was the lab session but theory was taught.\r\n\r\n## Criteria's to select microcontroller\r\n* Computational need - Efficiency, cost etc.\r\n    * 8-bit vs 16-bit vs 32-bit\r\n    * Speed\r\n    * Power Consumption\r\n    * Packaging\r\n        * Space\r\n        * Assembling\r\n        * Prototyping end product\r\n    * Amount of RAM and ROM on chip\r\n    * No. of I/O pins\r\n    * No. of timers\r\n    * Upgradability to new versions\r\n    * Cost per unit\r\n* Availability of software development tools\r\n    * Availability of\r\n        * Assemblers\r\n        * Debugger\r\n        * Code-efficient C-language compiler\r\n        * Technical Support\r\n        * In-house and outside expertise\r\n* Reliable source of microcontroller\r\n    * Number of companies supplying controller.\r\n    * Are they reliable?\r\n    * Will it support in future?\r\n\r\n> We would be using AVR Microcontrollers\r\n\r\n## Harvard vs Princeton\r\n* Harvard\r\n![](/assets/images/2021-09-04-18-21-51.png)\r\n* Princeton\r\n* ![](/assets/images/2021-09-04-18-22-18.png)\r\n\r\n## RISC vs CISC\r\n* CISC\r\n    * Complex Instruction Set Computer\r\n    * Single instruction can execute several low-level operations (including load from memory, artihmetic operations and memory store).\r\n    * Capability of multi-step operations.\r\n* RISC\r\n    * Reduced Instruction Set Computer\r\n    * Low complexity\r\n        * Speed-up\r\n        * Less errors in implementation\r\n    * Less transistors\r\n    * More space and registers\r\n* Conclusion\r\n![](/assets/images/2021-09-04-18-30-30.png)\r\n\r\n## AVR Microcontrollers\r\n* Follows Harvard Architecture\r\n* Follows RISC architecture with CISC instruction set\r\n* Full-form - Advanced Virtual RISC\r\n* 8 Bit Bus (For our application)\r\n* Pin count between 8 to 100\r\n* Scalable\r\n* 32 working registers\r\n    * All connected to ALU\r\n* Single Cycle Execution\r\n    * One instruction per external clock\r\n    * Low power consumption\r\n* Efficient core\r\n* High system level integration\r\n\r\n## Extra points\r\n* ![](/assets/images/2021-09-04-18-37-03.png)\r\n* For ATMEGA, we have 4 ports each of 8 bit.\r\n* Each pin is configurable\r\n* Types of configuration\r\n    * Input with internal pull-up\r\n    * Input with no pull-up\r\n    * Output (Driven Low)\r\n    * Output (Driven High)\r\n* Each Port will have **3 main registers**\r\n    * DDRx - Data Direction Register\r\n        * For configuring data direction (whether input or output)\r\n    * PORTx - Port output/Driver Register\r\n        * Output Mode\r\n    * PINx - Port Input Register\r\n        * Reading Mode\r\n\r\n> **How to give direction?**\r\n\r\n* For any Pin, if it is defined 0, then it represents input pin and vice versa.\r\n\r\n## Examples of Program\r\n* ![](/assets/images/2021-09-04-18-45-38.png)\r\n* ![](/assets/images/2021-09-04-18-48-57.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\3XVT9rTfG77eMnesZzkAE.html","relUrl":"notes\\3XVT9rTfG77eMnesZzkAE.html"},{"doc":"Extra Practice Questions","title":"Extra Practice Questions","hpath":"courses.Semester 5.Embedded Systems.Extra Practice Questions","content":"\n\r\n## [Folder Link Mid sem Papers](https://drive.google.com/drive/u/1/folders/15O5LCqepDlY5TIxaXk68Lii8eqqHUiuG)\r\n\r\n## [Past year mid sem solutions](https://drive.google.com/file/d/1fr7RTkFWCfk1MBbgnFHZYbqGLAFldIR3/view?usp=sharing)\r\n\r\n## Mid sem 2020 Q6\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nT0delay(){\r\n\r\n    TCNT0 = 0;\r\n    OCR0 = 94; // 1:8 Prescaled value for OCR0\r\n    TCCR0 = 0x0A; // 1:8 Prescaler value\r\n    while(TIFR&0X02 == 0){}\r\n    TCCR0 = 0x00;\r\n    TIFR = 0x02;\r\n}\r\n\r\nvoid main()\r\n{\r\n    DDRA = 0x0F;\r\n    int i;\r\n    int temp;\r\n    while(1)\r\n    {\r\n        for (i=7;i>=0;i-=2)\r\n        {\r\n            PORTA = 0x00;\r\n            temp = 1<<i;\r\n            temp = temp | (1<<(i-1));\r\n            PORTA = temp;\r\n            T0delay();\r\n        }\r\n    } \r\n}\r\n```\r\n\r\n## Mid sem 2020 Q7\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nT0delay(){\r\n    TCNT0 = 156;\r\n    TCCR0 = 0X01;\r\n    While(TIFR & 0X01 == 0);\r\n    TCCR0 = 0;\r\n    TIFR = 0X01;\r\n}\r\nint counter = 0;\r\nvoid main()\r\n{\r\n    int bin,x,d2,d1;\r\n    DDRD = 0XFF;\r\n\r\n    DDRC = 0XFF;\r\n    DDRB = 0XFF;\r\n\r\n    DDRA = 0X00; // INPUT\r\n\r\n    MCUCR = 0x03;\r\n    GICR = 0x40;\r\n    TIMSK = 0x01;\r\n    sei();\r\n\r\n    while(1){\r\n        bin = pinA;\r\n        x = bin/10;\r\n        d1 = bin%10;\r\n        d2 = x%10;\r\n        PORTB = d1;\r\n        PORTC = d2;\r\n    }\r\n}\r\n\r\nISR(TIMER0_OVF_vect){\r\n    PORTD.b7 = 1;\r\n    T0delay();\r\n    PORTD.b7 = 0;\r\n    T0delay();\r\n}\r\n\r\nISR(INT0_vect){\r\n    counter++;\r\n    if(counter<120){\r\n        PORTD.b5 = 1;\r\n        PORT.b6 = 0;\r\n    }\r\n    else{\r\n        PORT.b6 = 1;\r\n        PORT.b5 = 0;\r\n    }\r\n}\r\n```\r\n\r\n## Mid sem 2019 Q5\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid main(){\r\n    DDRA = 0x00;\r\n    DDRB = 0x00;\r\n    DDRC = 0XFF;\r\n\r\n    int x,y, combined;\r\n    x = PINA & 0x0F;\r\n    y = PINB & 0X0F;\r\n    if(x%2 ==0){\r\n        combined = y<<4 | x;\r\n        PORTC = combined;\r\n    }\r\n    else{\r\n        combined = x<<4 | y;\r\n        PORTC = combined;\r\n    }\r\n}\r\n```\r\n\r\n## Mid sem 2019 Q6\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nT0delay(){\r\n\r\n    TCNT0 = 163;\r\n    TCCR0 = 0x02; // Prescaler of 1:8\r\n    while(TIFR&0X01 == 0){}\r\n    TCCR0 = 0x00;\r\n    TIFR = 0x01;\r\n}\r\n\r\nvoid main()\r\n{\r\n    DDRA = 0x0F;\r\n    int i;\r\n    while(1)\r\n    {\r\n        for (i=0;i<=7;i++)\r\n        {\r\n            PORTA = 1<<i;\r\n            T0delay();\r\n        }\r\n    } \r\n}\r\n```\r\n\r\n## Mid sem 2019 Q7\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nvoid main(){\r\n    DDRA = 0XFF;\r\n    DDRB = 0x00;\r\n    DDRD = 0X01;\r\n\r\n    TCCR0 = 0x07;\r\n    \r\n    MCUCR = 0x0B;\r\n    GICR = 0xC0;\r\n    sei();    \r\n\r\n    PORTD = 0x0D; // Activate Pull-up INT0 and INT1\r\n    while(1){\r\n        if(PORTA <= 100)\r\n            PORTA ++;\r\n        else \r\n            PORTA = 0x00;\r\n    }\r\n}\r\n\r\nISR(INT0_vect){\r\n    PORTD.b0 ^= 1;\r\n}\r\n\r\nISR(INT1_vect)\r\n{\r\n    PORTC++;\r\n}\r\n```\r\n\r\n## Mid sem 2018 Q4\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid main()\r\n{\r\n    DDRA = 0x00;\r\n    DDRB = DDRC = DDRD = 0xFF;\r\n    int x, d1,d2,d3, y;\r\n\r\n    while(1)\r\n    {\r\n        x = PINA;\r\n        y = x / 10;\r\n        d1 = x % 10;\r\n        d2 = y % 10;\r\n        d3 = y / 10;\r\n\r\n        PORTB = d1;\r\n        PORTC = d2;\r\n        PORTD = d3;\r\n    }\r\n}\r\n```\r\n\r\n## Mid sem 2018 Q5\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid T0Delay()\r\n{\r\n    TCCR0 = 0x01;\r\n    TCNT0 = 206;\r\n    while((TIFR & 0x01) == 0);\r\n    TIFR = 0x01;\r\n    TCCR0 = 0x00;\r\n}\r\n\r\nvoid main()\r\n{\r\n    DDRB = 0xFF;\r\n    int i, temp;\r\n\r\n    while(1)\r\n    {\r\n        for(i=0;i<8;i++)\r\n        {\r\n            temp = 1<<i;\r\n            PORTB = temp | 1<<(7-i);\r\n            T0Delay();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Mid sem 2018 Q6\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nvoid T0Delay()\r\n{\r\n    TCCR0 = 0x09;\r\n    TCNT0 = 0;\r\n    OCR0 = 50;\r\n    while((TIFR & 0x02) == 0);\r\n    TIFR = 0x02;\r\n    TCCR0 = 0x00;\r\n}\r\n\r\nvoid main()\r\n{\r\n    DDRD = 0xFF;\r\n    DDRA = 0x00;\r\n    DDRC = 0xFF;\r\n    int x;\r\n\r\n    GICR = 0x40; // Local external interrupt\r\n    MCUCR = 0x02; // Mode for external interrupt\r\n    TIMSK = 0x02; // Timer interrupt\r\n    sei(); // Global interrupt\r\n\r\n    PORTD = 0x04; // Activate pull-up\r\n\r\n    while(1)\r\n    {\r\n        x = PINA;\r\n        PORTC = (x >> 1);\r\n    }\r\n}\r\n\r\nISR(TIMER0_COMP_vect)\r\n{\r\n    PORTD ^= 0x10;\r\n    T0Delay();\r\n}\r\n\r\nISR(INT0_vect)\r\n{\r\n    PORTD.b5 ^= 1; \r\n}\r\n```\r\n\r\n## Question 1\r\n> Program to toggle PB4 every 2ms. Use Timer1, Normal Mode and no prescaler and assume clock frequency = 8MHz.\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid T1Delay()\r\n{\r\n    TCNT1 = 49536; // TCNT1 Value for 2ms delay\r\n    \r\n    TCCR1 = 0x0001; // TCCR1 value for normal mode, no prescaling.\r\n    /* Can also be written as follows\r\n        TCCR1H = 0x00;\r\n        TCCR1L = 0x01; \r\n    */\r\n    \r\n    while((TIFR & 0x04) == 0); // Run until timer1 TOV1 flag overflows\r\n\r\n    TIFR = 0x04; // Reset flags\r\n    TCCR1 = 0x0000; // Stop clock\r\n}\r\n\r\nvoid main()\r\n{\r\n    DDRB = 0x10; // Declare PORTB.4 as output\r\n    while(1) // Run forever\r\n    {\r\n        PORTB ^= 0x10; // Toggle PORTB.4\r\n        T1Delay(); // Apply delay\r\n    }\r\n}\r\n```\r\n\r\n## Question 2\r\n> Assuming that a 1Hz clock pulse is fed into into pin T0 (PB0), use the TOV0 flag to extend Timer0 to a 16-bit counter and display the counter on PORTC and PORTD\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid main()\r\n{\r\n    DDRC = 0xFF; // Declare PORTC as output\r\n    DDRD = 0xFF; // Declare PORTD as output\r\n\r\n    PORTB = 0x01; // Activate pull up\r\n    \r\n    TCCR0 = 0x06; // TCCR value for external clock\r\n    TCNT = 0x00; // Start counter from 0\r\n\r\n    while(1) // Run forever\r\n    {\r\n        PORTC = TCNT0; // Transfer content of TCNT0 to PORTC\r\n        while((TIFR & 0x01) == 0) // Run untill roll over\r\n        {\r\n            PORTC = TCNT0; // Transfer continuously to PORTC\r\n        }\r\n\r\n        TIFR = 0x01; // Reset flags\r\n        PORTD += 1; // Increment PORTD\r\n    }\r\n}\r\n```\r\n\r\n## Question 3\r\n> Assume 1Hz external clock is fed to PB1 (T1). Program for counter1 in rising edge mode to count the pulses and display the TCNT1H and TCNT1L registers on PORTD and PORTC, respectively\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid main()\r\n{\r\n    PORTB = 0x02; // Activate pull-up\r\n\r\n    DDRC = 0xFF; // Output mode for PORTC\r\n    DDRD = 0x0FF; // Output mode for PORTD\r\n\r\n    TCCR1 = 0x0006; // External clock source, no prescaling\r\n\r\n    TCNT1 = 0x0000; // Set count to 0\r\n\r\n    while(1) // Run forever\r\n    {\r\n        // Perform the required task\r\n        PORTC = TCNT1L;\r\n        PORTD = TCNT1H;\r\n\r\n        while((TIFR & 0x04) == 0)\r\n        {\r\n            PORTC = TCNT1L;\r\n            PORTD = TCNT1H;\r\n        }\r\n\r\n        TIFR = 0x04; // Reset Flag\r\n    }\r\n}\r\n```\r\n\r\n## Question 4\r\n> Using Timer0 and Timer1 interrupts, generate square waves on pins PB1 and PB7 respectively while transferring data from PORTC to PORTD\r\n\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nvoid main()\r\n{\r\n    DDRB = 0x82; // Declare pins B2 and B7 as output\r\n    DDRC = 0x00; // Input PORTC\r\n    DDRD = 0xFF; // Output PORTD\r\n\r\n    TCNT0 = 0x00; // Start timer0 from 0 i.e max delay\r\n    TCNT1H = 0x00;\r\n    TCNT1L = 0x00; // Start timer1 from 0 i.e max delay\r\n\r\n    TCCR0 = 0x01; // Normal mode, no prescaler timer0\r\n    TCCR1 = 0x0001; // Normal mode, no prescaler timer1\r\n\r\n    TIMSK = 0x05; // Enable local interrupt for timer1 and timer0\r\n    sei(); // Enable global interrupts\r\n\r\n    while(1) // Run forever\r\n    {\r\n        PORTD = PINC; // Transfer data from PORTC to PORTD\r\n    }\r\n}\r\n\r\nISR(TIMER0_OVF_vect)\r\n{\r\n    TCNT0 = 0x00; // Reset timer0 again\r\n    PORTB ^= 0x02; // Toggle PORTB.1\r\n}\r\n\r\nISR (TIMER1_OVF_vect)\r\n{\r\n    TCNT1 = 0x0000; // Reset timer1 again\r\n    PORTB ^= 0x80; // Toggle PORTB.7\r\n}\r\n```\r\n\r\n## Question 5\r\n> Using Timer0 and Timer1 interrupts, write a program in which PORTA counts up everytime Timer1 overflows (after every 1 sec it overflows) and a pulse is fed into Timer0 where Timer0 is used as counter and counts up. Furthermore whenever the counter reaches 200, it will toggle the pin PORTB.6. All these should happen while transferring data from PORTC to PORTD. Assume XTAL = 1MHz.\r\n\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nvoid main()\r\n{\r\n    DDRB = 0x40; // Declare PORTB.4 as output pin\r\n    DDRA = 0xFF; // Declare whole PORTA as output\r\n    DDRD = 0xFF; // Declare whole PORTD as output\r\n    DDRC = 0x00; // Declare PORTC as input\r\n\r\n    PORTB = 0x01; // Activate pull-up\r\n\r\n    TCNT0 = -200 // Load Initial value of TCNT0\r\n    TCNT1 = 34286 // Value for 1 sec delay using 1:256 prescaler\r\n\r\n    TCCR0 = 0x06 // External clock, falling edge, no prescaler\r\n    TCCR1 = 0x0004; // Normal mode, 1:256 prescaler\r\n\r\n    TIMSK = 0x05;  // Enable local interrupts for Timer1 and Timer0\r\n    sei(); // Enable Global interrupts\r\n\r\n    while(1) // Run forever\r\n    {\r\n        PORTD = PINC; // Transfer data as required\r\n    }\r\n}\r\n\r\nISR(TIMER0_OVF_vect)\r\n{\r\n    TCNT0 = -200; // Reset count value timer0\r\n    PORTB ^= 0x40; //Toggle PORTB.6 \r\n}\r\n\r\nISR(TIMER1_OVF_vect)\r\n{\r\n    TCNT1 = 34286; // Reset count value timer1\r\n    PORTA++; // Increment value as mentioned\r\n}\r\n```\r\n\r\n## Question 6\r\n> Assume that the INT0 pin is connected to a switch that is normally high. Write a program that toggles PORTC.3 **only once** whenever INTO pin goes low.\r\n\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nvoid main()\r\n{\r\n    DDRC = 0x04; // Declare PORTC.3 as output\r\n    PORTD = 0x04; // Activate External pull-up\r\n\r\n    MCUCR = 0x02; // INT0 is falling edge triggered\r\n    GICR = 0x40; // Enable INT0 local interrupt\r\n    sei(); // Enable global interrupts\r\n\r\n    while(1); // Run forever and do nothing\r\n}\r\n\r\nISR(INT0_vect)\r\n{\r\n    PORTC ^= 0x04; // Toggle PORTC.3\r\n}\r\n```\r\n\r\n> Not clear understanding of Question 6.\n","url":"https://sameep1234.github.io/notes/notes\\QzwJieYmtmXZ6OMnYuhA9.html","relUrl":"notes\\QzwJieYmtmXZ6OMnYuhA9.html"},{"doc":"Changelog","title":"Changelog","hpath":"root.changelog","content":"","url":"https://sameep1234.github.io/notes/notes\\changelog.html","relUrl":"notes\\changelog.html"}]
=======
[{"doc":"This page has not yet sprouted","title":"This page has not yet sprouted","hpath":"403","content":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","url":"https://sameep1234.github.io/notes/notes\\403.html","relUrl":"notes\\403.html"},{"doc":"Curated Notes","title":"Curated Notes","hpath":"root","content":"\n\r\nYou have reached the home page of my curated notes. I am a third year student pursuing Computer Science and Engineering at Ahmedabad University.\r\n\r\nFeel free to use this resource to its best potential and reach out to me on [Linkedin](https://www.linkedin.com/in/sameep-vani/) and do checkout my [GitHub](https://github.com/Sameep1234)\r\n","url":"https://sameep1234.github.io/notes","relUrl":"/"},{"doc":"Stepwellradio","title":"Stepwellradio","hpath":"Stepwellradio","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\3ONxZ3Khb7nFPdLxlV1ib.html","relUrl":"notes\\3ONxZ3Khb7nFPdLxlV1ib.html"},{"doc":"Steptech","title":"Steptech","hpath":"Stepwellradio.Steptech","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\xm1zwK8k3nHvutw0hqXhh.html","relUrl":"notes\\xm1zwK8k3nHvutw0hqXhh.html"},{"doc":"Continuous Integration and Continuous Deployment","title":"Continuous Integration and Continuous Deployment","hpath":"Stepwellradio.Steptech.Continuous Integration and Continuous Deployment","content":"\n\r\n\r\n## Using Github actions\r\n\r\n### Continuous Integrations (CI)\r\n* DevOps software development practice to automate the integration of code changs from multiple contributors into a single software project.\r\n* In simple terms, CI helps to build your code as soon as it is pushed into the branch where CI workflow is defined.\r\n* This way we don't have to manually build and check for errors in the code. It would all be automated and done by github actions.\r\n* Steps\r\n    * Go to github actions tab on the site.\r\n    * Click create new workflow.\r\n    * Under the continuous integration workflows, click more  continuous integration workflows.\r\n    * Select the **Python application** and click set up this workflow.\r\n        * name: Self-explanatory\r\n        * on: when do you want to trigger the scripts\r\n        * push: Implies that the scripts will trigger on push\r\n        * branches: On which branch shall the \"event\" (push, pull etc) occur, so as to trigger CI workflow.\r\n        * jobs: **Most important part.**\r\n        * build: We specify whether we are building or deploying (write deploy instead of build to let it know that its a deploy script)\r\n        * runs-on: Remote desktop offered by **github.**\r\n        * steps: Self-explanatory\r\n        * uses: preferable keep it actions/checkout@v2. It implies that we are just building and not deploying. For deploying we will need to \"ssh\" into the server and hence we will need to change this.\r\n        * name: name of the script\r\n        * uses: Since, we selected python, keep it as it is.\r\n        * with: Specify the version, for us it would be a python version.\r\n        * run: Here write the script for building your project\r\n        ```bash\r\n        pip install flake8\r\n        pip install pytest\r\n        cd frontend\r\n        npm install\r\n        npm run build\r\n        ```\r\n        * The above script builds our react frontend project.\r\n        * flake8 is a python library to check coding styles and warnings including some imported libraries that are unused and undefined names etc.\r\n        * For information on pytest follow this [link](https://realpython.com/pytest-python-testing/)\r\n        * Initially pytest will give an error and hence it would be better to comment it. This bug is yet to be fixed.\r\n        * Commit the file and your CI is ready to go!\r\n\r\n> Check for errors in the details section and resolve any that is encountered.\r\n\r\n### Continuous Deployment (CD)\r\n* It is a software release process that uses automated testing to validate any changes and deploys it to the server.\r\n* Simply put, after CI, it deploys your code to the production environment automatically.\r\n\r\n\r\n> There are two ways to acheive this. One, to accomodate the code in the CI.yml file itself and the other is to create a whole new file for increasing modularity.\r\n* We have done the second approach.\r\n* For the first one, copy the build code written above and instead of build (under jobs), write deploy and then write the code as per the below steps.\r\n\r\n* Steps\r\n    * Go to actions tab on the site.\r\n    * Click create new workflow.\r\n    * Click on **create a workflow yourself.**\r\n    * Most of the code remains the same as that in CI.\r\n    * Under jobs, replace build with deploy.\r\n    * Delete the **workflow_dispatch** code.\r\n    * Further, delete the **uses section and single command code** under **steps**.\r\n    * By now, you will only be left with one multi-line script under **steps**.\r\n    * Replace the **name** with anything relavant.\r\n    * Then type the following without any tabs or indentation. **Note that the following should be exactly below name and without a hypen (-)**\r\n        * uses: appleboy/ssh-action@master\r\n        * This allows github to \"ssh\" into our server.\r\n    * Now open a terminal in your **local machine** and type the following command.\r\n        * ```bash\r\n            ssh-keygen -C <EMAILID>\r\n        ```\r\n        * Make sure to replace <EMAILID> with radio's email ID.\r\n        * This will create a new public and private key.\r\n    * Then, go to the settings of the repository.\r\n    * Left hand side, click on secrets and then click on new repository secret.\r\n    * Provide your newly created **private key** and name it anything relevant.\r\n    * Now \"ssh\" into the server and under .ssh/authorized_keys, place the newly created **public key** in it.\r\n    * Now go back on github site and add the with section shown in the below image. Make sure it is exactly the same except changing the secrets name accoring to what you have added in github secrets.\r\n    * ![](/assets/images/2021-09-12-18-19-36.png)\r\n    * **Make sure that you change the secrets with your respective server.**\r\n    * With the same indentation as that of host, key etc. write script for deployment.\r\n    * script: |\r\n        ```bash\r\n        cd stepwellradio\r\n        git pull https://<YOUR_USERNAME>:<PERSONAL ACCESS TOKEN>@github.com/<USERNAME><REPO_NAME>.git\r\n        python -m pip install --upgrade pip\r\n        pip install flake8 pytest\r\n        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi\r\n        cd frontend\r\n        npm install\r\n        cd ..\r\n        cd backend\r\n        python manage.py collectstatic\r\n        echo \"Deployed Successfully\"\r\n        ```\r\n    * Once it is done, you are good to go.\r\n    * Check details of guthub actions to make sure that there aren't any errors during the deployment.\r\n    * Some potential errors\r\n        * python, pip, nodejs and npm not installed.\r\n        * So make sure that these are installed on the server.\r\n        * **Note that these errors are just for first time set up of the server and hence the commands that are needed to install these need not be placed under the scripts.**\r\n\r\n> There are certain errors that are yet to be resolved like deploy should happen after build returns exit code 0 and some python virtual environment related issues.\r\n","url":"https://sameep1234.github.io/notes/notes\\3FLsdp7cHrFpp80a3luTz.html","relUrl":"notes\\3FLsdp7cHrFpp80a3luTz.html"},{"doc":"Hack","title":"Hack","hpath":"hack","content":"\n","url":"https://sameep1234.github.io/notes/notes\\tf4EZkjy7pO0PyBoTTUm1.html","relUrl":"notes\\tf4EZkjy7pO0PyBoTTUm1.html"},{"doc":"Talks","title":"Talks","hpath":"hack.talks","content":"\n","url":"https://sameep1234.github.io/notes/notes\\nA3VsYcpCjoiDzY1RAHEP.html","relUrl":"notes\\nA3VsYcpCjoiDzY1RAHEP.html"},{"doc":"Industryexpert","title":"Industryexpert","hpath":"hack.talks.industryexpert","content":"\n","url":"https://sameep1234.github.io/notes/notes\\Zms1or56YBpnlJ1kg8jIA.html","relUrl":"notes\\Zms1or56YBpnlJ1kg8jIA.html"},{"doc":"Rajkumarbuyya","title":"Rajkumarbuyya","hpath":"hack.talks.industryexpert.rajkumarbuyya","content":"\n","url":"https://sameep1234.github.io/notes/notes\\esOGgHAZ5FVfhFntuY8Zz.html","relUrl":"notes\\esOGgHAZ5FVfhFntuY8Zz.html"},{"doc":"Rajkumarbuyya","title":"Rajkumarbuyya","hpath":"hack.talks.industryexpert.rajkumarbuyya.md","content":"# Introduction\n* Earlier, big data was for big science\n* Now, Big Data is for Big Population \n\n# New Trends \n  ![](/assets/images/2021-10-25-10-21-48.png)\n  * Computer systems are becoming heterogeneous \n\n# Market Oriented Clouds and PLatforms \n* Cloud architecture is Market Oriented \n* Dynamic provisions between one and multiple cloud is necessary for scalability \n* Research and Market is continuosly developing, but research is quite ahead. It takes 4-5 years for the solution to show up in the market \n* Sensing Mobility Analytics Cloud - SMAC Paradigm \n  \n   ![](/assets/images/2021-10-25-10-44-46.png)\n# New Trends and IoT \n* IoT will consist of 500 Billion objects by 2030 \n* Economic impact is $11 trillion/year by 2025 \n# New Computing Paradigms \n* Cloud computing - Internet can get overworked \n* Edge Computing - Small edge devices that can use cloud platforms also \n* Fog Computing - Combining Edge and Cloud \n* FogBus - Fog/Edge Computing with Blockchain\n# Conclusions and Future Directions \n![](/assets/images/2021-10-25-10-57-20.png)\n\n[A Manifesto for Future Generation Cloud Computing](https://pureadmin.qub.ac.uk/ws/files/155509444/CloudManifesto.pdf)\n\n[Session Recording](https://drive.google.com/open?id=1b7QIgvby5DvsMYkCBXvLXDsGf5o8Zqr-&authuser=parth.s5%40ahduni.edu.in&usp=drive_fs)\n","url":"https://sameep1234.github.io/notes/notes\\4wOUstn2XnEs33BmMg9Nv.html","relUrl":"notes\\4wOUstn2XnEs33BmMg9Nv.html"},{"doc":"Stepwell","title":"Stepwell","hpath":"hack.stepwell","content":"\n","url":"https://sameep1234.github.io/notes/notes\\oWdHo435YvkLxXyhQE4EW.html","relUrl":"notes\\oWdHo435YvkLxXyhQE4EW.html"},{"doc":"Steptech","title":"Steptech","hpath":"hack.stepwell.steptech","content":"\n","url":"https://sameep1234.github.io/notes/notes\\f3fWtD3N0a5VvwlGEKdKa.html","relUrl":"notes\\f3fWtD3N0a5VvwlGEKdKa.html"},{"doc":"Roadmap","title":"Roadmap","hpath":"hack.stepwell.steptech.roadmap","content":"\n","url":"https://sameep1234.github.io/notes/notes\\7fSiBp9RBJmwNbCztigDF.html","relUrl":"notes\\7fSiBp9RBJmwNbCztigDF.html"},{"doc":"Sept12","title":"Sept12","hpath":"hack.stepwell.steptech.roadmap.sept12","content":"\n","url":"https://sameep1234.github.io/notes/notes\\1IYA2i1wcENCBypFL2qe5.html","relUrl":"notes\\1IYA2i1wcENCBypFL2qe5.html"},{"doc":"Sept12","title":"Sept12","hpath":"hack.stepwell.steptech.roadmap.sept12.md","content":"\n### Entry points \n* [GAnalytics](https://support.google.com/analytics/answer/1008080?hl=en#zippy=%2Cin-this-article), [Snowplow](https://towardsdatascience.com/what-is-snowplow-and-do-i-need-it-cbe30fcb302b) \n* [Calendar Skins](https://www.webdesignerdepot.com/2012/04/integrating-google-calendar-with-your-website/), [Styling using the Calendar API](https://stackoverflow.com/questions/49306347/how-to-customize-google-calendar-with-css#:~:text=Google%20Calendar%20exposes%20its%20APIs.%20They%20are%20available%20here%20and%20these%20are%20the%20same%20APIs%20used%20to%20customize%20the%20layout%20for%20android%20Calendar%20app.)\n* [Google Calendar API](https://developers.google.com/calendar/api/v3/reference/events) \n* [CI/CD](https://youtu.be/WTofttoD2xg)\n\n* [SpotDL](https://github.com/schollz/spotifydownload) \n* [Behvioural Analytics](https://www.patrick-wied.at/static/heatmapjs/)\n* Docker - [Docs](https://docs.docker.com/get-started/), [Tutorial](https://youtu.be/3c-iBn73dDE)\n* [Flutter](https://youtu.be/j-LOab_PzzU) \n","url":"https://sameep1234.github.io/notes/notes\\fl2b0eEic0XCe5lpsTQSB.html","relUrl":"notes\\fl2b0eEic0XCe5lpsTQSB.html"},{"doc":"Courses","title":"Courses","hpath":"hack.courses","content":"\n","url":"https://sameep1234.github.io/notes/notes\\cDYirVmosOl7x1zb9SKI7.html","relUrl":"notes\\cDYirVmosOl7x1zb9SKI7.html"},{"doc":"Sem5","title":"Sem5","hpath":"hack.courses.sem5","content":"\n","url":"https://sameep1234.github.io/notes/notes\\TB9izHRgRr5T48DXg123c.html","relUrl":"notes\\TB9izHRgRr5T48DXg123c.html"},{"doc":"Mus","title":"Mus","hpath":"hack.courses.sem5.mus","content":"\n","url":"https://sameep1234.github.io/notes/notes\\GrG8STxtjZuSrIy3KZ8le.html","relUrl":"notes\\GrG8STxtjZuSrIy3KZ8le.html"},{"doc":"Guestspeaker","title":"Guestspeaker","hpath":"hack.courses.sem5.mus.guestspeaker","content":"\n","url":"https://sameep1234.github.io/notes/notes\\xfSEoNEXUCTv7xatHC10M.html","relUrl":"notes\\xfSEoNEXUCTv7xatHC10M.html"},{"doc":"Viveickrajgopalan","title":"Viveickrajgopalan","hpath":"hack.courses.sem5.mus.guestspeaker.viveickrajgopalan","content":"\n","url":"https://sameep1234.github.io/notes/notes\\xtJFhTbkaAgI14u5GmXM1.html","relUrl":"notes\\xtJFhTbkaAgI14u5GmXM1.html"},{"doc":"Viveickrajgopalan","title":"Viveickrajgopalan","hpath":"hack.courses.sem5.mus.guestspeaker.viveickrajgopalan.md","content":"## What do you see when you look yourself in the mirror? \n\n* The distance between 2 earlobes of every human is the same \n* Science is important for studying music because it deals with Human emotions \n* When you are driving a vehicle: You need to know all the variables  \n* Errors are inevitable, so is the recognition of that error if you want to achieve mastery \n\n## Start of Ta Dhom\n* We usually focus on literacy and not education \n* The first way to learn anything is to copy (something that is engrained in humans) \n* Ta Dhom was the inspiration to India 91 \n* We trained for 2 hours a day for 8 months  \n* Then came the realization that anyone can learn this language \n\n## Basic structures\n* Ta Ka Dhi Mi \n   * The clap on it's own does not have any measure\n   * _Ta Ka Dhi Mi_ are like the four dots \n   * It gives it a tempo or a measure\n* 4+3+4+5 = 16 beats\n  * Ta Ka Ta Ki Ta\n  * Ta Ki Ta \n  * Ta Ka Dhi Mi \n\n## Yatis and Formulae\n\n![](/assets/images/2021-09-09-17-59-25.png)\n* Formless is not chaos, it is beautiful \n* What is forecoming looks narrow, what is behind looks widened in Yatis\n* Everything in Yatis is an opposite of another\n\n> \"Say it with me\" - Vivieck Rajgopalan  \n\n# QnA \n## Does the movie industry dilute the richness of the rap that comes through? \n* Any film has been reflective of the society \n* A filmmaker can only do justice to what he/she is inspired by \n* Rap as a culture is something about representing a voice; similar to folk \n  * Non conformist approach is unique to rap \n* Don't copy - People listen to the flow and not your words \n\n## Ta and Dhom analogy? Experience or thoughtful attempt?\n* Mix the ingredients, not the final outputs of anything \n\n## Quarantine Isolation vs Collaboration? \n* Launched [artsqft.com](https://artsqft.com)\n* If I have a problem, there is a high chance other people also have that problem - I should try to solve that problem \n\n## What makes the music alive?  \n* **A beat gets your attention first** \n* The lyric makes you stay with it\n\n## How was your journey for the song? \n* Music will take you places, whatever form it is \n* The sound totally worked in Spain; though nobody understood the language \n* Loved the feeling of it; without focusing on the words \n\n#### [Click here for PDF](/assets/ViveickRajgopalan_MUS100.pdf)\n\n","url":"https://sameep1234.github.io/notes/notes\\NtGL0ZUZUx1J1Tmp66py7.html","relUrl":"notes\\NtGL0ZUZUx1J1Tmp66py7.html"},{"doc":"Ananyaashok","title":"Ananyaashok","hpath":"hack.courses.sem5.mus.guestspeaker.ananyaashok","content":"\n","url":"https://sameep1234.github.io/notes/notes\\Rbd0KG726J06eXXrakLlm.html","relUrl":"notes\\Rbd0KG726J06eXXrakLlm.html"},{"doc":"Ananyaashok","title":"Ananyaashok","hpath":"hack.courses.sem5.mus.guestspeaker.ananyaashok.md","content":"* Never close yourself to an idea that did not make sense at that point of time; Times are constantly changing \n* An instrument gives you a very different perspective as you are just looking at the notes, and not singing \n* Ability to think outside the box are mainly induced by the instrument \n","url":"https://sameep1234.github.io/notes/notes\\zl3Q4rLy1e5TLwiVkobPF.html","relUrl":"notes\\zl3Q4rLy1e5TLwiVkobPF.html"},{"doc":"Idtb","title":"Idtb","hpath":"hack.courses.sem5.idtb","content":"\n","url":"https://sameep1234.github.io/notes/notes\\WQrJBrU3nLhJrZ2MZeSjV.html","relUrl":"notes\\WQrJBrU3nLhJrZ2MZeSjV.html"},{"doc":"Notes","title":"Notes","hpath":"hack.courses.sem5.idtb.notes","content":"\n","url":"https://sameep1234.github.io/notes/notes\\Szj99xLQFoTe11qR7Dz1g.html","relUrl":"notes\\Szj99xLQFoTe11qR7Dz1g.html"},{"doc":"L1","title":"L1","hpath":"hack.courses.sem5.idtb.notes.l1","content":"\n","url":"https://sameep1234.github.io/notes/notes\\Yf7zICBMdMLIc9uhn234I.html","relUrl":"notes\\Yf7zICBMdMLIc9uhn234I.html"},{"doc":"L1","title":"L1","hpath":"hack.courses.sem5.idtb.notes.l1.md","content":"## What is Psychology? \n* Psychology is the science of **behaviour** and the **mind**; it includes the application of the **science** to solve human problems.\n* Unconscious knowledge are operations that are stored in your mind and helps to organise and react to information\n* Subconscious thoughts: Driving a two-wheeler\n* Science is the process of gaining knowledge through observation and experimentation \n## Why is it necessary to study psychology? \n* All of these statements are **False**\n* ![](/assets/images/2021-08-16-18-50-01.png)\n* We do not understand situations that we are using in our everyday life\n## Schools of Psychology \n* Structuralism \n  * You break down anything to it's constituent elements \n  * To study mind, we break it down into smaller parts (through introspection)\n  * Introspection: Objectively examine your thoughts and break it down \n  * Sensations and thoughts\n  ### Problem with this method\n  * It does not tell us how mind functions, even if we have broken it down to it's elements\n* Functionalist Approach \n  * We check for the function of each element \n  * _Mind and behaviour are adaptive_\n  * Problem: We do not have any scientific methods to understand this \n  * Observation and experimentation of the mind is difficult \n* Behaviourism: \n  * Observable actions \n* Gestalt Psychology \n  * Negated the idea of elements\n  * Mind as a whole - pattern and relationships \n  * Informations from the void\n  * ![](/assets/images/2021-08-20-15-02-41.png)\n  * _ToDo_: Analyse the clip from different school of thoughts (Ishan's Mind)\n    * Strctural: \n    * Functionalist: What questions\n    * Behaviourist: How are we going to ask\n    * We are interested in the questions\n\n","url":"https://sameep1234.github.io/notes/notes\\eoa2IppGvxVCqk7xfETyQ.html","relUrl":"notes\\eoa2IppGvxVCqk7xfETyQ.html"},{"doc":"Courses","title":"Courses","hpath":"courses","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\Jq5ki9jf1QLTdc3DYLRW4.html","relUrl":"notes\\Jq5ki9jf1QLTdc3DYLRW4.html"},{"doc":"Semester 5","title":"Semester 5","hpath":"courses.Semester 5","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\O93aKwUCEnkxTR7S8V2eZ.html","relUrl":"notes\\O93aKwUCEnkxTR7S8V2eZ.html"},{"doc":"Sensors","title":"Sensors","hpath":"courses.Semester 5.Sensors","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\BU8smu6Xa4e3tkB0iVHT9.html","relUrl":"notes\\BU8smu6Xa4e3tkB0iVHT9.html"},{"doc":"Lecture 9","title":"Lecture 9","hpath":"courses.Semester 5.Sensors.Lecture 9","content":"\n\r\n> This lecture was donated to a practice quiz and nothing new was taught. Thus, look at LMS practice quiz section for some extra questions.\r\n","url":"https://sameep1234.github.io/notes/notes\\88fOniPiLmcGg3awHDMs5.html","relUrl":"notes\\88fOniPiLmcGg3awHDMs5.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Sensors.Lecture 8","content":"\n\r\n# Strain Sensitivity and Force Sensor\r\n\r\n## Sensitivity and Bridge Circuit\r\n* ![](/assets/images/2021-09-29-15-47-15.png)\r\n* In a bridge circuit, the larger the value of drop for the same strain, the larger would be the sensitivity.\r\n* To acheive this we use two strain gauges, one for changing the value of R4 and other to change the value of R3.\r\n* Note that on increasing the value of R4, the potential was dropping. To acheive the same, we need to attach the strain guage in such a fashion that the value of R3 decreases.\r\n* Only if R3 decreases will the drop increase.\r\n* Now to further increase the sensitivity, we use strain guage in place of R1 and R2 also.\r\n* The manner of attaching the strain guage gets reversed because we want to decrease the value of R1 to increase the value of potential drop.\r\n* Types of bridges\r\n    * Quater - Only one strain guage is used.\r\n    * Half - Two strain guages are used.\r\n    * Full - Four starain guages are used.\r\n* Note that we should use the same/identical strain guages for (R4, R3) pair and (R1, R2) because the strain resistance is a function of temperature also and we want the conditions to be almost similar for both the strain guages.\r\n* This is also the reason as to why three strain guages are not used in a bridge. (This is because we want to acheive temperature independence).\r\n* It is obvious that full bridge is the best in terms of sensitivity but it is costlier than others.\r\n\r\n## Quater Bridge Configuration\r\n* ![](/assets/images/2021-09-29-16-30-21.png)\r\n\r\n## Half Bridge Configuration\r\n* ![](/assets/images/2021-09-29-16-32-36.png)\r\n\r\n## Full Bridge Configuration\r\n* Bending Strain\r\n    * ![](/assets/images/2021-09-29-16-34-20.png)\r\n* Axial Strain\r\n    * ![](/assets/images/2021-09-29-16-35-18.png)\r\n\r\n## Force Sensing Resistance\r\n* Conducting foam is pressed and the contact resitance will decrease.\r\n* This is the method by which we define a relationship with force and resistance.\r\n* Types\r\n    * Shunt Mode Force Sensitive Resistor\r\n        * Foam is only on one side.\r\n    * Thru Mode force sensitve resistor\r\n        * Froam is on both the sides.\r\n\r\n## Force vs Voltage\r\n* We are benefitted if the change in resistance is somehow reflected by the change in voltage.\r\n* To achieve this, we use the below given circuit.\r\n* ![](/assets/images/2021-09-29-16-45-49.png)\r\n* Make sure to select R1 as 1k unless specified otherwise.\r\n\r\n## Force Alarm\r\n* ![](/assets/images/2021-09-29-16-47-54.png)\r\n* Vref depends on problem and hence it is not fix that the value of Vref must be 4V.\r\n","url":"https://sameep1234.github.io/notes/notes\\LbDKJD0pB7bkoOR3RWvtL.html","relUrl":"notes\\LbDKJD0pB7bkoOR3RWvtL.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Sensors.Lecture 7","content":"\n\r\n# Stress and strain\r\n\r\n## Hook's Law\r\n* Amount of deformation is proportional to the force applies to any object.\r\n* ![](/assets/images/2021-09-17-09-41-24.png)\r\n* F = k*(Change in length)\r\n* **Note that the force should be small for the relationship to be linear.**\r\n* If force greater than the threshold is applied than the relationship is not linear.\r\n* Elstic region corresponds to the range of force where the object will retain its shape.\r\n\r\n## Axial vs Transverse force\r\n* This is called tensile force.\r\n* ![](/assets/images/2021-09-17-09-45-18.png)\r\n* Transverse strain means along the length of the object at perpendicular angle.\r\n\r\n## Compressive Force\r\n* ![](/assets/images/2021-09-17-09-48-42.png)\r\n* $\\frac{F}{A}$ is called stress or pressure.\r\n* Units of young's modulus is same as stress or pressure i.e N/m*2 or Pascal (Pa).\r\n\r\n## Strain Gauge\r\n* Sensor for measuring strain\r\n* ![](/assets/images/2021-09-17-10-07-40.png)\r\n* ![](/assets/images/2021-09-17-10-10-23.png)\r\n* Now to calculate change in resistance, we measure the change in current or change in voltage and indirectly find change in resistance.\r\n* $\\frac{Change in R}{R}$ is very small and adding \"1\" might just lead to nothing.\r\n* To avoid this, we need to set a circuit such that the voltage across the resistor is linearly proportional to $\\frac{Change in R}{R}$.\r\n* We need a wheatstone bridge to get the linear proportionality.\r\n    * ![](/assets/images/2021-09-17-10-16-43.png)\r\n* **Understand the equation formed.**\r\n* Bridge circuit for strain measurment\r\n    * In the above figure, R4 is the strain gauge whereas others are normal resistors which are all equal.\r\n    * In bending strain or a tensile strain, the formula still remains the same becuase in either of the cases, the length of the resistor in the strain gauge will change and hence, resitance will change.\r\n    * ![](/assets/images/2021-09-17-10-22-11.png)\r\n    * Final Equation\r\n        * ![](/assets/images/2021-09-17-10-24-07.png)\r\n    * **Note that the strain will always be positive.** According to the equation the negative value might change as change in voltage (Vo) might be negative if R4 gets too high.\r\n","url":"https://sameep1234.github.io/notes/notes\\QYvF9K1IRAtE3LVihayMy.html","relUrl":"notes\\QYvF9K1IRAtE3LVihayMy.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Sensors.Lecture 6","content":"\n\r\n## Feedback control\r\n* Here we are considering the example of an engine of the car.\r\n* ![](/assets/images/2021-09-03-09-49-46.png)\r\n* Motor is used for getting a particular position and not a particular speed.\r\n* Particular position will ensure that the desired speed is achieved.\r\n\r\n## Pulse Width modulation\r\n* Width of the pulse determines the average voltage. Higher the width of the pulse, higher the voltage and vice versa.\r\n* Control of the DC Voltage would not be very efficient if you use a potentiometer and this is because the potentiometer will decipate a lot of power.\r\n* Thus, we use pulse width modulation because changing the pulse of a wave does not require much power and can be easily done.\r\n* ![](/assets/images/2021-09-19-15-25-30.png)\r\n\r\n## Important relationships\r\n* Note that this is for throttle vavle and potentiometer outpur for a car.\r\n* However, the pedal angle does not go from 0 to 90 degrees. It goes from 0 to 45 degrees and hence to make the throttle valve equal to the pedal valve, we use amplifier or simply use a double Vcc for pedal potentiometer.\r\n* ![](/assets/images/2021-09-03-09-55-04.png)\r\n\r\n## H bridge\r\n* ![](/assets/images/2021-09-19-15-43-30.png)\r\n* We have achieved to reverse the direction of rotation of motor without reversing the polarity using H bridge.\r\n* **Note that the switches shown are mechanical but in real life, they are electrical.**\r\n* Electrical H Bridge IC\r\n    * ![](/assets/images/2021-09-19-15-45-17.png)\r\n\r\n## Extra Points\r\n* 90 degrees means full open valve and **don not confuse it with 360 degrees**\r\n","url":"https://sameep1234.github.io/notes/notes\\hudJTsmsAwHGkzWplHL95.html","relUrl":"notes\\hudJTsmsAwHGkzWplHL95.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Sensors.Lecture 5","content":"\n\r\n\r\n# Control Systems\r\n\r\n## Introduction\r\n* System which controls a physical quantity.\r\n* Components of control system\r\n    * Control element (Eg. Timer)\r\n    * Plant (Eg. Heating coil)\r\n* Type of control system\r\n    * Open Loop: Control action is independent of the control variable.\r\n        * We must assume the timer setting to be correct.\r\n        * Block Diagram\r\n        ![](/assets/images/2021-09-02-13-09-13.png)\r\n    * Closed Loop: Control action is dependent of the control variable.\r\n        * User will have manual control.\r\n        * Feedback recieved with the help of human senses. Can also be used as feedback in automatic control systems. For this, the feedback has to be electrical.\r\n        * This means that the control action depends on the output variable.\r\n    * There are various other factors which can't be known and hence are assumed to be constant. For example, ageing and changes in load weight. \r\n    * The main difference between open loop and close loop system is of feedback which is not present in open loop system.\r\n\r\n## Steady state calculation\r\n![](/assets/images/2021-09-02-13-20-17.png)\r\n* A is the gain of the amplifier. It is dimensionless. Also called as the loop gain.\r\n* Km is the motor constant. Upto Km, we will get the **speed** of the motor.\r\n* Ks is the sensor constant. Speed sensors input is speed and output is voltage. Dimension of Ks is opposite tso that of Km. Ks = $\\frac{Vf}{N}$.\r\n* N = speed in rpm.\r\n* A*Km*Ks is called the loop gain of the system. So larger its value, the smaller is the difference and hence we get almost equal value to Vs.\r\n* So it is better to obtain loop gain of 100 and it is achievable.\r\n\r\n## Specification of control systems\r\n* Accuracy of output in steady state.\r\n* Speed of response.\r\n* Feedback (Improves both).\r\n    * Because of this, the effective time constant is reduced and hence speed and accuracy is improved.\r\n\r\n## Steps in analysis of control system\r\n![](/assets/images/2021-09-02-13-49-06.png)\r\n\r\n## Example of Oven\r\n* Block Diagram\r\n    * ![](/assets/images/2021-09-19-14-39-38.png)\r\n* The rate of increase depends on thermal resistance and thermal capacitance.\r\n* ![](/assets/images/2021-09-19-14-42-28.png)\r\n* Heat flow is in watts. Theta is in degrees and thus thermal resistance is in degrees per watts.\r\n* ![](/assets/images/2021-09-19-14-45-07.png)\r\n* ![](/assets/images/2021-09-19-14-45-30.png)\r\n* Mathematical model of oven\r\n    * ![](/assets/images/2021-09-19-14-46-21.png)\r\n* **For steady state**\r\n    * ![](/assets/images/2021-09-19-14-47-40.png)\r\n    * 'q' is the coil wattage of the oven.\r\n* Electrical Equivalent\r\n    * ![](/assets/images/2021-09-19-14-50-15.png)\r\n    * Note that the electrical equations are just the analogous equations.\r\n\r\n## Set Point and Closed system equivalent\r\n* The temperature reached in steady state is called set point.\r\n* For oven, it is qR.\r\n* ![](/assets/images/2021-09-19-14-53-10.png)\r\n* ![](/assets/images/2021-09-19-14-53-30.png)\r\n* Left hand side part is the steady state voltage and as evident from the figure it has some error.\r\n* However, if Kp is chosen to be very large as compared to 1, this error is highly reduced.\r\n* The coefficient of $\\frac{dVo}{dt}$ is time constant and here in our case it is $\\frac{RC}{Kp + 1}$.\r\n* Thus, on increasing Kp, time constant is reduced and a faster response is obtained.\r\n\r\n## Loading effect in Open Loop System\r\n* ![](/assets/images/2021-09-19-14-57-54.png)\r\n* **Note that the steady state voltage is reduced by half and this is a significant drop.**\r\n\r\n## Loaded system with feedback\r\n* ![](/assets/images/2021-09-19-14-58-56.png)\r\n* Slight difference is there in the denominator.\r\n\r\n## LTspice simulation\r\n* ![](/assets/images/2021-09-19-15-01-58.png)\r\n* Watch [video](https://drive.google.com/file/d/1-aeTFcX9shA_R6Owlvv1iaxCVnFcwAAQ/view) for better understanding (1:11:00)\r\n","url":"https://sameep1234.github.io/notes/notes\\gI0T7ym1Q2nLF29FW5zQs.html","relUrl":"notes\\gI0T7ym1Q2nLF29FW5zQs.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Sensors.Lecture 4","content":"\n\r\n# TinkerCAD\r\n> This lecture included the demo of TinkerCAD and hence there are not much notes of it.\r\n\r\n## Extra Points\r\n* [Arduino Code Reference](https://www.arduino.cc/reference/en/)\r\n* Digital Read Function\r\n    * Pin from which digital input is read.\r\n    * Syntax: x = digitalRead(Inpin);\r\n* Analog Read\r\n    * Syntax: x = analogread(potPin);\r\n    * x ranges between 0 to 1023.\r\n* Serial Communication\r\n    * Syntax = Serial.begin(9600)\r\n    * This has to be used in setup part of the program structure.\r\n    * Will establish serial communication between computer monitor and Arduino.\r\n    * Syntax: Serial.println(\"ADC Output\");\r\n    * This will print it as a string on the monitor.\r\n* Digital to Analog Conversion calculation\r\n    * ![](/assets/images/2021-09-01-23-10-27.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\qeyCdoyopW6V6iQp2UDkg.html","relUrl":"notes\\qeyCdoyopW6V6iQp2UDkg.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Sensors.Lecture 3","content":"\n\r\n# Best Fit, Measurement and Control Systems\r\n\r\n## Points\r\n* With one value of x, take many values of y and then take the average\r\n* Error can occur at input as well as output side\r\n## Standard Error and Standard Deviation\r\n> Measures how much discrepancy (difference) is likely to be in the sample mean and the population mean.\r\n\r\n* Std Dev = Spread of data around the mean\r\n\r\n![](/assets/images/2021-08-27-09-42-54.png)\r\n* In excel, multiply by sqrt(nx) and divide by sqrt(nx-1) to get the correct result\r\n![](/assets/images/2021-08-27-09-44-23.png)\r\n## Precision\r\n> Degree of reproducibility of a measurement\r\n\r\n* Accuracy and precision are different. **Outputs** for calculation is close enough then your calculation is precise but accuracy depends on the whether the output values are close to the actual value means it is accurate.\r\n* It is also possible that the output is more accurate and less precise and vice versa.\r\n![](/assets/images/2021-08-31-23-19-59.png)\r\n\r\n## Resolution\r\n> Smallest measurable increment\r\n\r\n* Eg. Resolution of 1mv is greater than that of 10mv.\r\n* But it also depends on the type of application. If 100mv is the measurement required then 10mv is a nice resolution and 1mv resolution will be redundant\r\n## Span and Range\r\n> Span: Linear operating range\r\n\r\n* This means that the relationship between two values must be a linear relation.\r\n\r\n> Range: Simple range (No explanation needed)\r\n\r\n## Best Fit Line\r\n![](/assets/images/2021-08-27-10-03-26.png)\r\n* Error is the difference between best fit value and the actual value.\r\n\r\n![](/assets/images/2021-08-27-10-09-13.png)\r\n> We take n-2 because measured values are mean and not true values and two variables are involved.\r\n\r\n## Computerized measurement and control systems\r\n\r\n## Development of software\r\n> Question to think: How to store the software or computer program in the circuit board?\r\n\r\n* General purpose computer is required to build a software for specific purpose computer.\r\n* Write the code in the laptop and then upload the code on the board.\r\n\r\n## Arduino Board\r\n* Components\r\n    * Input Pins (6 Analog Pins)\r\n    * Battery Connector/Receptor\r\n    * Output Pins (Analog)\r\n    * USB Connector\r\n    * 14 Digital pins which can be used as either input or output i.e the pins are configurable.\r\n* Voltages range from 0V to 5V.\r\n* PWM - Pulse wave modulated (Explained in further letures).\r\n* On the actual arduino board, they are represented by a '~' sign.\r\n* Pin13 has built in LED for testing and hence doesn't require any external LED's in order to test the program.\r\n\r\n## Analog to Digital converter\r\n* For a 10 bit ADC which is generally found in arduino, there would be 1024 values starting from 0 and going to 1023 with increment as 1.\r\n* This, means that value corresponding to 1023 is 5V.\r\n* **ADC are linear.**\r\n\r\n## Sampling rate of ADC\r\n* Sampling rate = 9650 samples/sec. This is fixed for an arduino board.\r\n* Maximum theoretical frequency of the input analog signal is half of this.\r\n\r\n## Pulse Wave Modulation (PWM)\r\n![](/assets/images/2021-09-01-22-26-19.png)\r\n* As seen in the above figure, Tw is the pulse width and T is the time period of the wave.\r\n* Average value of periodic wave = $\\frac{Area under one time period}{Time period}$\r\n* Duty cycle ranges from 0 to 255 corresponding to 0% and 100% respectively.\r\n\r\n## Program Structure\r\n* ![](/assets/images/2021-09-01-22-31-18.png)\r\n* **Statements under setup function will be executed only once and vice versa for loops.**\r\n","url":"https://sameep1234.github.io/notes/notes\\OE2ZBtafsUjrbdZpQgqVn.html","relUrl":"notes\\OE2ZBtafsUjrbdZpQgqVn.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Sensors.Lecture 2","content":"\n\r\n# Callibration of Sensors and Errors\r\n\r\n## Advantages of Linear sensors\r\n* Callibration will be easy.\r\n* Scale would be crowded for non-linear sensor at lower temperature range.\r\n* Calculation becomes easier.\r\n\r\n## Extra Points\r\n* ADC is always linear.\r\n* Equation written in the program will be stored in the processor.\r\n* Sometimes, the equation is complicated and hence it becomes difficult for processor to sovle that equation.\r\n* To solve this, we use table look up. In this, we form a table of x and y values and then search for a particular value. We can use some of the most efficient search algorithm.\r\n* Callibration means to create a table between the two variables.\r\n\r\n## Algorithm for Digital instrument\r\n* Start ADC by sending a pulse at the start of conversion line and then will wait for end of conversion line.\r\n* Then read y1 (always an integer discrete value because it is output is binary).\r\n* Calculate inverse function of x or look up in the table.\r\n* Display because we want the value to be stable for some point.\r\n* Add delay.\r\n* Repeat the above procedure.\r\n\r\n## Error and Accuracy\r\n\r\n> Difference between measured and true value.\r\n\r\n* Formula\r\n![](/assets/images/2021-08-31-15-32-11.png)\r\n\r\n> Accuracy means values that are aligned with standard rules or laws.\r\n\r\n* Exact true value to be found is not possible. Thus, we require the best standards and these are called as primary standards.\r\n* These do no change with temperature, pressure etc.\r\n* Secondary standards are less accurate and are calibrated using primary standards.\r\n* These can also be costly and thus we use working standards.\r\n* Types of errors\r\n    * Systematic error\r\n        * Instrument inaccuracies\r\n        * Faulty design of an experiment\r\n    * Random errors\r\n        * Human errors\r\n        * Noise\r\n![](/assets/images/2021-08-31-16-01-54.png)\r\n\r\n## Calibration procedure\r\n![](/assets/images/2021-08-31-15-37-26.png)\r\n* Measure the values generated by intrument under the test and compare it with the values generated by secondary and working stadndards.\r\n","url":"https://sameep1234.github.io/notes/notes\\rkRE070MRlTYGTxfAAxPr.html","relUrl":"notes\\rkRE070MRlTYGTxfAAxPr.html"},{"doc":"Lecture 10","title":"Lecture 10","hpath":"courses.Semester 5.Sensors.Lecture 10","content":"\n\r\n# Temperature Sensor\r\n\r\n## Resistance Temperature Detectors (RTD)\r\n* ![](/assets/images/2021-10-07-15-11-54.png)\r\n* ![](/assets/images/2021-10-07-15-17-18.png)\r\n* Typical value of R0 is 100 ohms and that of alpha will depend on the material and geometry of the setting.\r\n* ![](/assets/images/2021-10-07-15-18-13.png)\r\n* Usually in real world, the RTD is placed in the heated chamber and you will be located far away. This means that the wires would have some resistance.\r\n* Therefore, the voltage you get is actually the potential drop from RTD and the wires.\r\n* This might lead to large errors.\r\n* 4 Wire RTD measurement\r\n    * ![](/assets/images/2021-10-07-15-20-41.png)\r\n    * The drop in the inner wires can be neglected because the volmeter has high resistance and hence calibration will remain valid.\r\n\r\n## Thermocouples\r\n* ![](/assets/images/2021-10-07-15-23-07.png)\r\n* Cold junction compensation\r\n    * Copper wire will have some resitance and thermocouple materials used.\r\n    * Thus, cold junction will also have different voltage than hot end.\r\n    * Hence, we need to compensate.\r\n    * ![](/assets/images/2021-10-07-15-28-56.png)\r\n    * Automatic Junction Compensation\r\n        * ![](/assets/images/2021-10-07-15-31-44.png)\r\n* Merits and Demerits\r\n    * ![](/assets/images/2021-10-07-15-25-34.png)\r\n* ![](/assets/images/2021-10-07-15-26-41.png) \r\n","url":"https://sameep1234.github.io/notes/notes\\9xeBb3gedOfz9uJLNUzUS.html","relUrl":"notes\\9xeBb3gedOfz9uJLNUzUS.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Sensors.Lecture 1","content":"\n\r\n# Introduction to course\r\n\r\n## Course Material\r\n* Principles and applications of Electrical Engineering, 5th Edition by Giorgio Rizzoni, McGraw-Hill\r\n\r\n## Assessment and Evaluation\r\n* Quiz 1: 11%\r\n* Mid Semester Exam: 22%\r\n* Quiz 2: 6%\r\n* Assignments: 11%\r\n* Project: 15%\r\n* End Semester Exam: 35%\r\n* **Open Book Exam on LMS**\r\n\r\n> ## **Absolute Grading System**\r\n\r\n![](/assets/images/2021-08-29-20-32-26.png)\r\n\r\n## Extra Points\r\n* Engineering applications always require accurate measurement and control over physical quanities.\r\n* It is easy to transmit signal in electrical form.\r\n* We might need to process the signal and it is easier to perform operations in electrical form.\r\n* Thus, we need sensors.\r\n\r\n## Transducers and Sensors\r\n* Convert one form of signal to another form.\r\n* If you convert non-electrical signal to an electrical signal, it is called a sensor.\r\n* Thus, sensors are subset of transducers.\r\n* Actuator is device converting electrical to non-electrical signal.\r\n\r\n## Sensor Calibration\r\n![](/assets/images/2021-08-30-10-01-01.png)\r\n\r\n> We need curve fitting to obtain equation from the data points.\r\n\r\n## Curve Fitting\r\n* Process of finding suitable equation between y and x when table of values of x and y is known.\r\n* Polynomial form in general case\r\n* Steps in excel\r\n    * Select the data points.\r\n    * Go to insert.\r\n    * Select scatter plot.\r\n    * Chart will appear.\r\n    * Right click on any data point on the chart and select trendline option.\r\n    * Choose Polynomial and select the appropriate order.\r\n    * **Check the display equation and display R^2 in chart option.**\r\n","url":"https://sameep1234.github.io/notes/notes\\SyVfhynb0qtmDiyx1y1M5.html","relUrl":"notes\\SyVfhynb0qtmDiyx1y1M5.html"},{"doc":"Operating System","title":"Operating System","hpath":"courses.Semester 5.Operating System","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\OGq6U8MXIG3wwETNLR4b6.html","relUrl":"notes\\OGq6U8MXIG3wwETNLR4b6.html"},{"doc":"Lecture 9","title":"Lecture 9","hpath":"courses.Semester 5.Operating System.Lecture 9","content":"\n\r\n# Scheduling Algorithms (Cont.)\r\n\r\n## Comparision (FCFS, RR, SPN)\r\n* ![](/assets/images/2021-09-28-15-14-20.png)\r\n* Note that for **round robin**, there is a **constant selection** function because whatever process is there, you run it and block it if the time exceeds time quantum.\r\n* Throughput means number of processes completed in a given time frame.\r\n* Response time means the time when the process is first admitted into the system and it gets first chance to execute.\r\n* **Note that the overhead in round robin is high if the time quantum is too low because of more frequent switching. Thus, we need to swap the overhead of RR with that of SPN int he above image.**\r\n\r\n## Shortest Remaining Time (SRT)\r\n* ![](/assets/images/2021-09-28-15-22-39.png)\r\n* The process with the minimum service time will be given the chance.\r\n* **But note that if a process requires service time of 5 units and comes to ready state for I/O operations and has already worked for 3 units of time, then the remaining time i.e 2 units is considered and not the original service time of 5 units.**\r\n* Example\r\n    * ![](/assets/images/2021-09-28-15-28-55.png)\r\n    * Note that both B and D have the same amount of remaining time left and hence any tie breaker can be used and the simplest one that is used here is the FCFS.\r\n    * ![](/assets/images/2021-09-28-15-29-57.png)\r\n    * Compared to SPN, Mean TAT and mean NTAT is less and hence is better than SPN.\r\n\r\n## Highest Response Ratio Next (HRRN)\r\n* ![](/assets/images/2021-09-28-15-31-07.png)\r\n* As the name suggest, when current process completes or is blocked, choose next process with the greatest ratio.\r\n* Effect on processes\r\n    * ![](/assets/images/2021-09-28-15-34-20.png)\r\n* It is thus going to balance out each process because of obvious reasons.\r\n* Example\r\n    * ![](/assets/images/2021-09-28-15-38-03.png)\r\n    * ![](/assets/images/2021-09-28-15-38-13.png)\r\n    * Note that when T = 9 \"D\" had higher ratio than \"E\" but at T = 13, \"E\" has the higher raio than \"D\". Thus, we should always calculate the ratios at each time interval.\r\n    * Also note that mean times in this algorithm is greater than that of SRT and SPN but is somewhere in between and it is lower than that of FCFS.\r\n\r\n## Comparision (SPN, SRT and HRRN)\r\n* ![](/assets/images/2021-09-28-15-40-07.png)\r\n\r\n## Feedback Scheduling (FB)\r\n* ![](/assets/images/2021-09-28-15-43-17.png)\r\n* ![](/assets/images/2021-09-28-15-49-15.png)\r\n* Here we have multiple ready queues.\r\n* So if a process in the first queue is not completed in the given time quantum, it is appended in the second queue.\r\n* The priority of the second queue is lower than that of the first queue and so on.\r\n* Thus, longer processes are **penalized.**\r\n* **Note that withing each queue, there is FCFD algo being executed except the last queue where RR is being executed.**\r\n* ![](/assets/images/2021-09-28-15-53-31.png)\r\n* Example\r\n    * ![](/assets/images/2021-09-28-15-55-42.png)\r\n    * ![](/assets/images/2021-09-28-15-59-07.png)\r\n    * ![](/assets/images/2021-09-28-15-59-26.png)\r\n    * ![](/assets/images/2021-09-28-16-00-12.png)\r\n* Issues and its solution\r\n    * ![](/assets/images/2021-09-28-16-01-01.png)\r\n    * ![](/assets/images/2021-09-28-16-03-15.png)\r\n    * This means that if a process has spent some amount of time, it should not move to a lower priority queue, it should actually be moved to a higher priority queue.\r\n    * This can reduce the waiting time significantly.\r\n* Note that FB is also called as multi-level feedback strategy because it has multiple levels of queue.\r\n\r\n## Other Scheduling Algorithms\r\n* ![](/assets/images/2021-09-28-16-05-48.png)\r\n* Priority scheduling means that based on some criteria you provide some priority.\r\n    * In nonpreemptive version, whichever process is running will continue to run unless it is finished or blocked and then the next process will be selected based on the priority.\r\n    * In preemptive version, the currently running process will be interrupted by a higher priority process in the queue.\r\n* Longest Job First is the direct opposite of SPN.\r\n* Longest Remaining time is the direct opposite of SRT.\r\n\r\n> In real operating system, some hybrid versions are used.\r\n","url":"https://sameep1234.github.io/notes/notes\\34tGpG4ranHBd9HzSjzAD.html","relUrl":"notes\\34tGpG4ranHBd9HzSjzAD.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Operating System.Lecture 8","content":"\n\r\n# Uniprocessor Scheduling Algorithms\r\n\r\n* We would be discussing only short-term scheduling.\r\n* They mainly include dispatching techniques.\r\n* Algorithms available\r\n    * ![](/assets/images/2021-09-20-08-08-03.png)\r\n* Selection Function\r\n    * ![](/assets/images/2021-09-20-08-10-10.png)\r\n* Normalized TAT is better quantity to compare two scheduling algorithms.\r\n* Normalized TAT is relative delay and it represents how much a process needs to wait.\r\n* We can't have normalized TAT less than 1 because service time can never be more than TAT.\r\n\r\n## Decision Mode\r\n* Specifies the instants in time at which the slection functions is exercised.\r\n* Two Types\r\n    * Nonpreemptive - Once a process is in running state, it will continue until it terminates or blocks itself for I/O.\r\n        * This means it can't be forcefully stopped.\r\n    * Preemptive - Currently running process may be interrupted and moves to ready state by the OS.\r\n        * This normally occurs when new process arrives, on an interrupt or periodically.\r\n        * In simple terms, this will occur when a new process is inserted or an interrupt is passed or periodically this premption is performed.\r\n* Normally preemptive mode is preferred even though it increases overhead because of more frequent process switching but it also prevents one process from monopolizing the processor.\r\n* For example, a process requires a user input and if user is on a break, the process will block all other processes which otherwise would have ran. This is called monopolizing the processor.\r\n\r\n## CPU Bound and I/O Bound\r\n* If a process spends most of its time in processor, then it is called CPU bound and vice versa.\r\n* Example of I/O bound process includes chatting. It uses I/O for most of the time because it is waiting for the user to enter the values.\r\n\r\n## First Come First Serve (FCFS)\r\n* ![](/assets/images/2021-09-20-08-14-00.png)\r\n* It is one of the most fair strategy in the **real world.**\r\n* w = waiting time.\r\n* For better efficiency TAT should be as low as possible.\r\n* Example\r\n    * ![](/assets/images/2021-09-28-10-54-38.png)\r\n* Issues\r\n    * A short process may have to wait a very long time before it can execute.\r\n    * ![](/assets/images/2021-09-20-08-33-39.png)\r\n\r\n## Round Robin (RR)\r\n* ![](/assets/images/2021-09-28-12-18-13.png)\r\n* It is a type of **preemptive** FCFS.\r\n* Simple explanation\r\n    * There will be a queue.\r\n    * The process will run for some time.\r\n    * If the process is not completed, that process is blocked and put into ready queue.\r\n    * The next process runs.\r\n* Time given to each and every process is called time slice or **time quantum.**. It is represented by \"q\".\r\n* Example\r\n    * For the below example, the time quantum is 4. Thus, if a process is not finished after 4 units of time, it will be placed at last in the ready queue.\r\n    * ![](/assets/images/2021-09-28-12-26-01.png)\r\n    * Now we have the same example but with q = 1.\r\n    * ![](/assets/images/2021-09-28-12-40-19.png)\r\n    * Note here that the Mean NTAT for q = 4 is better than that when q = 1.\r\n    * Depending on the implementation of OS, these can be either pre defined or may be changed during the execution.\r\n* Issues\r\n    * ![](/assets/images/2021-09-28-12-44-01.png)\r\n* Thus, the ideal value of time quantum is slightly greater than the time required for a typical process interaction.\r\n* Relative Treatment\r\n    * ![](/assets/images/2021-09-28-13-24-26.png)\r\n\r\n## Virtual Round Robin\r\n* ![](/assets/images/2021-09-28-13-26-40.png)\r\n* In this strategy, we are assigning priority to I/O blocked processes by maintaining different queues.\r\n\r\n## Shortest Process Next (SPN)\r\n* ![](/assets/images/2021-09-28-15-00-03.png)\r\n* Example\r\n    * In the below example, the time shown is wrong and do your own calculation.\r\n    * ![](/assets/images/2021-09-28-15-03-17.png)\r\n    * ![](/assets/images/2021-09-28-15-03-30.png)\r\n* Issues\r\n    * ![](/assets/images/2021-09-28-15-03-48.png)\r\n    * Having knowledge of service time is one of the biggest overhead in **all the algorithms seen till now.**\r\n    * For interactive process, it is the most difficult job because the value can never be known.\r\n    * This is because, the process will have to wait for either I/O or for any user input.\r\n\r\n## Extra Points\r\n* DMA - Data memory access (DMA) is a hardware circuit through which all the data is transfered after an I/O is available.\r\n","url":"https://sameep1234.github.io/notes/notes\\TDArvOmokgPIewQeuuXzw.html","relUrl":"notes\\TDArvOmokgPIewQeuuXzw.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Operating System.Lecture 7","content":"\n\r\n# Process/Processor Scheduling\r\n\r\n> Note that we have assumed uniprocessor system and hence we will be studying uniprocessor scheduling\r\n\r\n## Sceduling\r\n* OS handles resources and hence called as resource manager.\r\n* Processor provides resources in terms of its execution time.\r\n> Aim: Assign processes to be executed by processor over time, in a way that meets system objectives.\r\n\r\n* Response time means the time elapsed between process creation and the **first response** from that process.\r\n* Throughput means rate of job completion. This means how many processes can be completed in one unit time is called throughput.\r\n* Processor efficiency means that processor should not be idle and hence should be used to its fullest.\r\n* Objectives\r\n    * ![](/assets/images/2021-09-10-10-00-58.png)\r\n    * Starvation of a process means deprived of processor time.\r\n    * Example of overhead is process switching.\r\n* Types\r\n    * ![](/assets/images/2021-09-10-10-03-11.png)\r\n    * Short-term sheduling is also known as dispatcher.\r\n    * ![](/assets/images/2021-09-10-10-04-24.png)\r\n\r\n## State transition diagram\r\n* ![](/assets/images/2021-09-10-10-05-29.png)\r\n* We can put a newly created process directly into ready state if there is enough memory and if there is not enough memory, we put it in ready/suspended state.\r\n* This task is done by long-term scheduling and the rest is self-explanatory.\r\n* **Swapping** happens when the process is **swapped** from {ready and ready/suspend} and {block and blocked/suspend}.\r\n* Same thing in a different way\r\n    * ![](/assets/images/2021-09-10-10-13-06.png)\r\n\r\n## Long-Term Scheduling\r\n* ![](/assets/images/2021-09-10-10-13-29.png)\r\n* Some questions\r\n    * Will it be possible to predict the I/O requirements?\r\n        * In case of interactive jobs, it is not possible, but for **batch jobs**, it is possible.\r\n    * Similar for expected execution time\r\n\r\n## Medium-Term Scheduling\r\n* ![](/assets/images/2021-09-10-10-17-23.png)\r\n\r\n## Short-Term Scheduling\r\n* ![](/assets/images/2021-09-10-10-17-45.png)\r\n* Whenever there is a need for **process switch**, dispatcher comes into the picture.\r\n* Process needs to switch when process is terminated, interrupt occurs, I/O operations etc.\r\n* Criterias of classification of short-term scheduling\r\n    * User-oriented\r\n        * Response time\r\n        * This means to give response as fast as possible from user perspective.\r\n    * System-oriented\r\n        * Effective and efficient utilization of the processor.\r\n        * Designers must keep in mind while deciding the dispatcher strategy, the processor should not be underutilized.\r\n    * Performance related\r\n        * Quantitative and easily measure.\r\n        * Eg. Response time and throughput.\r\n    * Non-performance related\r\n        * Qualitative and hard to measure.\r\n        * Eg. User-Satisfaction\r\n* Interdependency in criterias\r\n    * User oriented and performance related.\r\n        * ![](/assets/images/2021-09-10-10-29-24.png)\r\n        * Turnaround time is approriate for batch jobs and not for interactive jobs because in interative jobs, user interaction plays a key role. \r\n        * For example, a process is waiting for a user input and the user has gone to take a break, then it will remain stagnant and hence turnaround time will increase drastically.\r\n        * The deadlines are in real-time systems or embedded systems.\r\n    * User oriented and non-performance related\r\n        * ![](/assets/images/2021-09-10-10-39-44.png)\r\n    * System-oriented and performance related\r\n        * ![](/assets/images/2021-09-10-10-40-58.png)\r\n    * System-oriented and non-performance related\r\n        * ![](/assets/images/2021-09-10-10-43-31.png)\r\n        * In the third criteria, we require medium-term and long-term scheduling because memory is one of the resource that is used by the process and processor.\r\n\r\n## Priority based scheduling\r\n* ![](/assets/images/2021-09-10-10-45-56.png)\r\n* Each ready queue has different priority, but processes inside the **same ready queue, have the same priority.**\r\n\r\n> Now this may lead to starvation problem. Suppose, there are 3 ready queues and at any particular instance of time, there is at least one process in the first two ready queues. This means that the processes in the third queue will not be allocated any time. This is the starvation problem. \r\n\r\n> To solve this, we allow a process to change its priority-based on its age or execution history. This means that whenever some process has been executed for some time and is to be again inserted in the ready queues, its priority should be lowered down.\r\n\r\n## Various Scheduling Policies\r\n* ![](/assets/images/2021-09-10-10-55-01.png)\r\n* Out of all these, round robin and feedback are the most practical theories.\r\n* Others are good in theory, but not in practice.\r\n\r\n## Selection Function\r\n* ![](/assets/images/2021-09-10-10-56-15.png)\r\n\r\n## Decision Mode\r\n* Specifies the instance in time at which the selection function is executed.\r\n* Two categories\r\n    * ![](/assets/images/2021-09-10-11-00-20.png)\r\n    * For non-preemptive, the OS will never put a process in blocked/removed state unless it is fully terminated or blocked because of I/O.\r\n    * Round robin is a strategy where every process is assigned some amount of time and even if process is still able to run, it is not blocked, it is put back directly into Ready state and the next process is dispactched to running state.\r\n\r\n> Which mode should be preffered?\r\n* Preemptive as it prevents one process from **monopolizing** the processor.\r\n* This means that a very big process will not block others till it iterminates.\r\n* Even though there would be some overhead of frequent switching of the process, but its advantage outweighs its disadvantage.\r\n\r\n## Process States for Linux\r\n* ![](/assets/images/2021-09-10-13-24-18.png)\r\n* Commands related to processes in ubuntu\r\n    * lscpu = Gives information regarding the processor in your system.\r\n    * ps -aux = Gives information about the processes that are currently there in the system.\r\n    * Note: ps itself is the command but it won't provide much information as ps -aux.\r\n* System calls\r\n    * fork() = Create a new process\r\n    * exec() = Execute other programs in current process\r\n    * wait() = Wait for child process to terminate\r\n    * exit() = Terminate the execution\r\n","url":"https://sameep1234.github.io/notes/notes\\oREhPLLLMs4TqeMPSoCK2.html","relUrl":"notes\\oREhPLLLMs4TqeMPSoCK2.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Operating System.Lecture 6","content":"\n\r\n# Process Control and Process Management\r\n\r\n> Process management will be studied in UNIX SVR4 file system.\r\n\r\n## Functions of OS kernel\r\n* ![](/assets/images/2021-09-06-08-10-29.png)\r\n* ![](/assets/images/2021-09-06-08-13-17.png)\r\n* ![](/assets/images/2021-09-06-08-13-59.png)\r\n\r\n## Process Creation\r\n* Once new process is decided to be created, OS performs following tasks\r\n    * Assigning unique ID.\r\n    * Allocating space in memory.\r\n    * Initializing PCB (The most important part of a process).\r\n    * Setting up of appropriate links.\r\n    * Creating or expanding other data structures.\r\n\r\n## Process Switching\r\n* For small amount of time, some process will run and then other will run. This time is very small and hence we see it like all the processes are running parallely.\r\n* Thus, when one process goes away and other process needs to be loaded, this is called process switching.\r\n* Process switching is totally different than mode switching. In a process execution, there may occur mode switching. \r\n* Mode switching means switching from user to kernal mode vice versa.\r\n\r\n> So why is process gets switched?\r\n* ![](/assets/images/2021-09-06-08-23-14.png)\r\n\r\n* Reasons for switching (Eg.)\r\n    * Clock interrupt (time slice expired)\r\n    * I/O Interrupt (an event occured)\r\n    * Memory fault (trap) - Accessing memory which is not available.\r\n\r\n* Mode Switching - When a running process changes its mode from one to other.\r\n    * While switching the mode, processor state information of PCB is saved (user to kernel) and restored back (kernel to user).\r\n    * Mode switch, thus becomes the subset of prcess switch.\r\n    * Thus, process switch will take more time then mode switch.\r\n* Steps in process switch\r\n    * ![](/assets/images/2021-09-06-08-28-44.png)\r\n\r\n> Is OS a process?\r\n* Basically OS is a code/program which is in between hardware and application that we run.\r\n* Designs of OS to explain execution of OS\r\n    * ![](/assets/images/2021-09-06-08-33-06.png)\r\n\r\n## Different designs\r\n* Non-process Kernel\r\n* Execution within User Processes\r\n    * ![](/assets/images/2021-09-06-08-36-42.png)\r\n* Process-based OS\r\n    * ![](/assets/images/2021-09-06-08-37-48.png)\r\n    * More like microkernel architecture.\r\n\r\n## Process management in UNIX SVR4\r\n* SVR4 stands for System V Release 4.\r\n* **Most** of the the OS executes in user process.\r\n* System processes - Kernel mode only\r\n* User Processes\r\n    * User mode to execute user programs and utilities.\r\n    * Kernel mode to execture instructions that belong to kernel\r\n* Process with ID 1 = Linux boots and creates a swapper process which in turn creates init process with ID = 1.\r\n* This init process creates all the process required to run Linux on boot up.\r\n* init process works only in kernel mode.\r\n* Some other process that execute only in kernel mode include dispatcher etc.\r\n* States\r\n    * ![](/assets/images/2021-09-06-08-47-29.png)\r\n    * Fork is the system call used to create new process.\r\n    * Two extra states\r\n    * Blocking state is called sleep state.\r\n    * Zombie state means that process is executed but some imformation realted to data structure and all is still saved for accounting purposes.\r\n    * Here running state is divided into two parts viz user running state and kernel running state.\r\n    * At a time, a process can be in either user running state or kernel running state but **not both.**\r\n    * Preempted is almost similar to ready to run in memory state. In fact they are managed by a common combined queue.\r\n* UNIX Process Image\r\n    * A process in UNIX is a set of DS that provide the OS with all the information necessary to manage and dispatch processes.\r\n    * Process image in UNIX can be categorized as follows\r\n        * User-Level Context\r\n            * ![](/assets/images/2021-09-09-11-14-50.png)\r\n        * Register Context\r\n            * ![](/assets/images/2021-09-09-11-15-08.png)\r\n        * System-Level Context\r\n            * ![](/assets/images/2021-09-09-11-15-54.png)\r\n            * Most of the information regarding PCB is maintained in process table and they **must be accessible to kernel.**\r\n            * U Area - Most of the process control information is present in U area. This is also a part of PCB. However, majority of information related to PCB is present in Process table.\r\n            * Information in U area is accessible to a process only if it is in running state.\r\n            * 1st and 3rd are static DS means they will not change during the life of a process.\r\n            * 2nd and 4th are dynamic data structure and will change according to various states of the process.\r\n* Process Creation in UNIX\r\n    * fork() is used to create new processes.\r\n    * ![](/assets/images/2021-09-09-11-26-30.png)\r\n    ![](/assets/images/2021-09-09-11-27-38.png)\r\n    * If returned value is 0, it means it is child process and vice versa.\r\n    * Once child is created, then it depends on the situation which one will execute.\r\n            \r\n## Extra Points\r\n> What is in process table?\r\n* ![](/assets/images/2021-09-09-11-22-44.png)\r\n\r\n> What is in U area?\r\n* ![](/assets/images/2021-09-09-11-23-18.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\2mia7HDoJV0UdrV8b0gZF.html","relUrl":"notes\\2mia7HDoJV0UdrV8b0gZF.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Operating System.Lecture 5","content":"\n\r\n## Suspended Process\r\n* It is possible that at one point all the processes are waiting for I/O and processor will remain idle.\r\n* Issues to address\r\n    * Processor could be idle most of the time.\r\n* Solution\r\n    * **Swap these processes to disk to free RAM and execute some new processes**.\r\n* Blocked state, thus, becomes suspend state when swapped to disk.\r\n* Now 5-state gets converted to 6-state model\r\n\r\n## 6-state model\r\n* ![](/assets/images/2021-09-01-08-08-39.png)\r\n* Notice that blocked processes are transferred to suspended processes but suspened processes are directly transfered to ready state.\r\n* OS now has two ways\r\n    * Admit new processes\r\n    * Activate previously suspended processes\r\n* Subsets of suspend state\r\n    * Blocked/Suspend: Process in secondary memory and awaiting an event.\r\n    * Ready/Suspend: \r\n\r\n## 7-state model\r\n* ![](/assets/images/2021-09-01-08-13-46.png)\r\n* Newly created process will remain in ready/suspend state until there is memory avaible to move it to ready state.\r\n* Eg. When booting up, memory is awailable and hence it is possible to directly admit new process into ready state.\r\n* New state transitions\r\n    * ![](/assets/images/2021-09-01-08-22-08.png)\r\n\r\n## Characterisitcs of suspended processes\r\n* Process not immediately available for execution because it is in secondary memory.\r\n* It may or may not be waiting for an event. It may be moved only to free some RAM.\r\n* \"Agent\" puts the process in suspended state. Agents include either itself (Eg. Some process which occur only periodically), parent procees or OS in order to preclude its execution.\r\n* Process may not be removed until agent orders the removal. Most of the time agent is OS.\r\n\r\n## Reason for process suspension\r\n* ![](/assets/images/2021-09-01-08-32-36.png)\r\n\r\n## Relation between process and resource\r\n> Recap: OS is a resource manager. Process is a program in execution.\r\n\r\n![](/assets/images/2021-09-01-08-38-45.png)\r\n* **Main memory as a resource means**\r\n* Virtual memory is extention of secondary memory into main memory.\r\n* Some part of HDD is considered in RAM.\r\n\r\n## Data Structures\r\n* OS must have information about current status and all processes and all resources.\r\n* Thus, OS maintains tables for each of the functionalities it offers\r\n* Memory Table\r\n    * Keep tracks of main and secondary memory.\r\n    * Must include information\r\n        * Allocation of main memory to processes.\r\n        * Allocation of secondary memory to processes.\r\n        * Protection attributes for access to shared memory regions.\r\n        * Information required to manage virtual memory.\r\n* I/O Table\r\n    * Manage I/O device and channels of computer.\r\n    * Must include information\r\n        * Availability of I/O device.\r\n        * Status of I/O operation whether I/O device is available or not.\r\n        * Location in main memory for source and destination\r\n* File Table\r\n    * Must include information\r\n        * Existence of files.\r\n        * Location on secondary memory.\r\n        * Current Status.\r\n        * Others (Who can access? etc.)\r\n* Process Table\r\n    * Must include information\r\n        * Location of **process** in the memory.\r\n        * Process attributes.\r\n    * Memory, I/O and files are managed on behalf of processes, so there has to be some reference to these resources in process tables. (Like foreign key)\r\n\r\n## Physical manifestation of a process\r\n> Menifestation means presentation.\r\n\r\n![](/assets/images/2021-09-01-08-53-11.png)\r\n\r\n* Elements of process image\r\n    * User Data\r\n    * User Program\r\n    * User Stack\r\n    * Process Control Block (PCB)\r\n\r\n## Process Location\r\n* It is not required in main memory. Someting called virtual memory also exists.\r\n* Process image is maintained as a contiguous block of memory (**in secondary memory**).\r\n* Maintained in secondary memory (majority of its part).\r\n* Some part should be loaded in main or at least in virtual memory.\r\n* Moreover, to execute process, some part must be in main memory.\r\n* Thus, only needs to know which parts of process are in main and secondary memory and where are they located.\r\n\r\n## Attributes in PCB\r\n* Process identification\r\n* Processor state information\r\n* Process control information\r\n\r\n## Process Identification\r\n* Identifier of this process.\r\n* Identifier of parent process.\r\n* User identifier (To which user this process belongs to?)\r\n\r\n## Processor state information\r\n> Processor state is always **stored in register.**\r\n\r\n* User Visible registers\r\n    * Most of the times they are the address registers and data registers\r\n    * It means that these registes can be directly visible by programs running in user-mode.\r\n    * Generally they are 8-32 regsiters but some RISC implementations may have over 100.\r\n* Control and status registers\r\n    * Program counter - Contains address of the next instruction.\r\n    * Condition codes - Result of the most recent ALU operation.\r\n    * Status information - Contains inturrept flags and execution mode (They are also known as program/process status mode).\r\n* Stack Pointers (Registers)\r\n    * Process image uses stack to maintain parameters and calling addresses for procedures and system calls.\r\n    * There could be multiple stacks and each stack has a stack pointer pointing to the top of the stack.\r\n\r\n## Process control information\r\n> Manages additional information that is needed by the OS to control and coordinate the various active processes.\r\n\r\n* These include the following\r\n    * ![](/assets/images/2021-09-09-10-01-56.png)\r\n    * IPC stands for Inter-process communication\r\n    * Process privileges includes \"What area can be accessed by the process\" or \"Which mode?\" etc.\r\n* Scheduling and State information\r\n    * ![](/assets/images/2021-09-09-10-03-54.png)\r\n* Data Structuring\r\n    * ![](/assets/images/2021-09-09-10-04-13.png)\r\n    * For each state (blocked, ready etc.) there would be one queue and generally they are made using linked list.\r\n* IPC\r\n    * ![](/assets/images/2021-09-09-10-05-14.png)\r\n    * It occurs when two process talk to each other\r\n* Process privileges\r\n    * ![](/assets/images/2021-09-09-10-05-56.png)\r\n    * What kind of file, area of memory etc.\r\n* Memory Management\r\n    * ![](/assets/images/2021-09-09-10-06-58.png)\r\n* Resource Ownership and Utilization\r\n    * ![](/assets/images/2021-09-09-10-06-39.png)\r\n\r\n> ## What does Process image contain?\r\n* ![](/assets/images/2021-09-09-10-08-11.png)\r\n\r\n## Role of PCB\r\n* It is the most important DS.\r\n* It contains most of the information regarding a process excpet stack pointers.\r\n* It manages the processes.\r\n* Thus, it requires protection.\r\n    * If not done then,\r\n        * It may damage the block and destroy OS's ability to manage the processes.\r\n        * Any change in design will affect many other modules of OS.\r\n","url":"https://sameep1234.github.io/notes/notes\\BjGodSmGeG11e3UACx3wt.html","relUrl":"notes\\BjGodSmGeG11e3UACx3wt.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Operating System.Lecture 4","content":"\n\r\n# Process: Description and Control\r\n\r\n## Requirements of OS as a Process Manager\r\n* Interleave the execution of multiple processes. Here we assume that there is always a single processor system.\r\n* Allocate resources to processes and protect them from each other.\r\n* Enable process to share and exchange information. Eg. Parent and Child processes.\r\n* Enable synchronization among processes.\r\n\r\n## Process\r\n* Program in execution.\r\n* Instance of program running\r\n* Entity that can be assigned to and executed on a processor\r\n* **Unit of activity defined by program, its states and its associated resources.**\r\n* Process Elements\r\n    * Program code (generally shared)\r\n    * Set of data\r\n    * Attributes that describes the state\r\n    \r\n## Attributes\r\n* Indentifier - Unique ID of each process\r\n* State - Current situation of the process (Either running or not running)\r\n* Priority - Self explanatory\r\n* Program Counter - Keeps information about next process to be executed\r\n* Memory pointers - Pointers to program code and data to be processed. Along with this, it also includes shared memory blocks.\r\n* Context data\r\n* I/O status information - Eg. List of files in use by the process etc.\r\n* Accounting information - Eg. Time limits, clocks used etc.\r\n\r\n> In short the attributes can be called as meta-data.\r\n\r\n## Process Control Block (PCB)\r\n* All the attributes discussed above are part of this block.\r\n* Basically, it is a type of data structure.\r\n\r\n> **Thus, process is a combination of program code, associated data and PCB**\r\n\r\n## Running on single resource\r\n* To manage multiple processes on a single resources then scheduling comes to the picture.\r\n* Thus, you allocate certain span of time to each process and once it gets finished, immediately another process starts.\r\n* It gives an appearance that every process runs at the same time because the total time taken by all the process combined is really small.\r\n* **Trace - List of instructions that are executed by a process.**\r\n* **Dispatcher - Program that switches the processor from one process to another.** It is a type of short term scheduler.\r\n\r\n## Execution of Processes by Processor\r\n* Suppose that there are some processes which have a lot of instructions to execute. This might take time which is greater than the allocated one.\r\n* So in the middle of the execution of a process, dispatcher stops the execution and decides which process should go next.\r\n* Once decided, either execution of new process starts or execution of old process continues.\r\n* Then, suppose there is an I/O request. Since this is a slow operation, the dispatcher will allow another process to run on the processor.\r\n* This goes on and on untill all the processes are executed.\r\n\r\n> The above method is from **processor POV** and is called **interleaving of processes** and the OS manages this through **dispatcher**. From **process POV**, the process gets executed sequencially.\r\n\r\n## Process States\r\n* Two states\r\n    * Running\r\n    * Not running\r\n* Transition from **not running** to **running** state is called **dispatch** and is called **pause** for the opposite scenario.\r\n* There can be at most only one process in running state at a given instance of time.\r\n* There are 'n' number of processes in the non-running state.\r\n* Thus, to manage all these processes, we need **queue** as the data structure.\r\n\r\n## Note\r\n* The below picture lists conditions under which a process can be created or terminated.\r\n* ![](/assets/images/2021-08-29-15-16-50.png)\r\n\r\n* Process spawning means event where a process creates a new process.\r\n\r\n## 5-State Process Model\r\n* Conditions when the process which is running will pause and enter in the queue:\r\n    * Time slot alloted to the process is over.\r\n    * Made some I/O request which may take time.\r\n* Now, dispatcher needs to identify which processes are ready to be executed and then dispatch it from the middle of the queue.\r\n* This process is time consuming and complex.\r\n* To resolve this, OS must maintain multiple queues. Since there are two types of processes, one who did not terminate but their allocated time got over and others who are waiting for I/O or other resouces.\r\n* This, in turn is the 5-state process model.\r\n* Total states in this model\r\n    * New - Process that has just been created but not admitted to the pool of the ready state processes.\r\n        * **Not loaded in main memory but is created.**\r\n        * This means that PCB for that process has been created but its corresponding data and program has not been loaded/created in the main memory.\r\n    * Ready\r\n    * Blocked/Waiting\r\n    * Running\r\n    * Exit (Earlier it was not a state but now it is) - Process which has been released from the pool of processes.\r\n        * However, there is some part of PCB left in main memory for accounting.\r\n\r\n![](/assets/images/2021-08-29-15-32-07.png)\r\n\r\n## State Transitions\r\n\r\n* ![](/assets/images/2021-08-29-15-36-29.png)\r\n\r\n* Ready and Blocked process can enter directly to exit state when its parent process has terminated or the process is terminated by the OS.\r\n* When process spawning occurs, then child process is created in the new state.\r\n* Hang state is equivalent to blocked/waiting state.\r\n\r\n## Multiple Blocked Queue\r\n* Suppose there are 10 processes which are in blocked queue waiting for HDD to get accesible and there are 90 processes that are in hang mode.\r\n* Now once HDD is ready to be accessed, OS will have to search this blocked queue and move all these processes to ready state.\r\n* This is again time consuming and complex. Hence multiple blocked queue model emerged.\r\n\r\n![](/assets/images/2021-08-29-15-48-46.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\5th40SAttRbGJ4HOcWaM9.html","relUrl":"notes\\5th40SAttRbGJ4HOcWaM9.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Operating System.Lecture 3","content":"\n\r\n\r\n# System Calls and Architecture of UNIX\r\n\r\n## Intro to system calls\r\n* System calls are the most important and crucial concept in OS. It is basically a link connecting user to the OS.\r\n* Formally, it is a **programming interface (like waiter connecting customers to kitchen in a restaurant)** to use the services provided by the OS. They are the programs that help give access to the functionalities provided by the OS.\r\n*  They are written in a high-level language like C or C++.\r\n* POSIX API is used for Linux and Win32 API is used for windows.\r\n\r\n## Implementation of System Call\r\n* Associated with each function call. Eg. If you call a function printf() in C, then it internally calls an associated system call telling the OS to display the written part on the scree.\r\n* Every OS have a list of system call along with ID's.\r\n* System call interface maintains a table with ID's as indices.\r\n* This interface invokes a particular system call in OS kernel and returns the status and return-values if any.\r\n* Details are hidden from programmer by the API.\r\n\r\n## Relationship between API, System Call and OS\r\n\r\n![](/assets/images/2021-08-29-10-48-06.png)\r\n\r\n## Types of system calls\r\n* File Management - Eg. create, open, close etc.\r\n* Device Management - request, release, read, write etc.\r\n* Protection - control access, get and set permissions etc.\r\n* Information maintenance - get time, set process etc.\r\n* Communications - create, delete communication, send or recieve messages etc.\r\n\r\n### Architecture of UNIX\r\n\r\n* ![](/assets/images/2021-08-29-11-08-15.png)\r\n\r\n* UNIX is an OS just like Linux.\r\n* In fact linux is based on UNIX but is more complicated than UNIX.\r\n* UNIX system follows monolithic approach\r\n* UNIX System Kernel\r\n\r\n![](/assets/images/2021-08-29-11-10-53.png)\r\n\r\n* **In Linux or UNIX, everything is in terms of files. Thus, it becomes crucial to understand file system.**\r\n","url":"https://sameep1234.github.io/notes/notes\\iwC11xUes40umcvnmZiTU.html","relUrl":"notes\\iwC11xUes40umcvnmZiTU.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Operating System.Lecture 2","content":"\n\r\n\r\n# Evolution of OS and Kernel\r\n\r\n## Evolution of OS\r\n* Serial Processing\r\n* Simple Batch Systems\r\n* Multiprogrammed Batch Systems\r\n* Time Sharing Systems\r\n* many others\r\n\r\n## Serial Processing\r\n* There was no OS.\r\n* To run the program, we would have to type a command for everything.\r\n* A program at that time was called a job which is a set of instructions along with the data on which the instructions need to be executed.\r\n* Issues\r\n    * Scheduling\r\n        * Fixed amount of time allocated to each instruction.\r\n        * Conflict between instructions requiring more or less time.\r\n    * Setup Time\r\n        * Loading of compiler and program is time consuming\r\n\r\n## Simple Batch System\r\n* Monitor Program were used which were kind of OS - A very rudimentary OS.\r\n* It is a software that controls the sequence of events.\r\n* No direct access to users unlike Serial Processing.\r\n* Job is submitted to an operator who batches similar instructions together and places them on the input device/hardware.\r\n* In this way, the time consumed is averaged out and the processor can be utilized to its maximum.\r\n* Control is given back to monitor after program gets terminated.\r\n\r\n> Monitor is a special program that manages execution of each program in the **batch**. It controls the sequence of events. Resident monitor (another name for simple monitor) is software always in memory. It reads in job and gives control to the processor which in turn returns the control back to monitor\r\n\r\n> Processor executes instructions from the memory i.e monitor which resides in the memory. It gains control from monitor to execute the task and once completed returns the control to monitor.\r\n\r\n> JCL (Job control language) - It is a programming language that provides instruction to the monitor about the compiler and data to be used.\r\n\r\n* Modes of operation\r\n    * User mode (Analogy: Normal Mode) - Programs submitted by the user to the memory are executed in this mode. **Not all instructions may be executed.**\r\n    * Kernal mode (Analogy: Admin Mode) - Part of a modern OS that actually performs I/O Management, Process Management etc. Nowadays, we have many other utility programs running which are a part of OS, but kernal is the most important one which manages the above mentioned things.\r\n\r\n* Issues\r\n    * Processor remains idle.\r\n    * Slow compared to processor even with automatic job sequence.\r\n\r\n![](/assets/images/2021-08-28-23-38-27.png)\r\n\r\n## Uniprogramming\r\n\r\n> Processor must wait for I/O instruction to complete before proceeding further.\r\n\r\n## Multiprogramming\r\n\r\n> Opposite of uniprogramming. Still there will be some waiting time but at least it can be reduced and hence is better than uniprogramming.\r\n\r\n## Time sharing systems\r\n* The program is being shared through different users and different monitors. Thus, can be used to handle multiple interactive jobs.\r\n* Processor time is shared among multiple users.\r\n* This time is in milli or micro seconds. This is called short burst or quantum of computation.\r\n\r\n![](/assets/images/2021-08-29-00-06-36.png)\r\n\r\n## OS Structure\r\n* *For general purpose OS, the program is very large.*\r\n* Ways to structure OS\r\n    * Monolitic Approach (Analofy coding in C where there are no classes) - Everything combined in one place.\r\n        * Eg. Older LINUX and UNIX\r\n        * Advantages\r\n            * Speed as everything is connected\r\n            * Performance\r\n        * Disadvantages\r\n            * Difficult to maintain and modify\r\n    * Layered Approach - OS divided into number of layers.\r\n        * Layer 0 = hardware and Layer n = user interface layer\r\n        * A particular layer can use functions and services of **lower-level layers only (layers below it).**\r\n        * Eg. Older windows versions\r\n    * Microkernels - Move as much functionalities as possible to user mode from kernel mode. \r\n        * Unlike that in layered and monolithic where majority of the functionalities is available in only kernal mode.\r\n        * I\\O and interrupt management, primitive memory management, inter-process communication and basic scheduling were kept in kernel mode.\r\n        * All other functionalities will be running in user mode.\r\n        * Advantages\r\n            * Time is reduced significantly as the time to change the mode from user to kernel and vice versa is almost completely diminished.\r\n            * Porting of OS to newer architecture becomes easier (will be covered in upcoming lectures).\r\n            * More reliable because less code is running in kernel mode.\r\n            * More secure as less code has to be valudated in kernel.\r\n        * Disadvantages\r\n            * Performance overhead to change the mode.\r\n        * Eg. Mach, MINIX, Windows NT Client-Server\r\n    * Modules - Most moedern OS implement kernel modules\r\n        * These are loadable kernel module\r\n        * Uses OOP\r\n        * Similar to layers but is more flexible\r\n        * Eg. Device Drivers (These are loaded as needed within the kernel)\r\n        * Solaris Modular Approach (will be covered in upcoming lectures).\r\n    * Hybrid Approach - Combines multiple approaches to address performance, security and usability.\r\n        * Eg. Linux and Solaris = monolithich + modular, windows = monolithic + microkernel and Mac OS and IOS = Darwin which is microkernel and BSD Unix kernel implemented over layered model\r\n","url":"https://sameep1234.github.io/notes/notes\\DuyqCiM0madNn92jbmrbQ.html","relUrl":"notes\\DuyqCiM0madNn92jbmrbQ.html"},{"doc":"Lecture 14","title":"Lecture 14","hpath":"courses.Semester 5.Operating System.Lecture 14","content":"\n\r\n# Semaphores\r\n\r\n## Primitives\r\n* The fundamental principle is that two or more processes can cooperate by means of simple signals, such that a process can be forced to stop at a specified place until it has recieved a specific signal.\r\n* The three operations that it is allowed are initialization, decrement and increment.\r\n* ![](/assets/images/2021-10-24-17-05-31.png)\r\n* count represents how many initial processes can enter a critical section and thus is generally initalized to 1.\r\n* Binary Semaphore Primitives\r\n    * ![](/assets/images/2021-10-24-17-14-54.png)\r\n\r\n## Strong and Weak Semaphore\r\n* ![](/assets/images/2021-10-24-17-17-13.png)\r\n\r\n## Mutual Exclusion through Semaphore\r\n* ![](/assets/images/2021-10-24-17-18-14.png)\r\n* **mutex** is similar to binary semaphore, the only difference is that the process which called signal is the only one who can unblock the critical section by calling semwait whereas it was vice versa in binary semaphores.\r\n\r\n## Producer/Consumer Problem\r\n* ![](/assets/images/2021-10-24-17-22-44.png)\r\n* ![](/assets/images/2021-10-24-17-23-25.png)\r\n* For now assume that buffer is infinite.\r\n    * ![](/assets/images/2021-10-24-17-24-44.png)\r\n    * ![](/assets/images/2021-10-24-17-27-25.png)\r\n    * ![](/assets/images/2021-10-24-17-28-04.png)\r\n    * 'n' represents how many items can be consumed.\r\n    * 's' is the semaphore used for mutual exclusion whereas 'delay' is the semaphore used for synchronization between producer process and consumer process.\r\n    * We have used binary semaphore here.\r\n    * The consumer will wait untill producer starts producing.\r\n    * Issues\r\n        * ![](/assets/images/2021-10-24-17-33-42.png)\r\n        * ![](/assets/images/2021-10-24-17-36-03.png)\r\n        * Process switch is not handled properly.","url":"https://sameep1234.github.io/notes/notes\\ICHVGmEuVKOKYojlCpdyD.html","relUrl":"notes\\ICHVGmEuVKOKYojlCpdyD.html"},{"doc":"Lecture 13","title":"Lecture 13","hpath":"courses.Semester 5.Operating System.Lecture 13","content":"\n\r\n# Hardware and Software Approaches for Mutual Exclusion\r\n\r\n## Special Machine Instructions\r\n* ![](/assets/images/2021-10-13-10-18-47.png)\r\n\r\n## Compare&Swap Instruction\r\n* ![](/assets/images/2021-10-13-10-19-43.png)\r\n* *word is the **memory location** that we are going to test.\r\n*  ![](/assets/images/2021-10-13-10-20-57.png)\r\n* ![](/assets/images/2021-10-13-10-22-07.png)\r\n* Note that bolt is a global variable.\r\n* Thus, at a time only one process can be in the critical section.\r\n\r\n## Exchange Instruction\r\n* The instruction exchanges the contents of a register with that of a memory location.\r\n* ![](/assets/images/2021-10-17-23-08-36.png)\r\n* ![](/assets/images/2021-10-17-23-15-14.png)\r\n\r\n## Advantages of Hardware Approach\r\n* ![](/assets/images/2021-10-17-23-12-09.png)\r\n\r\n## Disadvantages of Hardware Approach\r\n* ![](/assets/images/2021-10-17-23-15-45.png)\r\n* ![](/assets/images/2021-10-17-23-17-31.png)\r\n\r\n## Software Approaches\r\n* When you write your own program, you try to achieve mutual exclusion.\r\n* Attempt 1\r\n    * ![](/assets/images/2021-10-17-23-19-32.png)\r\n    * Suppose process 0 needs to enter into critical section every hour and process 1 needs to enter the critical section 1000 times in an hour.\r\n    * Now, it is suppose process 0 exits the critical section and allows process 1 to enter.\r\n    * turn variable is set 0 for the next 1 hour because process 0 is not going to go in the critical section.\r\n    * This means that process 1 will suffer.\r\n    * Secondly, if one process fails, the other process is permanently blocked.\r\n* Attempt 2\r\n    * ![](/assets/images/2021-10-17-23-24-37.png)\r\n    * In this attempt, we continuously check the flag of other process and if it is false, then only enter the critical section.\r\n    * Furthermore, lock the critical section by toggling the flag and once the process leaves the critical section, toggle the flag to free the critical section for other processes.\r\n    * Lets say process 0 gets switched after executing the first line.\r\n    * The problem is obvious then. **We can't acheive mutual exclusion.**\r\n* Attempt 3\r\n    * ![](/assets/images/2021-10-17-23-42-42.png)\r\n    * Deadlock situation can arrise if one instruction per process is executed.\r\n* Attempt 4\r\n    * ![](/assets/images/2021-10-17-23-46-03.png)\r\n    * Livelock situation can arrise if delay are same because both will check at the same time.\r\n    * Similar situation can arrise if one instruction is executed at a time.\r\n\r\n## Dekker's Algorithm\r\n* ![](/assets/images/2021-10-17-23-49-52.png)\r\n* ![](/assets/images/2021-10-17-23-50-05.png)\r\n* Each process first says that I want to enter with turning flag = true.\r\n* Then it checks other processes and whether they are in the critical section or not by checking flag as well as turn variables.\r\n* Then waits if both are true and vice versa.\r\n\r\n## Peterson's Algorithm\r\n* ![](/assets/images/2021-10-17-23-53-55.png)\r\n* It is reduced and less complex then dekker's algorithm.\r\n* Correctness\r\n    * ![](/assets/images/2021-10-17-23-54-58.png)","url":"https://sameep1234.github.io/notes/notes\\DNVMAERWrj3HKJidtLnpT.html","relUrl":"notes\\DNVMAERWrj3HKJidtLnpT.html"},{"doc":"Lecture 12","title":"Lecture 12","hpath":"courses.Semester 5.Operating System.Lecture 12","content":"\n\r\n# Concurrency\r\n\r\n## Principles of Concurrency\r\n* ![](/assets/images/2021-10-12-23-55-10.png)\r\n* Interaction of processes mean sharing, synchronization etc.\r\n* ![](/assets/images/2021-10-12-23-56-09.png)\r\n\r\n## Key Terms\r\n* ![](/assets/images/2021-10-12-23-59-05.png)\r\n* ![](/assets/images/2021-10-12-23-59-21.png)\r\n* Greatest example of deadlock is traffic jam at a cross road where none of the cars are able to move.\r\n* ![](/assets/images/2021-10-13-00-00-27.png)\r\n* Race Condition: Suppose that two threads are trying to change a variable's value.\r\n* The final value will be defined by that thread which executes later and thus realtive timeing of execution is important.\r\n* Uniprocessor\r\n    * ![](/assets/images/2021-10-13-00-02-50.png)\r\n* Multiprocessor\r\n    * ![](/assets/images/2021-10-13-00-03-49.png)\r\n\r\n## Difficulties in Concurrency\r\n* ![](/assets/images/2021-10-13-00-04-49.png)\r\n* If the global resource is not handled properly than it might be left in some adverse state which is not desired.\r\n\r\n## Enforce Single Access\r\n* ![](/assets/images/2021-10-13-00-11-05.png)\r\n* This method is similar to that of Serial programming whereas each process is executed one after the other.\r\n\r\n## OS Role in solving difficulties\r\n* ![](/assets/images/2021-10-13-00-13-01.png)\r\n* Recap: OS keeps track of various processes with the help of PCBs.\r\n\r\n## Process Interaction\r\n* ![](/assets/images/2021-10-13-00-14-30.png)\r\n* Renewable resource means that a resource that can be used by other process even after completion of one process. Eg. Printer\r\n* Consumable resource means that a resource that can not be used by other processes after completion of one process. Eg. Message communication.\r\n\r\n## Mutual Exclusion\r\n* Requirements\r\n    * ![](/assets/images/2021-10-13-00-22-32.png)\r\n    * ![](/assets/images/2021-10-13-00-24-38.png)\r\n    * ![](/assets/images/2021-10-13-00-26-53.png)\r\n    * Critical section means a particular code section which uses the same shared resource.\r\n\r\n## Approaches to Mutual Exclusion\r\n* ![](/assets/images/2021-10-13-00-27-54.png)\r\n* ![](/assets/images/2021-10-13-00-28-37.png)\r\n* Support from Programming language or OS - Java has synchronize constructor (will be covered in depth later).\r\n\r\n## Hardware Support for Mutual Exclusion\r\n* Disabling Interrupts\r\n    * ![](/assets/images/2021-10-13-00-30-01.png)\r\n    * Suppose a process is in critical section and is executing an operation on I/O.\r\n    * If, due to some reasons, the process is interrupted and blocked, then only the other process has the chance of getting executed in the same critical section.\r\n    * This can be thus solved by disabling the interrupts before entering the critical section.\r\n    * Issues\r\n        * ![](/assets/images/2021-10-13-00-32-45.png)\r\n    * Solution\r\n        * ![](/assets/images/2021-10-13-00-33-48.png)\r\n        * ![](/assets/images/2021-10-13-00-34-32.png)\r\n        * ![](/assets/images/2021-10-13-00-34-49.png)\r\n        * Refer book for more info on compare and swap and exchange instruction.\r\n\r\n## Extra Points\r\n* ![](/assets/images/2021-10-13-00-21-32.png)","url":"https://sameep1234.github.io/notes/notes\\iNXeDmEvd3nkVwKpwVRsl.html","relUrl":"notes\\iNXeDmEvd3nkVwKpwVRsl.html"},{"doc":"Lecture 11","title":"Lecture 11","hpath":"courses.Semester 5.Operating System.Lecture 11","content":"\n\r\n# Threads\r\n\r\n## Introduction\r\n* ![](/assets/images/2021-10-12-16-45-08.png)\r\n* The unit of dispatching is referred to as a thread or lightweight process.\r\n* Thus, to define thread, we can say that it is an independent path of execution of instruction.\r\n* The unit of resource ownership is referred to as a process or task.\r\n\r\n## Multithreading\r\n* ![](/assets/images/2021-10-12-16-47-59.png)\r\n* Threads, in  greneral, run the same set of instructions. \r\n* However, it might be the case where the interaction with client make some more instructions to execute or some instructions to get skipped.\r\n* Eg. Server pool of threads for each client, Word program checking spelling and displaying output at the same time.\r\n\r\n## Single Thread approach and Multi thread approach\r\n* ![](/assets/images/2021-10-12-16-52-16.png)\r\n* ![](/assets/images/2021-10-12-16-53-25.png)\r\n\r\n## Relationship between process and multithreading\r\n* ![](/assets/images/2021-10-12-16-55-14.png)\r\n\r\n## Multithreaded environment\r\n* When we have one or more threads in process, each thread has the following\r\n    * ![](/assets/images/2021-10-12-16-57-25.png)\r\n* Theoritical Definition: Thread is an **independent** program counter operating **within** a process.\r\n\r\n## Thread vs Process\r\n* ![](/assets/images/2021-10-12-17-00-26.png)\r\n* Recap: User address space contains the program and the data.\r\n* Thus, we can see that the user address space is shared with multiple threads within the same process.\r\n\r\n## Benefits of threads\r\n* ![](/assets/images/2021-10-12-17-04-46.png)\r\n\r\n## Case study - File Server Application\r\n* ![](/assets/images/2021-10-12-17-06-59.png)\r\n\r\n## Single User System\r\n* In file server, we can have multiple client requests and multiple threads, but in single user system, it is not the case.\r\n* Foreground/Background processes can be handled using threads individually.\r\n* Asynchronous Processing - Eg. Backing up in background.\r\n* Faster Execution - Read one set of data while processing another set.\r\n* Organization - Eg. For a word processing program, may allow one thread for each file being edited.\r\n\r\n## Management of thread at process level and similarities with processes\r\n* ![](/assets/images/2021-10-12-17-11-53.png)\r\n* ![](/assets/images/2021-10-12-17-12-55.png)\r\n\r\n## Thread states and its operations\r\n* ![](/assets/images/2021-10-12-17-13-25.png)\r\n* ![](/assets/images/2021-10-12-17-14-36.png)\r\n\r\n## Remote Procedure Call\r\n* It means that from one program, we are calling a procedure of another program in the remote machine.\r\n* Distributed computing concept starts with RPCs.\r\n* ![](/assets/images/2021-10-12-17-16-34.png)\r\n* Single Thread Model\r\n    * ![](/assets/images/2021-10-12-17-16-55.png)\r\n* Multi Thread Model\r\n    * ![](/assets/images/2021-10-12-17-17-52.png)\r\n\r\n## Uniprocessor Multithreading\r\n* ![](/assets/images/2021-10-12-17-19-06.png)\r\n\r\n## Thread Synchronization\r\n* ![](/assets/images/2021-10-12-17-20-26.png)\r\n* ![](/assets/images/2021-10-12-17-23-12.png)\r\n\r\n## Categories of Thread Implementation\r\n* User Level Threads (ULT)\r\n    * ![](/assets/images/2021-10-12-19-32-18.png)\r\n    * Java supports ULT.\r\n    * Suppose that a thread is running and makes a system call.\r\n    * Since, it made a system call, it must go through the kernel.\r\n    * The kernel is not aware about the thread, it is only aware about the process and thus, the whole process gets blocked.\r\n    * Overall, the process state and thread state may not change simultaneously or concurrently.\r\n    * Advantage\r\n        * ![](/assets/images/2021-10-12-19-41-26.png)\r\n        * ![](/assets/images/2021-10-12-19-41-38.png)\r\n        * The different scheduling is done only for application and not done by the kernel as kernel is not aware about the threads.\r\n        * ![](/assets/images/2021-10-12-19-43-51.png)\r\n    * Disadvantage\r\n        * ![](/assets/images/2021-10-12-19-44-22.png)\r\n        * ![](/assets/images/2021-10-12-19-44-39.png)\r\n* Kernel Level Threads (KLT)\r\n    * ![](/assets/images/2021-10-12-22-45-15.png)\r\n    * Advantages\r\n        * ![](/assets/images/2021-10-12-23-45-11.png)\r\n    * Disadvantages\r\n        * ![](/assets/images/2021-10-12-23-45-33.png)\r\n\r\n## Combined Approach\r\n* ![](/assets/images/2021-10-12-23-49-04.png)\r\n* Eg. Solaris uses this approach.\r\n\r\n## Thread and Process\r\n* ![](/assets/images/2021-10-12-23-49-57.png)\r\n* For 1:M, at a time, a thread belongs to one process.","url":"https://sameep1234.github.io/notes/notes\\XV4krgl1Xqw99yjO9sLyX.html","relUrl":"notes\\XV4krgl1Xqw99yjO9sLyX.html"},{"doc":"Lecture 10","title":"Lecture 10","hpath":"courses.Semester 5.Operating System.Lecture 10","content":"\n\r\n# Scheduling Algorithm (Cont.)\r\n\r\n## Fair-share scheduling\r\n* ![](/assets/images/2021-09-28-17-22-11.png)\r\n* ![](/assets/images/2021-09-28-22-08-43.png)\r\n* ![](/assets/images/2021-09-28-22-10-49.png)\r\n* ![](/assets/images/2021-09-28-22-13-43.png)\r\n* The algorithms discussed till now does not include who is the user that created the process, which groups are being used etc.\r\n* This algorithm takes care of such things.\r\n* Please note that fair share does not necessarily mean equal, but it can also mean that if weight assigned to a process is more, the work completed by it is expected to be more in the long run.\r\n* Implementation\r\n    * ![](/assets/images/2021-09-28-22-17-59.png)\r\n    * ![](/assets/images/2021-09-28-22-23-39.png)\r\n* Some calculation\r\n    * ![](/assets/images/2021-09-28-22-25-10.png)\r\n    * CPUj(i) means time utilized by a process j till \"i\" interval.\r\n    * ![](/assets/images/2021-09-28-22-29-51.png)\r\n    * The second point can be easily visualised with the help of formula.\r\n* Example\r\n    * ![](/assets/images/2021-09-28-22-37-44.png)\r\n    * It is given in the question that the Process B and C combined are assigned 50% and Process A alone is assigned 50% weightage.\r\n\r\n## Traditional (older) UNIX Scheduling\r\n* ![](/assets/images/2021-09-28-22-39-46.png)\r\n* Some calculations\r\n    * ![](/assets/images/2021-09-28-22-42-57.png)\r\n* ![](/assets/images/2021-09-28-22-43-23.png)\r\n* The purpose of the nicej is to maintain that the priority of any particular process does not go too down with increasing value of CPUj(i) and remains between the **assigned band.**\r\n* Types of band with **decreasing order of priority**\r\n    * ![](/assets/images/2021-09-28-22-46-13.png)\r\n    * From the above figure, we can conclude that the swapper band has the highest priority whereas the user processes have the lowest priority.\r\n* Example\r\n    * Note that in the below example, we are only considering **user processes.**\r\n    * ![](/assets/images/2021-09-28-22-49-26.png)\r\n    * **Note that the process which will be executing next will be that whose priority value is lowest which means highest priority.**\r\n","url":"https://sameep1234.github.io/notes/notes\\HaLC0S6nmXGxECDqZ0RXF.html","relUrl":"notes\\HaLC0S6nmXGxECDqZ0RXF.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Operating System.Lecture 1","content":"\n\r\n# Introduction to Operating System\r\n\r\n## Course Material\r\n* Textbook - Operating Systems: Internals and Design Principles, 9th Edition, by William Stallings, Pearson\r\n\r\n## Computing System\r\n\r\n> Basic purpose is to perform computation on input data and generate results\r\n\r\n* Comprised of hardware, software and data.\r\n* Secondary storage stores all the programs (like code in C).\r\n* To execute it, first load it into the memory (RAM).\r\n* For any program to run by the processor, first fetch, then execute and then finally check for the interrupts.\r\n\r\n> Operating System will perform the task of loading the program from secondary memory (Hard Disks) to main memory (RAM)\r\n\r\n## Functions of OS\r\n* I/O Management\r\n* Process Management\r\n* Memory Management\r\n* File Management\r\n\r\n> Operating system is a program that acts as an intermediary between a user of a computer and the computer hardware.\r\n\r\n## Objectives of OS\r\n* Convenience - Makes computer easy to use\r\n* Efficiency - Manages resources efficiently\r\n* Ability to evolve - Easy to adapt changes\r\n\r\n## Users of Computing System\r\n* End User - Use the application as it is. Eg. Excel Users\r\n* Programmer - Developing applications. Need to understand utility programs and OS\r\n* Operating System Designer/System Level Programmer - Creates OS/**Works with computer hardware**/Develop or write a driver\r\n\r\n> Driver is a piece of software that understands a hardware. It understands the internals of the attached hardware.\r\n\r\n## Services provided by OS\r\n\r\n> Through these services OS attains \"Convenience\".\r\n\r\n* Program development\r\n* Program execution\r\n* Access I/O devices (Eg. CDs, Pendrives)\r\n* Controlled access to files (Provides protection in multi-access systems (Eg. Multiple users in same laptop))\r\n* System access\r\n* Error detection and response (Eg. Errors in reading CDs)\r\n* Accounting (Collect usage statistics/Monitor performance)\r\n\r\n## Resource Management\r\n* Movement\r\n* Storage\r\n* Processing of data\r\n\r\n> OS is a program that is executed by the CPU! (Kind of ironic. OS handles CPU but is executed by CPU XD)\r\n","url":"https://sameep1234.github.io/notes/notes\\NilMPClAkIcBxY9gXn4hR.html","relUrl":"notes\\NilMPClAkIcBxY9gXn4hR.html"},{"doc":"Material Science and Engineering","title":"Material Science and Engineering","hpath":"courses.Semester 5.Material Science and Engineering","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\SkPPj7voTTRpF7d0XMYNV.html","relUrl":"notes\\SkPPj7voTTRpF7d0XMYNV.html"},{"doc":"Lecture 9","title":"Lecture 9","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 9","content":"\n\r\n# Burger Vector\r\n","url":"https://sameep1234.github.io/notes/notes\\gi1QE3CwwwrRaE0vOW9cq.html","relUrl":"notes\\gi1QE3CwwwrRaE0vOW9cq.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 8","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\gZWdHxe7beJXxLOmqBZDk.html","relUrl":"notes\\gZWdHxe7beJXxLOmqBZDk.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 7","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\rucqsOq5X9zXPptJHo7F9.html","relUrl":"notes\\rucqsOq5X9zXPptJHo7F9.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 5","content":"\n\r\n# X-ray Diffraction (XRD)\r\n\r\n> Diffraction occurs when a eave encounters a series of regularly shaped obstacles that are capable of scattering the wave and have spacings that are comparable in magnitude to the wavelength.\r\n\r\n## Key Points\r\n* [Site](http://calistry.org/calculate/latticePlanesMillerIndices) to view miller indices and planes easily.\r\n* When two waves are in sync with the phase of each other, it is called constructive interference and vice versa.\r\n* In case of constructive interference, the amplitude of the final wave will be added and vice versa.\r\n* X-Rays are a form of electromagnetic radiation that have high energies and short wavelengths of the order of the atomic spacings for solids.\r\n* ![](/assets/images/2021-09-08-14-54-08.png)\r\n* Here d = interplanar spacing and will remain the same for a particular material.\r\n* We would be using copper k-alpha. Advatage is immediate cooling of the metal.\r\n* Copper k-beta gives very low intensity and hence is avoided for XRD study.\r\n* Wavelength of XRD = 1.54 angstrom (fixed for all calculation).\r\n* **For diffraction to occur, 2dsin($\\theta$) = n$\\lambda$ must be satisfied where n = order of reflexion.**\r\n* **Always take n=1 unless specified. n = 1 implies first order diffraction.**\r\n\r\n> Key Question: How to decide which element to take (like Copper, Molebdenum or Cobalt)?\r\n* So in such cases, first we check the intentsity and then the d-spacing as it remains the same for the same material.\r\n\r\n## X-Ray Diffractogram Image\r\n* ![](/assets/images/2021-09-18-09-10-15.png)\r\n\r\n## Bragg's law\r\n* ![](/assets/images/2021-09-08-14-47-40.png)\r\n* It is the relationship among x-ray wavelength, interatomic spacing and angle of diffraction for **contructive interference.**\r\n* **Note that if the bragg's law is not satisfied then the destructive interference will occur and a very low-intensity diffracted beam will be produced.**\r\n\r\n## X-Ray Diffractogram\r\n> Curve between intensity and diffraction angle (2$\\theta$).\r\n\r\n## How to identify which crystal structure? (SC, BCC or FCC)\r\n* For that we have to calculate $h^2$ + $k^2$ + $l^2$ where h,k and l are the miller indices.\r\n* Then use the below image.\r\n    * ![](/assets/images/2021-09-08-16-03-14.png)\r\n    * For SC, always calculate till 8th step and **show that 7 is absent/missing.**\r\n    * If 7 comes in the series then multiply the whole series with 2 to get BCC structure.\r\n    * ![](/assets/images/2021-09-08-16-50-04.png)\r\n\r\n## How to identify material based on lattice parameter?\r\n* First thing to **remember** is that angle is **2$\\theta$** with **intensity.**\r\n* Then use the below image to follow the steps.\r\n    * ![](/assets/images/2021-09-09-07-53-22.png)\r\n    * **Note: 2$\\theta$ values may differ based on XRD**\r\n    * Now, if any of the first 3 columns comes whole integer, then we get our $h^2$ + $k^2$ + $l^2$.\r\n    * Otherwise, we go on multiplying with 4, then with 5 and so on untill we get a whole integer and that becomes the value of $h^2$ + $k^2$ + $l^2$.\r\n    * To calculate a, find average of the **peaks**.\r\n","url":"https://sameep1234.github.io/notes/notes\\H0BgcOKxQkTg1e7v0sq05.html","relUrl":"notes\\H0BgcOKxQkTg1e7v0sq05.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 4","content":"\n\r\n\r\n# Directions and Planes\r\n\r\n## Points to ponder (**Lecture 3**)\r\n* Each corner atom in a unit cell contribute 1/8 in cubes and 1/6 in hex.\r\n* Body center atom contribute 1 and face atoms contribute 1/2.\r\n* For hcp number of atoms in the unit cell is 6. (3 BC (contribute 1), 2 FC (contribute 1/2), 12 Corner (contribute 1/6))\r\n\r\n## Density Computation\r\n* $\\rho$ = $\\frac{nA}{VcNa}$\r\n* Here $\\rho$ is the density, n is the number of atoms in a unit cell, A is the atomic mass of the element, Vc is the volume of unit cell and Na is the avogadro's number.\r\n* **Note that this density is theoretical and not measured. There is some discrepancy between the two.**\r\n\r\n## Crystal Directions\r\n> These include linear density and planar density\r\n\r\n* ![](/assets/images/2021-08-29-18-16-42.png)\r\n\r\n> Always divide by the biggest number. Eg. 4th case in the above image.\r\n\r\n## Extra points\r\n* To represent direction, use square brackets.\r\n* To represent plane, use round brackets.\r\n* Parallel planes belong to the same **family** of planes.\r\n* To represent family of planes, use curly brackets.\r\n* To represent family of directions, use angular brackets.\r\n* There should not be comma between numbers in either of the cases.\r\n* Negative coordinates are also possible and are represented by a bar over the number.\r\n* For hcp, the coordinate system is different and contains one more extra coordinate in the xy plane.\r\n* We calculate it using the below formula.\r\n    * ![](/assets/images/2021-09-17-21-44-05.png)\r\n* Lattice parameters include the three edge lengths (a, b, c) and the three interaxial angles ($\\alpha$, $\\beta$, $\\gamma$).\r\n\r\n\r\n> Why are planes in a lattice important?\r\n* Determining crystal structure\r\n* Plastic deformation\r\n* Transport properties\r\n\r\n## Miller Indices\r\n* This is one of the information required to study X-Ray defractogram\r\n* Procedure to find these indices\r\n    * Note the intercepts made by plane in terms of **lattice constants** a,b and c.\r\n    * Note the coefficient of the intercepts.\r\n    * Find inverse of them.\r\n    * Find LCM and multiply them by LCM.\r\n    * These points that you get are the Miller indices.\r\n\r\n> Example of calculating Miller indices\r\n\r\n![](/assets/images/2021-08-29-18-27-28.png)\r\n\r\n## How to draw planes?\r\n* First get the miller indices.\r\n* **Be careful about what is given, if intercepts are given the  calculate miller indices otherwise directly use miller indices provided.**\r\n* Simply select an origin and the plane must pass through the miller indices.\r\n* Make sure to treat miller indices as simple coordinates.\r\n\r\n## Angle between planes\r\n![](/assets/images/2021-08-29-18-43-28.png)\r\n\r\n## Linear and Planar Density\r\n![](/assets/images/2021-08-29-18-45-11.png)\r\n\r\n* This is **atomic** density.\r\n* FCC Structure\r\n    * Case 1 (100)\r\n        * Linear Density = $\\frac{number of atoms}{length of the vector}$ = $\\frac{1}{a}$\r\n        * Planar Density = $\\frac{number of atoms}{area of the plane}$ = $\\frac{2}{a^2}$\r\n    * Case 2 (110)\r\n        * Linear Density = $\\frac{2}{\\sqrt{2}a}$\r\n        * Planar Desity = $\\frac{2}{\\sqrt{2}a^2}$\r\n    * Case 3 (111)\r\n        * Linear Density = $\\frac{1}{\\sqrt{3}a}$\r\n\r\n## Points to Ponder\r\n* For the area for calculation of planar density, follow these steps\r\n    * Imagine the plane and the crystal lattice.\r\n    * Use [this site](http://calistry.org/calculate/latticePlanesMillerIndices) for better visualization.\r\n    * The corner atoms will contribute 1/4 to the area, the face atoms will contribute 1/2 to the area and the body centered atoms will contribute 1 to the area.\r\n","url":"https://sameep1234.github.io/notes/notes\\P6hS8rnnzYatrcl2pNkoI.html","relUrl":"notes\\P6hS8rnnzYatrcl2pNkoI.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 3","content":"\n\r\n\r\n# Crystal Lattice\r\n\r\n### Sorry for the inconvinience but please refer this [site](https://unread.parthshah.ml/notes/omAwLOv3wYSYrihgzYlu4.html) for lecture 3 notes.\r\n\r\n## Extra Points\r\n* A crystalline material is one in which the atoms are situated in a repeating or periodic array over large atomic distances.\r\n* **Keep in mind that while calculating coordination number, it is the lattice which is considered and not the unit cell. A lattice a combination of unit cells.**\r\n","url":"https://sameep1234.github.io/notes/notes\\FuSEupSRICAtvtzK1dcEZ.html","relUrl":"notes\\FuSEupSRICAtvtzK1dcEZ.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 2","content":"\n\r\n\r\n# Atomic Structure, Bonding and Energy\r\n\r\n## Classification of materials\r\n![](/assets/images/2021-08-28-10-22-07.png)\r\n\r\n* Types of materials\r\n    \r\n    * Semiconductor\r\n    * Polymer\r\n    * Metals\r\n    * Ceramics\r\n    * Biomaterials\r\n    * Composites\r\n\r\n> Composite material is formed by the combination of two or more types of materials. But why do we need composite materials?\r\n\r\n* Reduce Weight\r\n* Lowers the cost of the material\r\n* Gives strength to the device\r\n* **Mediates propogation of charge/current**\r\n\r\n## Atomic structure\r\n\r\n* Atomic mass unit = 1/12 of the mass of most common isotope of carbon.\r\n* Atomic weight is weighted average of atomic masses of naturally occuring isotopes.\r\n* A mole is amount of matter with mass in grams equal to atomic mass in amu.\r\n* A mole of carbon has a mass of 12 grams.\r\n* **One mole has 6.023 x 10^23 number of atoms (also called as Avogadro's number)**\r\n* Number density formula: \r\n\r\n![](/assets/images/2021-08-28-15-14-09.png)\r\n\r\nHere Nav = avogadro's number, $\\rho$ = mass density and A = atomic mass\r\n\r\n* De broglie wavelength: \r\n\r\n![](/assets/images/2021-08-28-15-58-00.png)\r\n\r\n* Heisenberg Uncertainty Principle: \r\n\r\n![](/assets/images/2021-08-28-15-58-34.png)\r\n\r\n### Electronic Structure of isolated atoms\r\n* n  principal shell (1,2,3... or K,L,M...)\r\n* l = anular (sub shell) (s,p,d,f)\r\n* ml = magnetic (-l to +l including 0)\r\n* ms = spin (1/2, -1/2)\r\n\r\n> Ionization potential is the energy required to pull out a valence electron (in vacuum) and by convention it is positive. Electron affinity is energy gained by putting an electron in (from vacuum) and by convention it is negative.\r\n\r\n> Electronegativity is the measure of how likely an atom will take up or give up an electron.\r\n\r\n* Valence electrons determine the physical properties viz chemical, electrical, thermal and optical\r\n* Electropositive elements easily give up electrons to become positive ions. These generally rest in the left sife of the periodic table and vice versa for electronegative elements.\r\n* This means electronegativity is smaller on left side and larger on the right side.\r\n\r\n## Physical properties in Periodic table\r\n![](/assets/images/2021-08-28-16-08-27.png)\r\n\r\n## Bonding in solids\r\n* At large distances, interactions are negligible and at small distances each atom exerts forces on the other.\r\n* These include, force of attraction and that of repulsion.\r\n\r\n![](/assets/images/2021-08-28-16-12-56.png)\r\n\r\n* Fnet = Fr + Fa. At equilibrium Fnet = 0\r\n* Usually the distance between the two atoms at equilibrium position is 0.3nm.\r\n\r\n## Potential Energy\r\n\r\n> **Here potential energy and energy are used interchangebly.**\r\n\r\n* Energy is integration of foice wrt the radius.\r\n* Enet = Ea + Er.\r\n* **Relation between force and energy is that energy is integration of force.**\r\n\r\n![](/assets/images/2021-08-28-16-17-07.png)\r\n\r\n* Attraction energy = -A/r and Repulsive energy = B/power(r,n)\r\n* E0 = Bonding energy at minimum distance. This means that it is the energy required to seperate two atoms to an infinite seperation.\r\n* It the curve above is deep, this implies that the material is rigid and inflexible and vice versa.\r\n* If the double derivative of the energy (equivalent to single derivative of force equation) equation at r = r0 is less than 0 then it is stable and vice versa.\r\n* To find the equalibrium position, make the single derivative of the energy equation (equivalent to the force equation) equal to 0.\r\n* The mechanical stiffness (elasticity) of a material is dependent on the shapr of its F vs r diagram.\r\n* Steep curve means relatively stiff and vice versa.\r\n\r\n## Ionic Bonding\r\n* Generally takes place between metals and non-metals. There is a complete transfer of electron.\r\n* **Difference between electronegativity is of prime importance. Ionic bonding only occurs between atoms with large differences in electronegativity.**\r\n* Cation = Positive Ion, Anion = Negative Ion\r\n* Primary Bonding means that electrons are completely transferred. Atoms do so to acheive stable configuration. Such type of bonding is very strong (columbic force in case of ionic bonding). (Eg. Ionic, Covalent and Metallic)\r\n* Ionic bonds are non-directional whereas covalent bonds are directional in nature. **Non-directional means that the magnitude of bond is equal in all directions around an ion.**\r\n* Secondary Bonding means that electrons are shared. This type of bonding is weaker compared to primary bonding. (Eg. inert gases (H2, Cl2) or permanet dipoles (H20, HCl))\r\n* Enet (due to all attractions and repulsions) is known as **madelung energy**.\r\n* The predominant bonding in **ceramic materials** is **ionic.**\r\n\r\n## Covalent Bonding\r\n* **Covalent bonding occurs between atoms with small differences in electronegativity.**\r\n* The stable electroninc configuration is achieved by **sharing of electrons**.\r\n* Generally occur between non-metals and is directional bond.\r\n* Number of colvalent bonds is determined by the number of valence electrons.\r\n* Percent of ionic characters:\r\n\r\n![](/assets/images/2021-08-28-16-46-57.png)\r\n\r\n* Here Xa and Xb are the electronegativities of elements a and b. Greater the difference between electronegativities, greater is the ionic bonding and vice versa.\r\n\r\n## Metallic Bonding\r\n* Found in metals and their alloys.\r\n* According to the model presented, the valence electrons are not bound to any particular atom in the solid and are more or less free to drift throughout the entire metal.\r\n* Thus, these are called as electron clound as the electrons are all over the metal.\r\n* The remaining non-valence electrons and nucleus form the ion core and **posses a net positive charge** equal to total valence electrons charge per atom.\r\n* The free electrons sheild the positively charged ion cores from mutually repulsive electrostatic forces along with acting as a **glue**.\r\n* Because of the availability of free electrons, metals are a good conductor of heat and electricity.\r\n\r\n## Van der waals bodning\r\n* All the above mentioned bonds are **primary** bonds and this type of bond is **secondary** in nature.\r\n* It is weaker as compared to primary bonds.\r\n* It is virtually ubiquitous but presence of primary bonds diminishes their effect.\r\n* Usually found between **inert gases**.\r\n* Dipoles are formed which exists whenever there is some separation of positive and negative portions of an atom or molecule.\r\n* Hydrogen bonding is a special type of secondary bonding that exists metweeb some molecules that have hydrogen as one of its constituents.\r\n\r\n## Summary of Bonding\r\n\r\n![](/assets/images/2021-08-28-16-50-27.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\1aLcWNPDgNX5qkq9mIfSm.html","relUrl":"notes\\1aLcWNPDgNX5qkq9mIfSm.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 1","content":"\n\r\n# Introduction to Material Science and Engineering\r\n\r\n## Points to Ponder\r\n* With slight change in physical properties, we can get a whole new material. These are **amorphous** and **crystalline**.\r\n* Difference between LED and solar cell is that one emits the light and other absorbs the light.\r\n\r\n## Assessment and Evaluation\r\n* Mid Sem Exam - 25%\r\n* End Sem Exam - 30%\r\n* Lab Work (including viva (15%) and theory exam (10%)) - 25%\r\n* Project - 10% (Based on ppt presentation and viva)\r\n* Tests/Quizes - 10% (Two Quiz of 5% each)\r\n\r\n## Project Details\r\n* Submit a report\r\n* Viva will be conducted\r\n\r\n## Course Material\r\n* Textbook - Materials Science and Engineering: An Introduction, William D Callister 6th Edition, John Wiley & Sons.\r\n\r\n> Central Paradign of Material Science and Engineering\r\n\r\n![](/assets/images/2021-08-28-10-09-21.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\NqoK0JIe4Tl0L1e2S4who.html","relUrl":"notes\\NqoK0JIe4Tl0L1e2S4who.html"},{"doc":"Identity and Behaviour","title":"Identity and Behaviour","hpath":"courses.Semester 5.Identity and Behaviour","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\elcUWYUkVJfjM5NLR8toR.html","relUrl":"notes\\elcUWYUkVJfjM5NLR8toR.html"},{"doc":"Lecture 9","title":"Lecture 9","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 9","content":"\n\r\n# Decision Making\r\n\r\n> This lecture was dedicated to case study \"Leaving\" and hence there is not much notes to take.\r\n* In this, the main issue was that the environment was not good enough for Joyce to openly communicate and the counter to any such issue is to ask \"What type of environment are you looking forward to?\"\r\n\r\n* Get to know about your boss is the prime importance for an employee and vice versa for boss to know their subordinates.\r\n* These information could be collected by knowing about attitudes, motives, interest, experience and expectation for individuals counter part.\r\n","url":"https://sameep1234.github.io/notes/notes\\Hr47qzUFcmVUme1LHy5Ct.html","relUrl":"notes\\Hr47qzUFcmVUme1LHy5Ct.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 8","content":"\n\r\n# Judgement and Attribution Theory\r\n> Recap: Behaviour is defined as observable actions.\r\n\r\n> The key question that we are are trying to answer is that whether any behaviour shown by the individual could be **attributed** to internal or external factors.\r\n\r\n* To answer the question, we need to ask the following three high priority questions so as to make any valid judgement.\r\n    * How does this person behave in **different situations**?\r\n    * How do **others** behaving in **similar situations**?\r\n    * How this person behaved **over time** in a **similar situations**?\r\n\r\n> Inferences based on the above three questions\r\n* **Distinctiveness** - Assess the **individual** for different **situations** and if the answer turns out to be Yes (High), it is the external attribution and vice versa.\r\n* **Consensurs** - **Compare** with **others** and if the answer turns out to be Yes (High), it is the external attribution and vice versa.\r\n* **Consistency** - Same individual **always behaved** over time and if the answer turns out to be Yes (High), it is the internal attribution and vice versa.\r\n* Easy way to remember this is **DISCCO CAB**.\r\n* ![](/assets/images/2021-09-26-12-18-40.png)\r\n\r\n## Judgement and Shortcuts\r\n* Necessary conditions for making judgement.\r\n    * Information about all the three elements.\r\n    * But many times we dont have that and at that time, you should have motivation and time for finding them.\r\n    * So we essentially assume and shortcuts and sometimes leads to error.\r\n\r\n## Errors and Biases in Perception\r\n* Fundamental Attribution Error\r\n    * This happens when we are judging **others** and **not ourselves.**\r\n    * Here, we tend to **underestimate** the **influence of external factors** and **overestimate** hte **influence of internal factors.**\r\n* Self-Serving Biad\r\n    * This happens when we are judging **ourselves** and **not others.**\r\n    * This is a complete opposite of fundamental attribution error.\r\n    * Whenever we are successful, we tend to attribute it to **internal factors** and vice versa.\r\n\r\n## Shortcuts in Judging Others\r\n* Selective Percepton\r\n    * Tendency to **choose** to interpret what one sees based on one's interest, experience, attitude and background.\r\n    * Eg. We don't read each and every news that comes on the feed, we **choose** to read only those that interests us.\r\n* Halo Effects\r\n    * Halo means angel which is ususally represented by a yellow circle above his head.\r\n    * It is the tendency to draw a **positive general impression** about an individual/product based on a single characteristic.\r\n    * Eg. People prefering apple products are not concerned with the competition and the features avaible in other phones and at what price and thus are **operating under the halo effect.**\r\n* Horn Effects\r\n    * Horns usually represent devil.\r\n    * It is the tendency to draw a **negative general impression** about an individual/product based on a single characteristic.\r\n    * Eg. Mother/daughter in law case.\r\n* Stereotyping\r\n    * It means that we are judging someone based on one's **perception of the group.**\r\n    * Eg. Being from Gujarat means that you are very good in business or have a entrepreneurial nature.\r\n","url":"https://sameep1234.github.io/notes/notes\\cqVBObtdH7zSXOgcmSdsW.html","relUrl":"notes\\cqVBObtdH7zSXOgcmSdsW.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 7","content":"\n\r\n# Perception and Factors\r\n\r\n## Zone of Proximal Development\r\n* Every individual's learning can be mapped in three concentrix circles.\r\n* Inner most circle represents things that he/she can do on his/her own.\r\n* Outer circle includes things that the learner can't do.\r\n* Whatever lies between these circles is called **zone of proximal development.**\r\n* This zone indicated all those things which a learner can do with some external help.\r\n* This process is called **scaffolding.**\r\n* Example:\r\n    * Riding the bicyle is in outer most circle.\r\n    * Child knows balancing while walking and running and hence is in inner most circle.\r\n    * The father (who holds the bicycle from behind) is basically **operating** in the zone of proximal development.\r\n\r\n## Perception\r\n* Perception is a **process** by which we organize and interpret sensory impressions to give **meaning to out environment.**\r\n* People's behaviors are based on their perception of reality and not the actual reality itself.\r\n* Eg. The perception will depend on how severe the consequences are like that example of confiscation of phone.\r\n\r\n## Factors that influence perception\r\n* Perceiver\r\n    * Attitude\r\n    * **Motives**\r\n    * **Interests**\r\n    * **Experience**\r\n    * **Expectations**\r\n* Target\r\n    * Motion\r\n    * Sounds\r\n    * Size\r\n    * Background\r\n    * Proximity\r\n    * Similarity\r\n* Setting/Context/Situation\r\n    * Time\r\n    * Work Setting\r\n    * Social Setting\r\n    * Example\r\n        * A boy is talking to a girl.\r\n        * A boy is talking to a girl in a workplace.\r\n        * A boy is talking to a girl in a bar.\r\n        * A boy is talking to a girl in the temple.\r\n        * A boy is talking to a girl outside movie theater.\r\n        * A boy is talking to a girl outside OYO rooms.\r\n* ![](/assets/images/2021-09-26-11-50-53.png)\r\n\r\n> What should we do in case of conflict because of perception?\r\n* Always look at the three main aspects viz motives, interest and expectations.\r\n","url":"https://sameep1234.github.io/notes/notes\\rqnSNK50Xu9SVvgndKyPG.html","relUrl":"notes\\rqnSNK50Xu9SVvgndKyPG.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 6","content":"\n\r\n# Piaget's and Theory\r\n\r\n## Piaget's Theory\r\n* It's main principle is that children act on their physical environment by playing and exploring to develop schemes.\r\n* Schemes are nothing but metal representation of bodily movement of something that a person can do with an object.\r\n* Example of scheme include cricket bat and watch.\r\n* Schemes develop through **assimilation and accomodation.**\r\n* Assimination is the process by which new expeciences are incorporated into existing schemes.\r\n* Accomodation is the process by which schemes are changed and new experiences are **assimilated.**\r\n* Example is of a child trying to stack smaller blocks on hollow bigger block.\r\n* Another example can be of telephone. After multiple iterations a child knows that when a telephone rings, we pick it up and talk. Similar is the case with wireless mobile phones but the range is low in wired case.\r\n* Thus, identifying the scheme is of prime importance. So, for the telephone example, the scheme is that whenever it rings, someone comes and picks it up.\r\n* Now, the new experience is of mobile phones. What to do when it rings? This has to be incorported by the child.\r\n* Operations\r\n    * Those actions that can be reversed or they are called reversible actions.\r\n    * Types of operations\r\n        * Cause and effect - Eg. Switch\r\n        * Conservation of substance - Eg. Clay\r\n* Four stages\r\n    * **Sensorimotor stage** (birth to 2 yrs) \r\n        * Focus on present object and not on the object that is not there.\r\n        * They have basic schmes of shaking, twisting, pushing etc. (inbuilt)\r\n    * **Preoperational stage** (2 to 7 years)\r\n        * Think about the objects that are not present.\r\n        * Don't think of reversible consequence of actions.\r\n        * Use perception rather than logic.\r\n        * Eg. Water in different shapes of container.\r\n    * **Concrete-Operational stage** (7 to 11 yrs)\r\n        * These are tied to their actual experiences.\r\n        * Eg. Water in bottle to glass\r\n        * **They are not able to generalise the results to all the types of substances.**\r\n        * They are not able to think in hypothetical situations.\r\n    * **Formal-Operational stage** (11 to 16 yrs)\r\n        * Notice similarites between operations performed on different objects.\r\n        * **They are able to generalise the results obtained in one situations to other situations.**\r\n        * They can now think in hypothetical world.\r\n        * Eg. How much air does a room contain? It is the volume of the room.\r\n\r\n## Vigotsky's Theory\r\n* Its main principle is that children develop in the social world by interacting with other people and products of their cultural history.\r\n* Eg. Child born in a tribe and in a modern family.\r\n    * The difference between learning language in modern family and that in tribe would be of written documentation.\r\n    * Tribe people might not have a written manuscript of the symbols and language that they use whereas modern family have perfectly well maintained documentation of the rules and regulations of their language.\r\n    * Thus, a child in tribe might learn about only the spoken part and not the written part whearas in modern family, a child learns both.\r\n* Social elements\r\n    * Symbols\r\n    * Knowledge\r\n    * Ideas\r\n    * Mode of reasoning\r\n\r\n## Difference in perspective of both theories\r\n* ![](/assets/images/2021-09-12-11-44-22.png)\r\n* In the above example, from piaget's perspective, the child discovered the rule of commutativity because the child acted on the pebbles (physical environment) and while playing with it.\r\n* From the vigotsky's perspective, the child belongs to the community where they know how to count or at least that community value counting because of which the child started counting.\r\n* Otherwise, the child could have done numerous other activities with the pebbles like throwing it, catching it etc.\r\n* This also means that the community also has some symbols that facilitate counting. Otherwise, how will a child count?\r\n","url":"https://sameep1234.github.io/notes/notes\\8CjQGw4PonYhRfK7rzhYb.html","relUrl":"notes\\8CjQGw4PonYhRfK7rzhYb.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 5","content":"\n\r\n# Social Learning Theory\r\n\r\n## Social Learning Theory\r\n> Individuals learn by **observing** what happens to other people and just by being told about something as well as through direct experience.\r\n\r\n* In layman terms, social learning theory is that we learn by observing others and in turn gaining **experience**.\r\n* Observational learning is the process of watching others for gaining **experience.**\r\n* Vicarious Reinforcement - Not necessary for an individual to explicitly behave in order to learn, it is enough to observe others for some actions and their consequences.\r\n* It is a natural extension of operant conditioning.\r\n* **It depends on how an individual perceives and defines the consequence.** Eg. Severity of phone confiscation may be different for those who use two phones and those who use only one.\r\n* **Bobo Doll Experiment is the very good example of social learning.**\r\n* Processes\r\n    * Attentional Processes - focusing on critical features.\r\n    * Retention Processes - How well the individual remembers action of model.\r\n    * Motor reproduction processes - Converting retained thoughts into action.\r\n    * Reinforcement processes - Motivation to exhibit modeled behaviour.\r\n\r\n## How do children learn?\r\n* They act on their physical environment.\r\n* They are like little scientists who experiment on physical environment.\r\n* Scheme is **what an object does.**\r\n","url":"https://sameep1234.github.io/notes/notes\\z1N2v5bLCwlyqin7hxUmX.html","relUrl":"notes\\z1N2v5bLCwlyqin7hxUmX.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 4","content":"\n\r\n# Learning and related theories\r\n\r\n## Learning\r\n> Any **relative permanent** change in **behaviour** that occurs as a result of **experience**.\r\n\r\n* Relatively Permanent - This does not mean that the time frame should be large. It could be short but it has to be relatively larger than the past conversation.\r\n* Change in behaviour - Obvious reasons. Observable actions. There could be many types of behaviour including learned and reflexive behaviour.\r\n* Experience - When you pay attention or focus on a particular conversation or an event, then that convsersation or event becomes the part of **your experience.**\r\n    * This means that we are involving sensory organs and hence it becomes a part of an experience.\r\n\r\n## Theories\r\n* Classical Conditioning\r\n    > It is a **learning process** through which we **create new reflexes.**\r\n\r\n    * Unconditioned Stimulus - Something that is already there in the environment.\r\n    * Unconditioned Response - Reflexive behaviour.\r\n    * Conditioned Stimulus - Something which is not part of the environment or an event that occurs multiple times.\r\n    * Conditioned Response - Learned behaviour.\r\n* Operant Conditioning\r\n    > **Behaviour** is a **function of consequences**. We do something to **get something** or to **avoid something.**\r\n\r\n    * If the consequences are positive, you repeat that activity and vice versa.\r\n    * We call it **operant** because we operate on the world. We are not doing it automatically or reflexively. We **consciously think** about it.\r\n","url":"https://sameep1234.github.io/notes/notes\\31uJafl3LekVK5T6Q0VDc.html","relUrl":"notes\\31uJafl3LekVK5T6Q0VDc.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 3","content":"\n\r\n# Organization-Behaviourist Model\r\n\r\n## Extra Points\r\n* Structuralist - Ask **\"What\"** questions.\r\n* Functionalist - Ask **\"Why\"** questions.\r\n* Behaviourist - Ask questions about **observable actions.**. Here we observe actions, experiment on them and then come up with a conclusion.\r\n\r\n## Organizational Behaviour Model\r\n![](/assets/images/2021-09-05-20-02-18.png)\r\n\r\n> Organizational Behavior - Field of study that investigates the impact that individuals, groups and structure have on behaviour within organizations for the purpose of applying such knowledge toward improving an organization's effectiveness.\r\n\r\n* Fundamental objective of OB Model is to enhance the performance and output of the organization.\r\n* Organization is consciously coordinated social unit, composed of two or more people that functions on a relatively continuous basis to achieve a common goal or set of goals.\r\n* In simple terms, it is a group of people who work to achieve a goal in a planned manner and with proper and effective (i.e relatively continuos) communication.\r\n* Manager is someone who gets the things done through other people in the organization.\r\n","url":"https://sameep1234.github.io/notes/notes\\D8F3yHqSbtkqcEYo4OAD5.html","relUrl":"notes\\D8F3yHqSbtkqcEYo4OAD5.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 2","content":"\n\r\n# Schools of Psychology (Cont.)\r\n\r\n## Functionalism\r\n* Mind and behaviour are adaptive.\r\n* This means that mind and behaviour are not static. They go hand in hand.\r\n* Functionalist study mental feats like learning, memory and problem solving.\r\n* Issue\r\n    * No scientific method to determine the role of mind (Consciousness of mind).\r\n    * Can't be called scientific because it can't be generalised. It varies from individual to individual.\r\n    * Furthermore, it is not observed and experiemented and hence it is other reason for it not being scientific.\r\n\r\n## Behaviourlism\r\n* Not focus on mind, see only the behaviour i.e the observable actions.\r\n* We can't see what's on the mind, behaviour is the only thing that can be observed.\r\n* Eg. Dog video with bell and food. Dog associates whenever bell is rung, food will come and hence dog starts salivating on seeing bell even when there was no food around.\r\n* Three characteristics to keep in mind\r\n    * Complex behaviour comes from elementary behaviour that we have learnt from the birth.\r\n    * Focus only on learned behaviour. Disregard any behaviour that the child may have born with.\r\n    * Human's behaviour is no different that that of an animal.\r\n\r\n## Gestalt Psychology\r\n* Structuralists are wrong.\r\n* The mind is not made of elements, but it is one as a whole.\r\n* It works as a whole by identifying certain relationships and patterns.\r\n    * Objects perceived inthe simplest form.\r\n    * Humans naturally follow lines or curves.\r\n    * Mind will attempt to fill in the detail that it not there.\r\n        * Eg. Below images\r\n            * ![](/assets/images/2021-09-05-19-13-45.png)\r\n            * ![](/assets/images/2021-09-05-19-13-58.png)\r\n* Principles\r\n    * Emergence - Look for some patterns\r\n    * Multistability - Two or more figures in the same image.\r\n    * Reification - Eg. Above cube which is not there but we are able to see it.\r\n    * Invariance - Images that appear symmetrical but is not proven. We **assume** that they are symmetrical.\r\n    * Closure\r\n    * Similarity\r\n    * Proxitmity\r\n    * Continuity\r\n    * ![](/assets/images/2021-09-05-19-16-48.png)\r\n\r\n## Johari Window\r\n> Principle - If you are aware about yourself and this information is public/made available to the general public, they your chances of success and happiness increases.\r\n\r\n* It is based on the fact of awareness of inner being and openness to share information with others.\r\n* Two elements of Johari window\r\n    * Individual and others\r\n    * Known and unknown information\r\n* This makes four quadrant.\r\n    * First - Information that I as well as others are aware about. It is also called as **arena.**\r\n    * Second - Information that I am not aware but others are. It is also called **blind spot.**\r\n    * Third - Information that I am aware but other are not. It is also called as **facade**\r\n    * Fourth - Information that I as well as others are not aware about. It is also called **unknown/dark.**\r\n* Objective of Johari Window\r\n    * Increase the area in **arena** which means the open area/free self\r\n* We can disclose the information that we know and others don't to increase arena.\r\n* As for the information that others know but we don't, we take the feedback and increase arena.\r\n* These include behaviour, attitude, feelings, knowledge, experience and skills at an individual level.\r\n* For the organization, arena is very small and to increase this area, we need to open up to the team assigned. We should also be ready to seek feedback. Furthermore other members should not feel that they are being judged.\r\n* To reduce the fourth quadrant, we need to have as many diverse experiences as possible at individual level. At manager level, we can conduct various kinds of interesting activiteis where other members open up. We must provide new opportunities for others to gain diverse experiences.\r\n","url":"https://sameep1234.github.io/notes/notes\\pHLx9ZAeoFncSSf1INz9V.html","relUrl":"notes\\pHLx9ZAeoFncSSf1INz9V.html"},{"doc":"Lecture 10","title":"Lecture 10","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 10","content":"\n\r\n# Decision Making and its related errors\r\n* When there is a problem, we make a decision and to the method is to choose one of the alternatives that we have in front of us.\r\n* Problem can be considered as discrepancy exists between current state of affairs and desired state.\r\n* In simpler terms, it is the difference between what we have and what we want.\r\n\r\n\r\n## Rational decision making model\r\n* Rational - making consistent **value maximing choices** within spcified constraints.\r\n* Model\r\n    * identify the problem.\r\n    * Identify the decision criteria.\r\n    * Allocate weights to the criteria.\r\n    * Develop the alternatives.\r\n    * Evaluate the alternatives.\r\n    * Select the best one.\r\n* Assumptions\r\n    * All information is available.\r\n    * Evaluate information in unbiased manner.\r\n    * select option with highest utility.\r\n\r\n## Bounded Rationality\r\n* A process of making decisions by constructing **simplified models** that extract the **essential features** from problem without capturing all their complexity.\r\n* It includes choosing of that option which is satisfactory and sufficient to one's needs.\r\n* How is this done?\r\n    * Alternatives that are highly visible.\r\n    * Reviewing alternatives focusing on choice that differ from current state.\r\n    * Until we find good enough option\r\n* **Note that in bounded rationality we do not focus on value maximisation but choose that option which is \"good enough\" for our use case.**\r\n* To search quickly, majority of the \"e-commerce\" sites have filters, customer reviews etc.\r\n\r\n## Intuition\r\n* An **unconscious** process created out of **distilled experience**.\r\n* Unconscious process means that we don't know that we are actually thinking about that decision.\r\n* Unconcious proceeses are usually fast, relies on thinking information from different sources and engages with emotion.\r\n* Expert based intuition decision can be very accurate and thus it can help in effective decision making.\r\n","url":"https://sameep1234.github.io/notes/notes\\FGeeZIW7TEYtRmns1GJfs.html","relUrl":"notes\\FGeeZIW7TEYtRmns1GJfs.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 1","content":"\n\r\n# Introduction to IDTB\r\n\r\n## Evaluation Scheme\r\n* Four Quizes: 20% (Each 5%)\r\n* Assignments\r\n* Class Participation: 25%\r\n* Mid Semester Exam\r\n* End Semester Exam\r\n\r\n> **No plagiarism**\r\n\r\n## Psychology\r\n* Science of behavior and mind.\r\n* Behavior is the action that can be observed.\r\n* Difference between emotions/feelings and behavior is that emotions/feelings can't be seen.\r\n* Mind is anything that lies in the consious and unconsious part.\r\n* Unconsious knowledge are something that are stored in mind and helps in organizing and reacting to the information.\r\n* Science is process of gaining knowledge through observation and experimentation.\r\n\r\n## Schools of Pyschology\r\n* Structuralism\r\n    * Break mind to its constituent elements.\r\n    * Constituent Elements\r\n        * Sensations\r\n        * Images\r\n        * Emotion/Feelings etc.\r\n    * Method to break mind into its constituents, we use introspection.\r\n    * Introspection means objective description. Make sure not to list its functions, meantion the **objective description.**\r\n    * Issue\r\n        * Does not tell the functions of mind.\r\n        * Just breaks down into its constituent elements and then what?\r\n","url":"https://sameep1234.github.io/notes/notes\\2nldjtbBrvIpAau9kvI1F.html","relUrl":"notes\\2nldjtbBrvIpAau9kvI1F.html"},{"doc":"Heritage Conservation","title":"Heritage Conservation","hpath":"courses.Semester 5.Heritage Conservation","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\znYlAnqQDCB58XxxMMdIl.html","relUrl":"notes\\znYlAnqQDCB58XxxMMdIl.html"},{"doc":"Lecture 9","title":"Lecture 9","hpath":"courses.Semester 5.Heritage Conservation.Lecture 9","content":"\n\r\n# Wood (Cont.) and Intro to Paper\r\n\r\n## Thermal Degradation\r\n* ![](/assets/images/2021-10-16-18-04-37.png)\r\n* It is the lignin that catches fire quickly and burns. The actual wood is quite heat resistant.\r\n\r\n## Biological Desgradation\r\n* ![](/assets/images/2021-10-16-18-05-46.png)\r\n\r\n## Defects in polychrome wood\r\n* ![](/assets/images/2021-10-16-18-06-44.png)\r\n* Varnish is a kind of protective coating.\r\n* At first, the varnish is very shiny and transperent but over time it turns yellowish brown.\r\n\r\n## Prevention and Conservation\r\n* ![](/assets/images/2021-10-16-18-10-57.png)\r\n\r\n# Paper\r\n* ![](/assets/images/2021-10-16-18-23-37.png)\r\n* Beat the **wood pulp** so many times that is becomes paper.\r\n* Firstly a very fine powder is formed.\r\n* Mechanical Process - Discussed above\r\n* Chemical Process\r\n    * Sulphite Process\r\n        * Take H2SO4 + CaCO3 (Limestome)\r\n        * Calcium Bisulphite is formed\r\n        * Dissolves the wood chip\r\n        * It dissolves most wood but not all.\r\n    * Kraft Process\r\n        * Sodium Hydroxide + Sodium Sulphide + water.\r\n        * Almost all of the wood is dissolved.\r\n    * Now you have added strong alkali or strong acid and disturbed the pH.\r\n    * Thus, you have added some amount of degrading process.\r\n    * It thus becomes the intrinsic agent responsible for degradation of paper.\r\n    * This processes breaks down the lignin and shorter chain hemicellulose.\r\n\r\n## Bleaching\r\n* ![](/assets/images/2021-10-16-18-30-29.png)\r\n* The wood pulp becomes white due to bleaching.\r\n* **Even though it breaks lignin and hemicellulose, it does not harm the cellulose chain.**\r\n\r\n## Extra Points\r\n* Rag paper is made of 100% pure cellulose and is the best paper.\r\n* This can be obtained only from chemical process as the wood pulp can be dissolved almost completely releasing the pure cellulose.\r\n* They also dissolve hemicellulose and lignin.","url":"https://sameep1234.github.io/notes/notes\\U0tYvkmDcImMI8bKoEjLq.html","relUrl":"notes\\U0tYvkmDcImMI8bKoEjLq.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Heritage Conservation.Lecture 8","content":"\n\r\n# Wood\r\n\r\n## Chemical Properties\r\n* ![](/assets/images/2021-10-16-16-24-44.png)\r\n\r\n## Physical Properties\r\n* ![](/assets/images/2021-10-16-16-25-06.png)\r\n* Wood is a porous material and **specific gravity** is the density of the wood excluding these pores.\r\n* Wood shrinks because of the pores. The moisture gets trapped in the pores and when it heats up, the moisture escapes and the wood shrinks.\r\n* It it shrinks by reducing the length, it is called **cracking** whereas if it rotates as a result of shrinking, it is called **warping**.\r\n\r\n## Directions of wood\r\n* ![](/assets/images/2021-10-16-16-29-58.png)\r\n* There is a steady flow of water as long as trunk is connected to the roots.\r\n* The moment it is cut, the water will escape slowly.\r\n* As a result, the wood will begin to shrink.\r\n* Thus, we require to cut the wood in a very specific manner/direction such that there is minimum amount of shrinking.\r\n* Wood has **anisotropic/directional** property which means it has different properties in different directions.\r\n* This means that percentage of shrinkage will be different in different directions.\r\n* If the wood is cut along the longitudinal direction, there will be minimum shrinking.\r\n* But, cutting accross longitudinal directions will not result in long planks of wood.\r\n* Thus, we cut the wood in radial direction only as it has lower shrinkage percentage then longitudinal and will result in longer planks.\r\n* The water content, if the wood cut in the tangential direction, is more and thus there would be more shrinking whereas it is not the case in longitudinal and radial direction.\r\n* Calculating the age of wood with the help of rings is called **dendrochronology**.\r\n* The seasonal adaption in the radial direction is the reason of lower warping and thus it won't change anymore.\r\n\r\n## Shrinkage Curve\r\n* ![](/assets/images/2021-10-16-16-43-56.png)\r\n\r\n## Grains of wood\r\n* ![](/assets/images/2021-10-16-16-44-43.png)\r\n\r\n## Deterioration\r\n* ![](/assets/images/2021-10-16-16-52-12.png)\r\n* Physical Degradation\r\n    * Warping\r\n    * Cracking\r\n    * Splitting\r\n* If the wood loses lignin (binding agent), the wood will develop crack because it will try to fall apart.\r\n* The outer particles in wood will pull the inner wood in opposite direction resulting in a large straight crack.\r\n* Swelling and shrinking can also result into network of cracks instead of straight crack.\r\n* Chemical Degradation\r\n    * ![](/assets/images/2021-10-16-16-58-26.png)\r\n    * **Pulp** is the precipitate that you obtain when you dissolve wood in either strong acid or strong alkali.\r\n\r\n## Extra Points\r\n* % shirinkage in\r\n    * Longitudinal Direction - 0.1% - 0.2%\r\n    * Radial Direction - 1% - 2%\r\n    * Tangential Direction - 6% - 12%\r\n* **Polychrome wood** means that wood is colored (in fact it is multicolored).\r\n* The sculptures made of wood are generally not carved from single wood.\r\n* They are joined seperately. To cover the joints, we use the following process.\r\n    * Wood + Iron nail (to join different parts of wood)\r\n    * a layer of cloth (muslin or markin in most cases) to hide the joints\r\n    * Add acid free tissue paper (i.e handmade paper)\r\n    * Add clay (chalk + kaolin) + glue (it decreases the porosity of papers by filling the pores)\r\n* **Gilded wood** is prepared in similar manner and is polished a lot.\r\n* Then it is painted to give shiny appearance.","url":"https://sameep1234.github.io/notes/notes\\wYJMyCXRWhiJtYI1dtW8r.html","relUrl":"notes\\wYJMyCXRWhiJtYI1dtW8r.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Heritage Conservation.Lecture 7","content":"\n\r\n# Ceramic and Intro to Wood\r\n\r\n## Firing stages of clay\r\n* First firing is called bisquing and second firing is called glazing.\r\n* There are two types of water molecules that are bonded with clay viz physically bonded water and chemically bonded water.\r\n* During bone dry stage of clay, the physically bonded water is released.\r\n* Now to remove, chemically bonded water, we fire the clay. This immense heating causing chemically binded water to detach from the clay making it very hard.\r\n* **Note that the temperature when firing the clay should be raised slowly and not drastically.**\r\n* This is because clay is porous and when firing, chemically bonded water will try to escape. Now, if suddenly the temperature is raised then the chemically bonded water will not escape suddenly.\r\n* Instead, the silica fuses into one another trapping the chemically bonded water.\r\n* Now, at high temperatures, these chemically bonded water turns into steam creating air bubbles.\r\n* As a result, the clay will disintegrate immediately. Same applies for cooling too. You have to cool the clay very slowly.\r\n\r\n## Colors of material at different temperature\r\n* ![](/assets/images/2021-09-12-09-26-10.png)\r\n\r\n## Quartz Inversion Temperature\r\n* ![](/assets/images/2021-09-12-09-26-43.png)\r\n* Quartz is silicon dioxide (SiO2) and has a trigonal crystalline structure called as alpha-quartz.\r\n* At 573 degrees it gets converted into beta-quartz which is hexagonal in shape.\r\n* So now, it holds clay at 6 points unlike earlier where it holded clay at only 3 points.\r\n* Now, because of this beta-quartz, the properties of silica change and thus, becomes impervious to water damage.\r\n* Now, if we cool the clay as soon as it reached 573 degrees, only some part of clay will get converted and majority will disintegrate as soon as it comes in contact of water.\r\n* Therfore, it is of vital importance that we keep the clay at least equal to 573 degrees for about 2-3 hrs. It depends on how big is the pot.\r\n* Finally, after quartz inversion takes place, clay turns into ceramics.\r\n\r\n## Sintering\r\n* This is the next phase of clay firing starting at 900 degrees.\r\n* ![](/assets/images/2021-09-12-09-33-49.png)\r\n* **After this phase, the water will be retained because of fusion of clay particles.**\r\n* Pores get removed due to exertion of pressure on each silica particle.\r\n* This process is called **solid phase sintering.**\r\n\r\n## Vitrification\r\n* ![](/assets/images/2021-09-12-09-41-09.png)\r\n* After solid phase sintering, there might be some pores that are still left which may allow water to pass.\r\n* Thus, this next phase is crucial to cover all the pores.\r\n* In order to lower the melting point of silica, flux is added.\r\n* Flux is **glassy** in nature. In fact, vitri means glass case.\r\n* Flux are oxides of metals like calcium, sodian, magnesium, lead, potassion, manganese etc.\r\n* Now, these oxides (in power form) melt at 1600 degrees and form a liquid.\r\n* This liquid flows into the pores and solidifies there making the clay fully impervious.\r\n* This process is called **liquid phase sintering.**\r\n* **Here, note that silica particles are not melting. It is the flux that is melting.**\r\n\r\n## Glazing\r\n* ![](/assets/images/2021-09-12-09-52-17.png)\r\n* It beautifies clay by giving it a feel of glass.\r\n* **Vitreous means glassy.**\r\n\r\n## Summary of stages of clay\r\n* Quartz inversion\r\n* Solid phase sintering\r\n* Liquid phase sintering (vitrification).\r\n* This turns clay to ceramics.\r\n* Glaze\r\n\r\n## Extra Points\r\n* Melting point of silica = 2000 degress.\r\n\r\n---\r\n\r\n## Wood\r\n* This is an organic material and is found in nature.\r\n* Made from cellulose and bio-organisms can decay these materials.\r\n* Carving would be easier on wood rather than that on stone because wood is way more softer than stone.\r\n* Wood is higly porous.\r\n\r\n## Surfaces of wood\r\n* Inlay\r\n    * Insertion of stone by making a fine cut in the wood.\r\n* Paint\r\n* Varnish\r\n* Gilded\r\n    * Gold leaf is applied with plaster like substance (to provide adhesiveness to gold leaf) to give wood a appearance of metal.\r\n* Lacquer\r\n    * Dip the material in lac which develop aesthetic cracks.\r\n\r\n## Important timbers\r\n* ![](/assets/images/2021-09-12-10-10-01.png)\r\n\r\n## Types of wood\r\n* ![](/assets/images/2021-09-12-10-10-47.png)\r\n* ![](/assets/images/2021-09-12-10-11-49.png)\r\n\r\n## Components of wood\r\n* ![](/assets/images/2021-09-12-10-12-21.png)\r\n* If all the water is lost from the wood, then the wood would shrink and vice versa.\r\n* The exansion and contraction takes place in wood to a great extent. This is because wood is made of cellulose.\r\n* This changes the shape of wood and this process if called warping of wood.\r\n* Polysaccharides gives wood its woody appearance. They are just mixture of sugar.\r\n* Hemicellulose is branched chain and cellulose is composed of mixture of unbranched chain. Former is a mixture of sugar whereas latter is the mixture of glucose.\r\n* Lignin acts as a binding agent and gives wood its hardness and softness. This means that if lignin is less than bonding is less and vice versa.\r\n* **Phenol is aromatic alcohol.**\r\n","url":"https://sameep1234.github.io/notes/notes\\dd08EZsqMHXmISQ1jQ0IF.html","relUrl":"notes\\dd08EZsqMHXmISQ1jQ0IF.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Heritage Conservation.Lecture 6","content":"\n\r\n# Steel and Ceramics\r\n\r\n## Stainless Steel\r\n* ![](/assets/images/2021-09-11-10-25-39.png)\r\n* Chromium oxide layer is impervious layer. This means that chromium layer is non-porous.\r\n* If there is a small scratch in steel objects, then the chromium oxide layer is ripped off and the inner (iron) metal is exposed.\r\n* This is the place where you may see corrosion in steel objects.\r\n* Bidriware\r\n    * ![](/assets/images/2021-09-11-10-31-28.png)\r\n    * Made using zinc, copper and silver.\r\n    * Zinc and silver provide silvery appearance and copper provides a bit of yellow appearance.\r\n    * This black layer appears because of alloy of zinc and copper. Silver is very low in quantity.\r\n    * First zinc and copper is melted and then the object is dipped in copper sulphate solution to obtain a blackish color.\r\n    * This black is temporary.\r\n    * Now, with metallic stylus, designs are engraved. It is a very sharp metallic point/tool.\r\n    * Then, they take silver wire and hammer it in those grooves and thus this silver design is made. This is called silver inlay.\r\n    * Now, to smoothen the surface, it is polished. With regorous polishing, all the temporary black goes away and the entire silvery surface turns white.\r\n    * In final preparation, **mud of bidar** + water + dilute ammonium chloride and a dough is made and then you rub this object.\r\n    * By doing this, all the zinc area becomes permanent black.\r\n    * Silver does not become black because silver is less reactive then zinc and hence does not get converted to black color.\r\n    * **Silver only reacts with sulphide. This is chloride.**\r\n\r\n## Ceramics\r\n> Made of clay. It is neither metallic nor organic. Clay is the final product of weathering of rock.\r\n\r\n* Clay is basically silica and alumina. (SiO2 and Al2O3).\r\n* When you introduce water, clay becomes really soft and it disintegrates easily.\r\n* To overcome this problem, we heat the clay at very high temperature and as a result, it becomes very hard and dense.\r\n* So basically, on heating we are removing water and hence it looses its plasticity.\r\n* Terracotta army\r\n    * ![](/assets/images/2021-09-11-11-02-41.png)\r\n    * Terra means earth\r\n    * Terracota is basically fired clay.\r\n    * Brick is made of terracota.\r\n* BASIC Materials\r\n* Stucco is made from unbaked clay or sunbaked clay. It is not fired but is sunbaked and hence becomes crucial to study.\r\n* It is majorly found in Gandhara, Afghanistan.\r\n\r\n## Types of clay\r\n* ![](/assets/images/2021-09-11-11-15-46.png)\r\n* Terracota comes under erathenware. It gets red color due to inclusion of iron.\r\n* Bone china is a type of porcelain and fired at 1350 degrees and is mostly white in color.\r\n* White colored clay called kaolin is used to make bone china.\r\n\r\n## Stages of clay\r\n* ![](/assets/images/2021-09-11-11-18-04.png)\r\n* Bisuqe is also called as bicuit firing and is the first firing stage.\r\n\r\n## Extra Points\r\n* When you keep on heating/firing any material, the ultimate color it will emit will always be white.\r\n* This happens because of the stages of heating. In the first stage, the carbon layer is burnt and is black in color.\r\n* Now on further increasing the temperature, you will see orange color and then becomes red and then it becomes ash colored (grey) and finally becomes white.\r\n","url":"https://sameep1234.github.io/notes/notes\\eANXlaxNHdusvpeFWyqXn.html","relUrl":"notes\\eANXlaxNHdusvpeFWyqXn.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Heritage Conservation.Lecture 5","content":"\n\r\n# Patina and Metal Oxide\r\n\r\n## Patina Continued.\r\n* Any layer that is formed on the metal surface is called patina.\r\n* Layers\r\n    * Oxide\r\n    * Carbonate\r\n    * Sulphate\r\n    * Acetate\r\n    * Chloride\r\n* Those patina which is protective in nature is called noble patina and those that are corrosive in nature are called malignant patina.\r\n* Cuprous oxide (Brown) and cupric oxide (Black) is noble patina as they do not react and protect copper metal.\r\n* Greenish layer deposited on copper is carbonate layer.\r\n    * It is also known as malachite.\r\n    * **Noble patina** but in very rare cases it is malignant patina.\r\n* **Malignant Patina (Bronze Disease)**\r\n    * Bronze metals form chloride layer (atacamite and nantokite).\r\n    * ![](/assets/images/2021-09-11-00-05-28.png)\r\n      ![](/assets/images/2021-09-11-00-06-37.png)\r\n\r\n## Malachite and Azurite formation\r\n* ![](/assets/images/2021-09-10-23-50-53.png)\r\n* Two forms of carbonate layer.\r\n* Carbonate ions are formed when carbon dioxide is dissoved in water.\r\n* We may also get carbonic acid in a similar fashion.\r\n* On scratching a corroded metal, we get pure metal inside it. Now that in turn acts as anode and the corroded layer acts as cathode.\r\n* Then follow the above figure.\r\n* Oxidation number is the charge an element has in a compound/molecule.\r\n\r\n> If in the environment, if you have a lot of CO2, then what will you get? (Azurite or Malachite)\r\n* We will get azurite as in more CO2 concentrated areas, it is a stable carbonate layer.\r\n\r\n## Iron Oxide\r\n* Nature of Fe2O3 is unstable (doubtfull) and porous\r\n* This is malignant patina.\r\n* Because of its porosity, the inner core of the metal is always exposed and hence is called malignant patina.\r\n* **Startling fact**\r\n    * Qutub Minar is made of iron.\r\n    * Built about 1500-1600 years back.\r\n    * But still, there is no rusting.\r\n    * **In iron, a little bit of phosphorous is mixed and it forms a complex layer by reacting with hydrogen and oxygen.**\r\n    * Hence, the iron pillar does not get corroded.\r\n    * Now, phosphorous and sulphur have tendency to crack any metal (even iron) if it remains inside that metal.\r\n    * Hence, when iron is heated to 1500 degrees, phosphorous and sulphur escape and iron is protected.\r\n    * Then, with continuous hammering, the remaining phosphorous comes out on the surface of the metal and hence forms a protective layer.\r\n    * To make the pillar, a little bit of zinc was also added in the bottom/base of the pillar.\r\n    * Zinc acts as a **sacrificial anode.**\r\n    * This means that zinc will corrode and protect iron.\r\n","url":"https://sameep1234.github.io/notes/notes\\kmZO7FrAMH0Te6ZwwgzHv.html","relUrl":"notes\\kmZO7FrAMH0Te6ZwwgzHv.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Heritage Conservation.Lecture 4","content":"\n\r\n# Electrochemical series and more on metals\r\n\r\n* It is the disordered state that is stable state and ordered state is the active one.\r\n* This is because, you put some energy in the disordered state to make it in order.\r\n* Every metal, from the moment extraction is done, it wants to go to its ore form.\r\n* When a metal is corroded, rust hinders the property of metal. Thus, we can say that the non-metallic quality of metal increases.\r\n* **Magnetic effect** is used to detect how much **core metal** is left and how much **rust** is formed.\r\n\r\n## Electrochemical Series\r\n* ![](/assets/images/2021-09-10-22-24-30.png)\r\n* The metals here are placed according to their decreasing reactivity. Hence, going down the electrochemical series, the reactivity will decrease.\r\n* Thus, gold is the least reactive metal and hence it is sometimes also called as noble metal.\r\n* It basically does not react with anything. It only dissolves in aqua regia.\r\n* Pure copper does not rust/corrode easily and hence they are used for electrical installations. Another reason for that use is that it is an excellent conductor of electrivity.\r\n* ![](/assets/images/2021-09-10-22-29-17.png)\r\n* Oxidation \r\n    * When a metal looses electron. \r\n    * The power to loose electron is called oxidation potential.\r\n    * Lesser reactive metals have lower oxidation potential than more reactive metals.\r\n* Reduction\r\n    * When a metal gains electron.\r\n    * The power to gain electron is called reduction potential.\r\n    * Lesser reactive metals have higher reduction potential than more reactive metals.\r\n* Reducing agent is a more reactive metal that displaces a metal from its sulfate state and vice versa.\r\n* In metallic terms, oxidation is also called corrosion.\r\n\r\n## Galvanic Cell\r\n* Also known as Voltaic cell or Daniel cell or Electrochemical cell\r\n* ![](/assets/images/2021-09-10-22-39-33.png)\r\n* Electrode is a solid electrical conductor that carries a current. Two types include anode and cathode.\r\n* Zinc acts as anode and copper acts as cathode.\r\n* Electrolyte (Salt Bridge) is of vital importance as it completes the circuit for current to flow.\r\n* Now once the circuit is complete and current starts flowing, zinc begins to loose electrons.\r\n* This is because, copper has more reducing potential and as a result has a greater power to pull the electrons.\r\n* So in time, Zinc gets converted to zinc sulfate and copper sulfate gets converted to pure copper.\r\n* **To summarize, less reactive metal will get deposited and more reactive metal will get used up during electrolisis.**\r\n* Thus, to preserve a less reactive metal, just bring a more reactive metal in contact with the less reactive metal. This process is called anodic preferential corrosion or anodic sacrificial protection.\r\n* Similarly, if a more reactive metal is to be protected than we coat that metal with a less reactive metal and this process is called cathodic protection. (Used mainly for protecting silver by coating gold on it).\r\n\r\n## Tarnising of silver\r\n* Silver is almost a noble metal and hence it is very difficult for it to corrode.\r\n* ![](/assets/images/2021-09-10-22-53-23.png)\r\n* Color is black.\r\n* Oxygen can not harm silver but sulfur can.\r\n* Only on the surface.\r\n* We preserve tarnished silver to preserve silver and it also represent age and authenticity in silver artifacts.\r\n* Patina is just a layer and surface discoloration. It is a surface phenomena.\r\n* Silver sulfide layer is called as noble patina because it is non reactive.\r\n* Oxide layer on broze is blackish in color or called as blackish patina.\r\n* Cuprous oxide layer is brownish in color and later it will change to cupric oxide which is more stable and is blackish in color.\r\n\r\n## Types of oxide\r\n* Unstable metal oxide - Gold, Silver and Platinum\r\n* Stable metal oxide - Copper, Tin and Lead\r\n* Volatile metal oxide - Molebdenum\r\n* Porous metal oxide - Sodium, Potassium, Manganese and iron.\r\n","url":"https://sameep1234.github.io/notes/notes\\4gfzYPUYc62svMT1nlhT5.html","relUrl":"notes\\4gfzYPUYc62svMT1nlhT5.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Heritage Conservation.Lecture 3","content":"\n\r\n# Hardness of Stones and Introduction to metals\r\n\r\n## Mohs Hardness Scale\r\n* ![](/assets/images/2021-09-10-14-42-38.png)\r\n* Gypsum\r\n    * Used as one of the raw components of cement and its called calcium sulphate.\r\n    * It is really soft.\r\n* Calcite\r\n    * Chief component of limestone and marble.\r\n    * It is called Calcium Carbonate\r\n* Quartz\r\n    * It is very hard.\r\n    * Used in sandstone and granite\r\n    * Hence, these materials are also hard.\r\n    * It is called silicon dioxide.\r\n    * Harder than Gypsum and Calcite as evident from the above figure.\r\n    * Artifacts of sandstone have different colors like shown in below image.\r\n        * ![](/assets/images/2021-09-10-17-05-34.png)\r\n    * This means that if **iron content** is more, then it **gives red** color and if **clay content** is more, then it **gives yellow** color.\r\n    * The red color of the red fort is red because of ferruginous sandstone. This iron gets rusted and gives red color.\r\n    * The yellow colored sandstone is called as argilesious sandstone.\r\n\r\n## Use of stones in monuments\r\n* Humanyun's Tomb, Delhi\r\n    * ![](/assets/images/2021-09-10-17-09-03.png)\r\n    * Made using sandstone (red colored) and marble (white colored).\r\n* Taj Mahal, Agra\r\n    * ![](/assets/images/2021-09-10-17-10-02.png)\r\n    * Again made using sandstone (main platform) and brick and marble (outer/external padding).\r\n    * Iron slabs/rod are used to padd marble and hence we can see some rusting where iron is inserted.\r\n\r\n* **Note: Sandstone is always at base and marble is at top. Marble is a porous stone.**\r\n\r\n    > Why is it not the reverse?\r\n    * This is because, sandstone is a stronger than marble and hence has the capacity to hold the weight of marble.\r\n* Biwi ka maqbara, Aurangabad\r\n    * ![](/assets/images/2021-09-10-17-16-57.png)\r\n    * Made using a very fine and polished limestone and only 25% marble is used.\r\n\r\n## Extra Points\r\n* Average temperature of venus is 470 degrees.\r\n* Mars surface temperature is -53 degrees.\r\n* Earth's surface temperature earlier was 290 degrees and nowadays it is 15 degrees.\r\n    > What was the climatic condition that led it to cool down?\r\n    * It was covered with Carbon Dioxide, but during formation of limestone, more than 80% of the gas was consumed and thus, the earth's surface temperature cooled.\r\n* During the production of cement, we are reversing the formation of limestone.\r\n* Thus, we are releasing a lot of carbon dioxide.\r\n* Stones used in formation of qutub minar are marble, sandstone and **quartzite.**\r\n* Based on quartizite, Alai Minar in Delhi was made. Originally, it was supposed to be a replica of Qutub Minar with double height, but could not be completed.\r\n* Kailashnath Temple, Ellora is made using Basalt which is extrunious igneous rock formed by volcanic rocks.\r\n* Brihadishwar Temple, Tanjavur is made using granite.\r\n* **Anything that has to migrate from one surface to other surface, the other surface must be more porous compared to the first one.**\r\n\r\n# Metals\r\n* Most of the metals are subject to corrosion due to atmospheric moisture.\r\n* Metals used in heritage\r\n    * ![](/assets/images/2021-09-10-17-37-31.png)\r\n    * These metals are placed in the order of their corrsion resistance and hardness.\r\n    * **There is a mistake in the photo. Zinc is more corrosive than iron. Hence swap these two.**\r\n* Alloys used in heritage\r\n    * ![](/assets/images/2021-09-10-17-39-29.png)\r\n    * First coin was prepared from electrum. It is also called green gold if available naturally, but artificially made electrum is called white gold because some amount of palladium.\r\n    * Brass will corrode first as compared to bronze because it has amounts of zinc.\r\n    * Broze is made from 90% copper and 10% tin. Similar is the case for brass but with its respective metals.\r\n    * Pewter will appear like silver, but that silvery finish is mainly due to tin and little bit of silver.\r\n\r\n## Extra Points\r\n* Iron is more abundant than copper in earth's crust.\r\n* But still copper age was before iron.\r\n* This is because, melting point of iron is much more than that of copper and hence, it was difficult to make iron objects.\r\n* Gold only dissolves in aqua regia only.\r\n* Some metal occur in natural form and other in ore form.\r\n* Stable state of any metal is its rust form and the most active when it is extracted from ore.\r\n* This active state is achieved by supplying energy to extract it from its ore.\r\n","url":"https://sameep1234.github.io/notes/notes\\yz8zHVdRmNG9ZiqQdYnuU.html","relUrl":"notes\\yz8zHVdRmNG9ZiqQdYnuU.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Heritage Conservation.Lecture 2","content":"\n\r\n# Observing sculptures and studying stones\r\n\r\n### Sorry for the inconvinience but please refer this [site](https://aneri12345.github.io/Personal-Log/notes/PnbqLSRQuiLSmhmofal8q.html) for lecture 2 notes.\r\n","url":"https://sameep1234.github.io/notes/notes\\Ggrppf3E3epj19rPtzUTY.html","relUrl":"notes\\Ggrppf3E3epj19rPtzUTY.html"},{"doc":"Lecture 15","title":"Lecture 15","hpath":"courses.Semester 5.Heritage Conservation.Lecture 15","content":"\n\r\n# Paintings (Cont.)\r\n\r\n> How to classify an oil as drying or non-drying oil?\r\n\r\n> Check for iodine number. Iodine number greater implies it is drying oil. Iodine number shows mow many glycides are unsaturated. Thus, more unsaturated, more drying and vice versa.\r\n\r\n## Acrylic Painting\r\n* ![](/assets/images/2021-10-17-14-43-34.png)\r\n* It dries very quickly.\r\n* It dired to touch in 2 hours and complete drying happens in 1-2 days.\r\n* It dries by evaporation of water.\r\n* It contains a synthetic rasin called acrylic rasin and vehicle is water.\r\n* Acrylic rasin is very similar to oil and hence it does not easily mix with water.\r\n* Thus, we add emulsifier to bind oil and water.\r\n* Further, we add surfactants. It has polar (head) and non polar (tail) ends.\r\n* The water is binded to head and oil to tail and a suspension is created.\r\n* But the paint formed is can not be used to paint because the microorganisms can grow in the suspension.\r\n* Thus, we add deformer which is a dispersing agent preventing the microorganisms to grow.\r\n\r\n## Fresco Painting\r\n* ![](/assets/images/2021-10-17-14-49-39.png)\r\n* It is majorly used in wall paintings.\r\n* Types\r\n    * Fresco Buono\r\n        * Freshly applied\r\n        * Binder/adhesive is not added.\r\n        * But to bind, they prepare a lime plaster everyday and dry powders are applied to it when it is wet.\r\n        * **Pigment is applied when the wall (lime plastered) is wet.**\r\n        * **One day's work/job reference here.**\r\n    * Fresco Secco\r\n        * Dried\r\n        * **Pigment is applied on dry plaster.**\r\n        * Pigment is mixed in lime water and applied on dry plaster.\r\n    * ![](/assets/images/2021-10-17-14-53-26.png)\r\n\r\n## Extra Points\r\n* Function of binder is two folded.\r\n* It binds the pigment powders together.\r\n* It makes the paint adhere onto the painted surface.\r\n* Function of vehicle is to give the binder flow which in turn provides the flow to the binder.\r\n* The oil in oil painting has to be such that it can dry and binds the paint.\r\n* Musturd oil, olive oil and groundnut oil are  one such oil that **can't be used.**\r\n* Drying oil includes linseed oil, poppyseed oil and walnut oil.\r\n* Drying of oil does not mean evaporation, it means that the oil is oxidized and cross linked.\r\n* Oxidation makes the oil dry and cross linking makes the oil hard.\r\n* Cross linking simply means that the molecules of oil get tangled into one another.","url":"https://sameep1234.github.io/notes/notes\\yUHUqQ9obIAjDJt3cKHqz.html","relUrl":"notes\\yUHUqQ9obIAjDJt3cKHqz.html"},{"doc":"Lecture 14","title":"Lecture 14","hpath":"courses.Semester 5.Heritage Conservation.Lecture 14","content":"\n\r\n# Paintings (Cont.)\r\n\r\n## Types of paint\r\n* ![](/assets/images/2021-10-17-12-16-38.png)\r\n\r\n## Encaustic Painting\r\n* ![](/assets/images/2021-10-17-12-17-24.png)\r\n* Made using pigment + wax + heated gum/iron.\r\n\r\n## Watercolor Painting\r\n* ![](/assets/images/2021-10-17-12-18-50.png)\r\n* Pigment and Binder are very low and solvent/vehicle (water) is very high.\r\n\r\n## Tempera Painting\r\n* ![](/assets/images/2021-10-17-12-20-06.png)\r\n\r\n## Goache Painting\r\n* ![](/assets/images/2021-10-17-12-23-27.png)\r\n\r\n## Difference between the three\r\n* ![](/assets/images/2021-10-17-12-30-49.png)\r\n\r\n## Casein Painting\r\n* ![](/assets/images/2021-10-17-12-36-12.png)\r\n\r\n## Oil Painting\r\n* ![](/assets/images/2021-10-17-12-36-33.png)\r\n* Pigment is earth colors, binder and vehicle is oil.\r\n\r\n## Extra Points\r\n* Varnish acts as a protective layer and it enhances the colors also.\r\n* Thus, if the dusts settles on painting, we remove the varnish layer and recoat it with varnish.\r\n* This way the paintings are preserved for a long time.\r\n* Sometimes binder acts as both binder and vehicle to let the paint flow.","url":"https://sameep1234.github.io/notes/notes\\sglsQHuYReeKdDYFp7ssU.html","relUrl":"notes\\sglsQHuYReeKdDYFp7ssU.html"},{"doc":"Lecture 13","title":"Lecture 13","hpath":"courses.Semester 5.Heritage Conservation.Lecture 13","content":"\n\r\n# Textiles (Cont.)\r\n\r\n## Assignment Details\r\n* Individual Assignment\r\n    * 10 Marks\r\n    * Take any object from home and write properties and problems that you observe.\r\n* Group Assignment\r\n    * 20 Marks\r\n    * 2 people in a group\r\n    * Visit any nearby museum, see the gallery and write a bried report about the display, materials and the environment (microclimate - interior environment)\r\n    * Look at dust and durt\r\n    * Lighting conditions\r\n    * Humidity/Relative Humidity level\r\n    * Access to pollution\r\n    * Access to pests/insects etc\r\n* Deadline is October 31, 2021\r\n* Write small, precise and not copied.\r\n\r\n## Physical Properties of Silk\r\n* ![](/assets/images/2021-10-17-07-32-00.png)\r\n* Most of the natural fibers are not strong but silk is.\r\n* This is because it is a filament fibre and thus there are no joints.\r\n* Pure silk is raw silk obtained directly fromthe silk worm.\r\n* Spun silk is left over silk or damanged fibres.\r\n* Silk is protien based fibre. Thus, it has a protien called serisin which is a type of gum.\r\n* Thus, silk is degummed to protect it from pests.\r\n* As a result, it looses weight and weight is added by adding sugar or tanins.\r\n* It becomes weighted silk.\r\n\r\n## Chemical Properties of Silk\r\n* ![](/assets/images/2021-10-17-07-37-27.png)\r\n\r\n## Physical Properties of Wool\r\n* ![](/assets/images/2021-10-17-07-38-26.png)\r\n\r\n## Chemical Properties of Wool\r\n* ![](/assets/images/2021-10-17-07-39-13.png)\r\n\r\n## Physical Properties of Rayon\r\n* ![](/assets/images/2021-10-17-07-40-01.png)\r\n* **Rayon is also called as regenerated cellulose. It is also pure cellulose.**\r\n* It is a cheaper version of cotton.\r\n* You take cellulose and dissolve in cupra ammonium hydroxide solution.\r\n* Then we add sulphuric acide to regenerate the cellulose. We initially get a blue color because of copper present in cupra ammonium hydroxide.\r\n* It is also called viscose rayon and cupra ammonium rayon.\r\n* **Cotton is still stronger than rayon even though rayon is filament fibre.**\r\n* This is because in rayon most part is amorphous whereas in cotton, most part is crystalline.\r\n\r\n___\r\n\r\n# Paintings\r\n* Paintings come in the category of composite materials.\r\n* It is a combination of inorganic and organic materials.\r\n* Structure of canvas painting\r\n    * ![](/assets/images/2021-10-17-07-48-55.png)\r\n* Paint is composed of three materials\r\n    * Pigments - Powder form obtained from earth colors, minerals, vegetables etc.\r\n    * Binder - Add some glue\r\n    * Solvent (Generally water) - This we call as vehicle as it adds **flow** to the paint.\r\n\r\n## Pigment\r\n* ![](/assets/images/2021-10-17-07-56-12.png)\r\n* Inorganic Pigments\r\n    * ![](/assets/images/2021-10-17-07-56-41.png)\r\n\r\n## Binder\r\n* ![](/assets/images/2021-10-17-07-57-42.png)\r\n\r\n## Solvent\r\n* ![](/assets/images/2021-10-17-07-58-18.png)","url":"https://sameep1234.github.io/notes/notes\\Jr0E0JMLiqPc3xhGWew0R.html","relUrl":"notes\\Jr0E0JMLiqPc3xhGWew0R.html"},{"doc":"Lecture 12","title":"Lecture 12","hpath":"courses.Semester 5.Heritage Conservation.Lecture 12","content":"\n\r\n# Textiles\r\n\r\n## Properties\r\n* ![](/assets/images/2021-10-16-21-58-52.png)\r\n* ![](/assets/images/2021-10-16-21-59-10.png)\r\n* **Note that the only natural fibre available as filament fibre is silk.**\r\n* **Most of the natural fibres are staple except silk which is a filament fibre.**\r\n* ![](/assets/images/2021-10-16-22-21-12.png)\r\n* As it can be seen filament fibres are stronger than staple fibres.\r\n* Further, the filament fibres are smooth (because there are no joints) whereas staple fibers are rough (because they have several joints).\r\n* Thus, almost all synthetic clothes are smooth.\r\n* ![](/assets/images/2021-10-16-22-23-47.png)\r\n* Cotton has high wrinkles whereas wool does not.\r\n* ![](/assets/images/2021-10-16-22-28-46.png)\r\n* ![](/assets/images/2021-10-16-22-30-41.png)\r\n\r\n## Difference between cellulose fibres and synthetic fibres\r\n* ![](/assets/images/2021-10-16-22-36-20.png)\r\n* ![](/assets/images/2021-10-16-22-40-32.png)\r\n\r\n## Physical Properties of Cotton\r\n* ![](/assets/images/2021-10-16-22-44-02.png)\r\n\r\n## Chemical Properties of Cotton\r\n* ![](/assets/images/2021-10-16-22-47-06.png)\r\n\r\n## Extra Points\r\n* Wool has great capacity to hold water. In fact it is greater than cotton.\r\n* Cotton is a good conductor of heat and we wear it in summer so that all the heat is transfered/escapes to the atmosphere. Wool has vice versa effect.\r\n* **All textiles have high absorption property because it is made of cellulose and hence is hydrophilic**.\r\n* Cotton is quite resistant to alkalis even to strong ones whereas wool is highly resistant to acids.\r\n* Thus for wool, you want acidic conditions whereas for cotton you want alkaline conditions and hence they are not washed/cleaned together.","url":"https://sameep1234.github.io/notes/notes\\7ZVjK5LRU74i8a31vJnOe.html","relUrl":"notes\\7ZVjK5LRU74i8a31vJnOe.html"},{"doc":"Lecture 11","title":"Lecture 11","hpath":"courses.Semester 5.Heritage Conservation.Lecture 11","content":"\n\r\n# Paper (Cont.)\r\n\r\n## Bleaching (Cont.)\r\n* Oxidising and reducing bleaching agents.\r\n* Chromophoric groups are the functional groups that impart color to paper.\r\n* Bleaching agent breaks down these groups by changing the double bond of chromophoric groups into single bond.\r\n* They change the optical properties of chromophoric groups.\r\n* As a result, the paper becomes white.\r\n\r\n## Sizing and Loading\r\n* ![](/assets/images/2021-10-16-18-40-57.png)\r\n* These process gives dimensional stability to paper.\r\n* Sizing (a material that is amphiphilic) has two purposes\r\n    * Blocks the pores in paper\r\n    * Does not let the ink to pass through\r\n* Loading material is added to increase the weight of paper.\r\n* Chalk is one of the loading material. \r\n* But on adding chalk it provides glossiness to the paper.\r\n* Thus, to remove it we need some other chemical process.\r\n* Optical brightning agents are used for increasing the brightness of the paper.\r\n\r\n## Inks\r\n* Carbon ink\r\n    * Lamp Black ink or soot of lamp.\r\n    * Collect the carbon soot from a burning lamp and use it as ink.\r\n    * Oil is also there which binds the ink onto the paper.\r\n* Iron gall ink\r\n    * ![](/assets/images/2021-10-16-18-52-36.png)\r\n    * Chemical name of iron gall ink is ferrous tannate.\r\n    * It is soluble in water but when it is exposed to atmospheric oxygen it is converted to ferric tannate.\r\n    * This is permanent insoluble in water. It is very dark.\r\n    * Problem with this ink is that it contains iron and is prone to rusting.\r\n    * Thus, ghost writing occurs (writing appearing on other side of paper).\r\n    * Calcium phytate treatment is one solution to prevent further rusting of iron gall ink.\r\n    * **It is used in ancient manuscript.**\r\n\r\n## Extra Points\r\n* Cellulose is hydrophilic.\r\n* Absorption rate for paper (cellulose)\r\n    * ![](/assets/images/2021-10-16-21-42-08.png)\r\n    * Monomer of cellulose is made of 6 hydroxyl ion.\r\n    * When it comes in contact of hydrogen, it easily forms water and thus it is hydrophilic.\r\n\r\n___\r\n\r\n# Textiles\r\n* Generally, we see cotton, silk, linen, nylon, khadi and wool thread in textiles.\r\n* Cotton, Linen and Silk are natural soft threads.\r\n* Silver, gold and copper threads are metallic hard threads.\r\n* Both these types are constantly in friction and hence they wear away.\r\n* Metallic thread are heavy and thus damage both of them (natural and metallic thread).","url":"https://sameep1234.github.io/notes/notes\\qK3HNhqkkJAoWNm2cVoX7.html","relUrl":"notes\\qK3HNhqkkJAoWNm2cVoX7.html"},{"doc":"Lecture 10","title":"Lecture 10","hpath":"courses.Semester 5.Heritage Conservation.Lecture 10","content":"\n\r\n> The following lecture was dedicated to quiz 1 discussion and hence there is no notes of it.\r\n\r\n","url":"https://sameep1234.github.io/notes/notes\\tOqzvpjx9ICNAMlD5ltwc.html","relUrl":"notes\\tOqzvpjx9ICNAMlD5ltwc.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Heritage Conservation.Lecture 1","content":"\n\r\n# Introduction to Conservation\r\n\r\n### Sorry for the inconvinience but please refer this [site](https://unread.parthshah.ml/notes/RS0pMLTtuIC0G6hKGBSil.html) for lecture 1 notes.\r\n","url":"https://sameep1234.github.io/notes/notes\\KfgFXSYQDcvTjHz7W9w9R.html","relUrl":"notes\\KfgFXSYQDcvTjHz7W9w9R.html"},{"doc":"Embedded Systems","title":"Embedded Systems","hpath":"courses.Semester 5.Embedded Systems","content":"\n\r\n","url":"https://sameep1234.github.io/notes/notes\\a1PatlsCiz7PYsL111lFm.html","relUrl":"notes\\a1PatlsCiz7PYsL111lFm.html"},{"doc":"Midsem Cheatsheet","title":"Midsem Cheatsheet","hpath":"courses.Semester 5.Embedded Systems.Midsem Cheatsheet","content":"\n\r\n\r\n## Important Tables\r\n## TCCR0\r\n* ![](/assets/images/2021-10-03-12-04-03.png)\r\n## TCCR1A\r\n* ![](/assets/images/2021-10-02-15-26-54.png)\r\n## TCCR1B\r\n* ![](/assets/images/2021-10-02-15-27-23.png)\r\n## TCCR2\r\n* ![](/assets/images/2021-10-02-15-28-48.png)\r\n## Interrupt Vector Table\r\n* ![](/assets/images/2021-10-02-15-34-36.png)\r\n## TIMSK **(FOR INTERNAL INTERRUPT)**\r\n* ![](/assets/images/2021-10-02-15-32-09.png)\r\n## MCUCR **(FOR EXTERNAL INTERRUPT MODE)**\r\n* ![](/assets/images/2021-10-02-15-30-39.png)\r\n* ![](/assets/images/2021-10-02-15-30-58.png)\r\n## GICR\r\n* ![](/assets/images/2021-10-03-11-40-27.png)\r\n* Interrupt Addresses\r\n    * ![](/assets/images/2021-10-02-15-32-50.png)\r\n## Pull Up\r\n* ![](/assets/images/2021-10-03-13-44-02.png)\r\n\r\n## Important Circuits\r\n* AVR Port Pins\r\n    * ![](/assets/images/2021-10-02-16-46-14.png)\r\n\r\n## Hex To Decimal Code\r\n* ![](/assets/images/2021-10-03-11-46-00.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\ZgP9mkhDoBGKpzGvemxdD.html","relUrl":"notes\\ZgP9mkhDoBGKpzGvemxdD.html"},{"doc":"Lecture 8","title":"Lecture 8","hpath":"courses.Semester 5.Embedded Systems.Lecture 8","content":"\n\r\n# 7 Segment LED and Intro to LCD\r\n\r\n> ![](/assets/images/2021-10-18-11-18-49.png)\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nint main()\r\n{\r\n    DDRA = DDRB = 0xFF; // Common Cathode PORTA output\r\n    while(1)\r\n    {\r\n        PORTA = 0x77; // Display A\r\n        PORTB.b0 = 1; // Enable pin\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\n> ![](/assets/images/2021-10-18-11-28-58.png)\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nint main()\r\n{\r\n    DDRA = DDRB = 0xFF;\r\n    int arr[] = {0x90, 0x80, 0xF8, 0x82, 0x92, 0x99, 0xB0, 0xA4, 0xF9, 0xC0}\r\n    int i;\r\n    while(1)\r\n    {\r\n        PORTB.b0 = 1;\r\n        for(i=0;i<10;i++)\r\n        {\r\n            PORTA = arr[i];\r\n            delay_ms(1000);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\n# LCD's\r\n* Pin Position\r\n    * ![](/assets/images/2021-10-18-11-46-36.png)\r\n* Connections with AVR\r\n    * ![](/assets/images/2021-10-18-11-47-39.png)\r\n* Internal Components\r\n    * ![](/assets/images/2021-10-18-11-49-03.png)\r\n* Some important pins\r\n    * ![](/assets/images/2021-10-18-11-50-21.png)\r\n* Pin5 - R/W (Read/Write)\r\n    * 0 means write and 1 means read\r\n* Pin6 - Enable\r\n    * High to low means latch the data.\r\n    * Mimimum pulse width 450ns\r\n* Pin7 - OR DB7\r\n    * 1 means send new information and 0 means not sending new information.\r\n* C program declaration\r\n    * ![](/assets/images/2021-10-18-11-54-05.png)\r\n* C program for LCD Commands\r\n    * ![](/assets/images/2021-10-18-11-56-02.png)\r\n* Table for lcd commands\r\n    * ![](/assets/images/2021-10-18-11-57-33.png)\r\n\r\n## Some part left","url":"https://sameep1234.github.io/notes/notes\\dcaLCQa27jweR8cfy2wn8.html","relUrl":"notes\\dcaLCQa27jweR8cfy2wn8.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Embedded Systems.Lecture 7","content":"\n\r\n# AVR Interfacing with 7 segment LEDs\r\n\r\n## LEDs\r\n* ![](/assets/images/2021-10-18-09-21-36.png)\r\n* Basically, whenever an electron tranverse from lower energy state to higher, it requires energy.\r\n* Whenever it traverse from higher energy state to lower, it emits energy in the form of light.\r\n* This is basic principle of LEDs.\r\n* We use semiconductors for it. It has some bandgaps which emit light of particular frequency and as a result emit light of particular color.\r\n* Connections\r\n    * ![](/assets/images/2021-10-18-09-25-22.png)\r\n\r\n## 7-Segment LEDs\r\n* Common anode\r\n    * ![](/assets/images/2021-10-18-09-26-44.png)\r\n    * Logic 0 means that portion of led will be turned on.\r\n* Common Cathode\r\n    * ![](/assets/images/2021-10-18-09-29-44.png)\r\n    * Logic 1 means that portion of led will be turned on.","url":"https://sameep1234.github.io/notes/notes\\82tJDeMQ7mA41HTOrG90B.html","relUrl":"notes\\82tJDeMQ7mA41HTOrG90B.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Embedded Systems.Lecture 6","content":"\n\r\n\r\n# External Hardware Interrupts\r\n\r\n## Activation\r\n* ![](/assets/images/2021-09-29-10-43-25.png)\r\n* Now to activate external hardware interrupt, we use GICR and the first 3 LSB side bits should be set according to our use case and in correspondence with the image above.\r\n\r\n## Features\r\n* ![](/assets/images/2021-09-29-10-45-07.png)\r\n* When we set the interrupts value to be 00, it is also called as **level-triggered interrupt.**\r\n* **Note that 00 corresponds to lower level interrupt which means on connecting group or providing 0, this interrupt will get triggered and on connecting Vcc or providing 1, this interrupt will be disabled.**\r\n* Interrupt 2\r\n    * ![](/assets/images/2021-09-29-10-50-01.png)\r\n    * **Note that there is only one bit for interrupt 2 and hence only 2 possible combinations ar shown in the image above.**\r\n* Now for example, lets say we want to make INT0 interrupt on falling edge triggered. For this, we choose the value of MCUCR = 0x02.\r\n* For INT2, rising edge trigger, write MCUCSR = 0x40. We made D6 to be 1 because the MCUCSR has PIN6 dedicated to interrupt 2.\r\n* **Make sure that if INT2 is asked, you change D6 of MCUCSR and if INT1 or INT0 is asked, you chance (D2, D3) and (D0, D1) respectively.**\r\n\r\n## GIFR\r\n* General Interrupt Flag Register.\r\n* ![](/assets/images/2021-09-29-11-01-33.png)\r\n* Programmer need not worry of clearing the flag as it will be done automatically.\r\n\r\n## Minimum timing of Interrupt Signal\r\n* Minimum timing of interrupt signal means what should be the minimum time for which the interrupt should last so that it is considered as an interrupt and not as a noise.\r\n* ![](/assets/images/2021-09-29-11-03-22.png)\r\n\r\n## Examples\r\n* ![](/assets/images/2021-09-29-11-07-25.png)\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nint main()\r\n{\r\n    DDRC = 0x08; // Define PortC.3 as output\r\n    PORTD = 0x04; // Interrupt comes here.\r\n    GICR = (1<<INT0); // Enable external interrupt 0\r\n    sei(); // Enables global interrupts\r\n\r\n    MCUCR = 0; // Level triggered mode\r\n    while(1); // Run forever\r\n}\r\n\r\nISR (INT0_vect)\r\n{\r\n    PORTC ^= 0x08; // Toggling whenever INT0 goes low\r\n}\r\n```\r\n## Interrupt Priority\r\n* ![](/assets/images/2021-09-29-11-28-58.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\on61iqE2wZO98Rla5PiI7.html","relUrl":"notes\\on61iqE2wZO98Rla5PiI7.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Embedded Systems.Lecture 5","content":"\n\r\n\r\n# Timer (Cont.) and Interrupt\r\n\r\n## Difference between timer 0 and timer 2\r\n* ![](/assets/images/2021-09-20-11-13-11.png)\r\n* Reference to timer 2 means that flags will also differ.\r\n* We have few more prescaling options availble in timer 2.\r\n* Timer2 can be used in real time counter.\r\n* In timer 2 we use TSOC1 and TSOC2. So connecting these will activate the timer 2.\r\n\r\n## Timer 1\r\n* ![](/assets/images/2021-09-20-11-16-29.png)\r\n* Main difference between timer 1 and timer 0 is that timer 1 is 16 bits.\r\n* We may split the 16 bit into two 8 bit register for HIGH and LOW.\r\n* ![](/assets/images/2021-09-20-11-18-45.png)\r\n    * ![](/assets/images/2021-09-20-11-19-54.png)\r\n* The formula for finding time delay remains the same, **only scaling is required.**\r\n\r\n## Interrupt\r\n* While the microcontroller is waiting for the overflow flag to change, we are not using it. That's not desirable.\r\n* The above mentioned process is called polling method in which we are continuously checking the value of flag.\r\n* Polling vs Interrupt\r\n    * ![](/assets/images/2021-09-20-11-23-47.png)\r\n* ![](/assets/images/2021-09-20-11-24-22.png)\r\n* **Always remember that the timer operations are performed under interrupt service routine whereas the main task other than timer is done in main function.**\r\n* Example\r\n    * ![](/assets/images/2021-09-20-11-25-23.png)\r\n    * Note that we are simultaneously doing two things.\r\n    * Here we are performing bitwise OR operation on DDRB to make PIN 5 as output but it is not necessary. We can simply assign it too like we used to do.\r\n    * Then we assign value of TCNT0 that will run 32 times. Roughly it means it is FF - 32.\r\n    * Then, in the main function, we perform the task of transferring data from PORTD to PINC.\r\n    * Now inside ISR, we reassign value of TCNT0 and toggle the PORTB.\r\n* **Upon reset, all interrupts are disabled and to enable interrupt set MSB of status register to activate all interrupts. This means enabling global interrupts.**\r\n* **Set bits of individual interrupts in the control registers. This means enabling local interrupts.**\r\n* Note that we do not have to manually update the value of status register, we just have to call sei() function in C to enable the global interrupt.\r\n* Similarly to disable global interrupt, we have to call cli() function in C.\r\n* Status Registers\r\n    * ![](/assets/images/2021-09-20-11-33-07.png)\r\n    * Note that D7 is the MSB that represents globally enabling interrupt.\r\n* ![](/assets/images/2021-09-20-11-34-26.png)\r\n* sei() and cli() enables and disables **global interrupt** respectively.\r\n* TIMSK - Timer interrupt mask register\r\n    * Note that right now we are concerned with **internal interrupt** only.\r\n    * ![](/assets/images/2021-09-20-11-36-05.png)\r\n    * This means that if you set the appropriate bit (for us, since we are using timer0, we set TOIE0 = 1).\r\n    * Thus, we write TIMSK = (1<<TCIE0) for enabling **local interrupt.**\r\n* interrupt service routine (ISR) (VECTOR TABLE)\r\n* ![](/assets/images/2021-09-29-07-48-38.png)\r\n* TIMER0_OVF_vect means that we are sending overflow flag as a parameter to ISR which will enable the overflow flag **on interrupt** and set the program counter's value to the corresponding location.\r\n* Now inside ISR, we perform timer related operations i.e reassigning TCNT0 value and toggling PORTB's value for generating square.\r\n\r\n## Steps in executing an interrupt\r\n* ![](/assets/images/2021-09-29-07-53-22.png)\r\n* Interrupt Vector Table\r\n    * ![](/assets/images/2021-09-29-10-24-57.png)\r\n    * After the first step is completed, based on the interrupt given, the program counter goes to that particular vector address as per the above image shown.\r\n\r\n## External Input\r\n* ![](/assets/images/2021-09-29-10-40-57.png)\r\n* The red colored pins are external interrupts.\r\n\r\n## Extra Points\r\n* ![](/assets/images/2021-09-29-07-52-43.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\5G1ouPzQd2x7HeUFhxbiB.html","relUrl":"notes\\5G1ouPzQd2x7HeUFhxbiB.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Embedded Systems.Lecture 4","content":"\n\r\n\r\n# Timers (Cont.)\r\n\r\n> Program to generate square wave of time period 100 micro second on Pin 1 of Port A and clock frequency of 1Mz\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid T0Delay() {\r\n    TCNT0 = 206; // Time delay is of 50 microseconds and not 100 microseconds.\r\n    TCCR0 = 0x01; // Normal mode and no prescaling\r\n    while((TIFR & 0x1) == 0); // Check for counter\r\n    TCCR0 = 0; // Stop the clock\r\n    TIFR = 0x1; // Reset flags\r\n}\r\n\r\nint main() {\r\n    DDRA = 0x02; // Define PIN 1 of PORTA to be ouput\r\n    while(1)\r\n    {\r\n        PORTA = 0x02; // Turn PIN 1 of PORTA on\r\n        T0Delay(); // Provide time delay\r\n        PORTA = 0x00; // Turn PIN 1 of PORTA off\r\n        T0Delay(); // Proivde time delay\r\n        // This will generate a square wave form.\r\n    }\r\n    return 0;\r\n}\r\n```\r\n---\r\n\r\n> ![](/assets/images/2021-09-13-11-42-59.png)\r\n\r\n* The outside signal will come from pins of ports as they can have alternate functions too.\r\n* These pins will take the input from port.\r\n* Follow this for more functions\r\n    * ![](/assets/images/2021-09-13-11-44-23.png)\r\n* For internal purpose, assume that the clock frequency is 1Mz. **Note that 1Hz is from outside world.**\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nint main() {\r\n    DDRB = 0x00; // Declare whole port as input because this is where external signal will arrive.\r\n    DDRC = 0xFF; // Declare whole port as output because this is where we will be displaying the count of TCNT.\r\n    PORTB = 0x00; // Set PORTB to 0\r\n    while(1) { // Run forever\r\n        TCCR0 = 0x06; // External clock with falling edge value from the table\r\n        PORTC = TCNT0; // Display contents of TCNT0 on PORTC\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\n## CTC Mode\r\n* It is compare mode. This means that instead of going till 0xFF, it will drop at the set value.\r\n* It may or may not be equal to 0xFF.\r\n* Now to compare the flag, we compare with 0x02. (i.e flag 1 instead of flag 0).\r\n* **This is because the overflow flag is not affected, the compare flag is affected.**\r\n\r\n> Program to generate a square wave of time period 150 microseconds on PIN 1 of PORT A. Assume cystal frequency = 1MHz. use timer in CTC mode.\r\n\r\n* Note that the delay of 150 microseconds is for the whole wave.\r\n* Thus, if we need a delay for only one part of the wave, we need to use a delay of 75 microseconds.\r\n* Now we want to write the value of OCR0.\r\n* Make sure to change the value of TCCR0 for CTC mode.\r\n* Now, the time duration will depend not only on TCNT0 but also on OCR0.\r\n* In normal mode, we are concerned with FF - TCNT0 value but here we are concerned with OCR0 - TCNT0 which must be 75.\r\n* Note that one must always be careful about which flag are we going to use.\r\n* In **normal mode**, we are waiting for **overflow flag** whereas in **CTC mode** we are waiting for the **compare flag**.\r\n* For simplicity, you can put TCNT0 value to be 0 and OCR0 value to be 75. **The concept remains the same i.e OCR-TCNT should be 75.**\r\n* \r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid T0Delay() {\r\n    TCNT0 = 0; // TCNT0 = 0\r\n    OCR0 = 75; // OCR0 - TCNT0 = 75 and TCNT0 = 0\r\n    TCCR0 = 0x09; // TCCR0 value for CTC mode and no prescaling\r\n    while( (TIFR & 0x2) == 0); // Check 1st bit\r\n    TCCR0 = 0; // Stop clock\r\n    TIFR = 0x2; // Reset flags\r\n}\r\n\r\nint main() {\r\n    DDRA = 0x02; // Set PORTA.1 as output pin\r\n    while(1) { // Run forever\r\n        PORTA = PORTA ^ 0x02; // Toggle value at PORTA\r\n        T0Delay(); // Apply time delay\r\n    }\r\n    return 0;\r\n}\r\n```\r\n* Now suppose, we start the value of TCNT0 with 200, then how will the OCR value change?\r\n* For this case, we find the extra distance i.e find from where it \"rolls over\".\r\n* Thus, the value of OCR must be 19 becuase from 200 to 256, we would have covered 56 values and then 19 values remain to provide a proper delay of 75 microseconds.\r\n","url":"https://sameep1234.github.io/notes/notes\\F1AmaGrElexDP3rZKJI3D.html","relUrl":"notes\\F1AmaGrElexDP3rZKJI3D.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Embedded Systems.Lecture 3","content":"\n\r\n\r\n# Timer (Cont.)\r\n\r\n## Extra Points\r\n* If prescaling is applied, we multiply the time period of the AVR microcontroller by the same amount as the prescaling ratio.\r\n* Prescaler simply means that we are increasing the time period of the clock. Consequently, we are decreasing the frequency of the clock.\r\n* Time Delay\r\n    * Hex Value\r\n        * ![](/assets/images/2021-09-06-11-10-19.png)\r\n    * Decimal Value\r\n        * ![](/assets/images/2021-09-06-11-11-09.png)\r\n* To clear any flag, write logic **\"1\"** to it.\r\n\r\n## Steps for programming\r\n* ![](/assets/images/2021-09-06-11-23-39.png)\r\n* ![](/assets/images/2021-09-06-11-32-17.png)\r\n\r\n> Question that remains is how to store/measure overflow flag?\r\n* For that we use TIFR (Timer/Counter Interrupt Flag Register). It has dedicated 1-bit to store every flag that we may encounter.\r\n\r\n## TIFR Circuit\r\n* It is an 8-bit register.\r\n* Stores flags and **overflow flag is set on 0th bit**.\r\n* Value \"1\" implies overflowed and vice versa.\r\n> The below given figure will be provided for reference in exam.\r\n* ![](/assets/images/2021-09-06-11-37-11.png)\r\n\r\n* Prescalers slows down the clock. Hence increases the time period.\r\n* Thus, multiply the prescaler to clock time period to get the adequate delay.\r\n* Overflow flag is located on 0th bit. Hence to check overflow we check TIFR & 0x1 to be 0.\r\n* **Make sure that to reset the flag by putting \"1\" to the flag.**\r\n* The reason for this could be understood using an analogy. These are not the direct registers. These like control registers which means they act as a switch. We are pressing the \"reset\" switch (by putting \"1\") and in turn it is telling the actual register to reset the values. Thus, instead of 0, we are passing 1.\r\n* Example questions\r\n    * ![](/assets/images/2021-09-06-11-40-28.png)\r\n    * ![](/assets/images/2021-09-06-11-42-27.png)\r\n    * Toggle bits on 4th Pin of PORTB continuously with delay of 70 microseconds. Use Timer0, normal mode and 1:8 prescaler. Frequency of clock is 8MHz.\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid T0Delay() {\r\n    TCNT0 = 0xBA; // Calculated using the formula\r\n    TCCR0 = 0x02; // 1:8 prescaler value using the table\r\n    while((TIFR & 0x1) == 0); // Continuously run until flag is activated\r\n    TCCR0 = 0; // Stop the clock\r\n    TIFR = 0x1; // Reset the values.\r\n}\r\n\r\nvoid main() {\r\n\tDDRB = 0x10; // PORTB.4 is declared as output pin\r\n\twhile(1) // Run forever\r\n\t{\r\n\t\tPORTB = 0x10; // Turn on\r\n        T0Delay(); // Apply delay\r\n        PORTB = 0x00; // Turn off\r\n        T0Delay(); // Apply delay\r\n\t}\r\n}\r\n```\r\n* Author's method\r\n    * ![](/assets/images/2021-09-06-12-12-18.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\Y8Eu4fgviDeYqILunOUEG.html","relUrl":"notes\\Y8Eu4fgviDeYqILunOUEG.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Embedded Systems.Lecture 2","content":"\n\r\n\r\n# Timers\r\n\r\n## Timers in AVR\r\n* ![](/assets/images/2021-09-05-10-37-02.png)\r\n* ATMEGA32\r\n    * Timer 0: 8-bit\r\n    * Timer 1: 16-bit\r\n    * Timer 2: 8 bit\r\n* Example\r\n    * ![](/assets/images/2021-09-05-10-48-08.png)\r\n    * Complex Solution\r\n    ![](/assets/images/2021-09-05-10-50-57.png)\r\n\r\n## Components\r\n* TCCR: Timer/Counter Control Register\r\n    * 8-bit register\r\n    * ![](/assets/images/2021-09-05-11-18-21.png)\r\n    * When you put 000, timer stops if it is running.\r\n    * Other information given in the image above.\r\n* TOV: Timer Overflow\r\n* TCNT: Timer/Counter Register\r\n    * 8-bit register that increments count.\r\n    * It is a read/write register.\r\n    * **Increments every clock cycle.**\r\n    * Overflow occurs at 0xFF.\r\n    * ![](/assets/images/2021-09-05-11-02-40.png)\r\n* OCR: Output Compare Register\r\n    * It is a read/write 8-bit register.\r\n    * Continuously compared with counter value i.e TCNT value.\r\n    * Used majorly when we are using timer in CTC mode.\r\n* OCF: Output Compare flag\r\n    * If the value compared by the OCR matches the value in TCNT, this flag will be turned on to represent the overflow.\r\n\r\n## Circuit (Timer 0)\r\n![](/assets/images/2021-09-05-10-59-49.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\jkmMfJvEbQVlIf4g87Sap.html","relUrl":"notes\\jkmMfJvEbQVlIf4g87Sap.html"},{"doc":"Lecture 2 (Lab)","title":"Lecture 2 (Lab)","hpath":"courses.Semester 5.Embedded Systems.Lecture 2 (Lab)","content":"\n\r\n# Coding Program and Examples\r\n\r\n## Extra Points\r\n* Different states of pins\r\n    * ![](/assets/images/2021-09-05-08-42-05.png)\r\n* Status of 8-bit Registers\r\n    * ![](/assets/images/2021-09-05-08-50-10.png)\r\n* Unpacked BCD\r\n    * 4 LSB's are used.\r\n    * 4 MSB's are kept 0.\r\n    * Eg. 4 = 0000 0100\r\n* Packed BCD\r\n    * 4 LSB's = One number\r\n    * 4 MSB's = Second number\r\n    * Eg. 24 = 0010 0100\r\n","url":"https://sameep1234.github.io/notes/notes\\pQzSpZXUDlUdOzofCMW0k.html","relUrl":"notes\\pQzSpZXUDlUdOzofCMW0k.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Embedded Systems.Lecture 1","content":"\n\r\n\r\n# Introduction to Embedded Systems\r\n\r\n## Course Material\r\n* Text Book - The AVR Microcontroller and Embedded Systems using Assembly and C by Muhammad Ali Mazidi, Sarmad Naimi and Sepehr Naimi.\r\n\r\n## Evaluation Scheme\r\n* End Semester Exam: 30%\r\n* Mid Semester Exam: 25%\r\n* Laboratory Experiments: 45%\r\n* **Relatve Grading**\r\n\r\n## Microprocessor\r\n* Brain of the computer\r\n* A programmable integrated device that takes input, uses memory and produces output.\r\n\r\n> Now in embedded system, we are moving from microprocessor to microcontroller.\r\n\r\n* Key difference between them is that in microprocessor you can use multiple chips externally whereas for microcontroller, you can't use that.\r\n\r\n## Extra Points\r\n* When system performance is critical then use microprocessors because we can manage the RAM and ROM.\r\n* When issues of space, power and rapid development are critical then use microcontrollers because microcontrollers have built in chips and thus, space and time to develop is less.\r\n\r\n> What is embedded system?\r\n\r\n* We are talking about microprocessor and microcontroller.\r\n* A way of working, organizing or performing one or many tasks according to a fixed set of rules, program or plan is called a **system**.\r\n* A system that has the following two properties is called an embedded system.\r\n    * software embedded into a computer hardware.\r\n    * which makes a system dedicated for an application or specific part of an application or product or part of a larger system.\r\n* It has a dedicated purpose software embedded in a computer hardware.\r\n\r\n## Classification\r\n* Stand Alone\r\n    * Designed to perform a very specific task **repetitively**.\r\n    * Non-reactive to the environment conditions.\r\n    * Simplest form of ES.\r\n* Real Time\r\n    * Usually monitors the environment where it is installed.\r\n    * It is required to respond in time to a request.\r\n    * Eg. Systems used in AC.\r\n* Network or Remote Controlled\r\n    * Can be reactive or non-reactive to its environment.\r\n    * Built using specialized communication processor.\r\n    * Eg. Drone\r\n* Mobile\r\n    * Designed to be continuously on the move.\r\n    * Battery Powered\r\n\r\n## Components\r\n* Hardware\r\n* Software\r\n    * Higher level programs that can be changed without replacing the hardware.\r\n* Firmware\r\n    * They are small and fixed programs and data structures that internally control various electronic devices.\r\n    * They are very basic low level programs without which a device would not function at all.\r\n","url":"https://sameep1234.github.io/notes/notes\\Zccsc3smWAqMh6RBI9ohc.html","relUrl":"notes\\Zccsc3smWAqMh6RBI9ohc.html"},{"doc":"Lecture 1 (Lab)","title":"Lecture 1 (Lab)","hpath":"courses.Semester 5.Embedded Systems.Lecture 1 (Lab)","content":"\n\r\n\r\n# Selection and Coding\r\n\r\n> #### This was the lab session but theory was taught.\r\n\r\n## Criteria's to select microcontroller\r\n* Computational need - Efficiency, cost etc.\r\n    * 8-bit vs 16-bit vs 32-bit\r\n    * Speed\r\n    * Power Consumption\r\n    * Packaging\r\n        * Space\r\n        * Assembling\r\n        * Prototyping end product\r\n    * Amount of RAM and ROM on chip\r\n    * No. of I/O pins\r\n    * No. of timers\r\n    * Upgradability to new versions\r\n    * Cost per unit\r\n* Availability of software development tools\r\n    * Availability of\r\n        * Assemblers\r\n        * Debugger\r\n        * Code-efficient C-language compiler\r\n        * Technical Support\r\n        * In-house and outside expertise\r\n* Reliable source of microcontroller\r\n    * Number of companies supplying controller.\r\n    * Are they reliable?\r\n    * Will it support in future?\r\n\r\n> We would be using AVR Microcontrollers\r\n\r\n## Harvard vs Princeton\r\n* Harvard\r\n![](/assets/images/2021-09-04-18-21-51.png)\r\n* Princeton\r\n* ![](/assets/images/2021-09-04-18-22-18.png)\r\n\r\n## RISC vs CISC\r\n* CISC\r\n    * Complex Instruction Set Computer\r\n    * Single instruction can execute several low-level operations (including load from memory, artihmetic operations and memory store).\r\n    * Capability of multi-step operations.\r\n* RISC\r\n    * Reduced Instruction Set Computer\r\n    * Low complexity\r\n        * Speed-up\r\n        * Less errors in implementation\r\n    * Less transistors\r\n    * More space and registers\r\n* Conclusion\r\n![](/assets/images/2021-09-04-18-30-30.png)\r\n\r\n## AVR Microcontrollers\r\n* Follows Harvard Architecture\r\n* Follows RISC architecture with CISC instruction set\r\n* Full-form - Advanced Virtual RISC\r\n* 8 Bit Bus (For our application)\r\n* Pin count between 8 to 100\r\n* Scalable\r\n* 32 working registers\r\n    * All connected to ALU\r\n* Single Cycle Execution\r\n    * One instruction per external clock\r\n    * Low power consumption\r\n* Efficient core\r\n* High system level integration\r\n\r\n## Extra points\r\n* ![](/assets/images/2021-09-04-18-37-03.png)\r\n* For ATMEGA, we have 4 ports each of 8 bit.\r\n* Each pin is configurable\r\n* Types of configuration\r\n    * Input with internal pull-up\r\n    * Input with no pull-up\r\n    * Output (Driven Low)\r\n    * Output (Driven High)\r\n* Each Port will have **3 main registers**\r\n    * DDRx - Data Direction Register\r\n        * For configuring data direction (whether input or output)\r\n    * PORTx - Port output/Driver Register\r\n        * Output Mode\r\n    * PINx - Port Input Register\r\n        * Reading Mode\r\n\r\n> **How to give direction?**\r\n\r\n* For any Pin, if it is defined 0, then it represents input pin and vice versa.\r\n\r\n## Examples of Program\r\n* ![](/assets/images/2021-09-04-18-45-38.png)\r\n* ![](/assets/images/2021-09-04-18-48-57.png)\r\n","url":"https://sameep1234.github.io/notes/notes\\3XVT9rTfG77eMnesZzkAE.html","relUrl":"notes\\3XVT9rTfG77eMnesZzkAE.html"},{"doc":"Extra Practice Questions","title":"Extra Practice Questions","hpath":"courses.Semester 5.Embedded Systems.Extra Practice Questions","content":"\n\r\n\r\n## [Folder Link Mid sem Papers](https://drive.google.com/drive/u/1/folders/15O5LCqepDlY5TIxaXk68Lii8eqqHUiuG)\r\n\r\n## [Past year mid sem solutions](https://drive.google.com/file/d/1fr7RTkFWCfk1MBbgnFHZYbqGLAFldIR3/view?usp=sharing)\r\n\r\n## Mid sem 2020 Q6\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nT0delay(){\r\n\r\n    TCNT0 = 0;\r\n    OCR0 = 94; // 1:8 Prescaled value for OCR0\r\n    TCCR0 = 0x0A; // 1:8 Prescaler value\r\n    while(TIFR&0X02 == 0){}\r\n    TCCR0 = 0x00;\r\n    TIFR = 0x02;\r\n}\r\n\r\nvoid main()\r\n{\r\n    DDRA = 0x0F;\r\n    int i;\r\n    int temp;\r\n    while(1)\r\n    {\r\n        for (i=7;i>=0;i-=2)\r\n        {\r\n            PORTA = 0x00;\r\n            temp = 1<<i;\r\n            temp = temp | (1<<(i-1));\r\n            PORTA = temp;\r\n            T0delay();\r\n        }\r\n    } \r\n}\r\n```\r\n\r\n## Mid sem 2020 Q7\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nT0delay(){\r\n    TCNT0 = 156;\r\n    TCCR0 = 0X01;\r\n    While(TIFR & 0X01 == 0);\r\n    TCCR0 = 0;\r\n    TIFR = 0X01;\r\n}\r\nint counter = 0;\r\nvoid main()\r\n{\r\n    int bin,x,d2,d1;\r\n    DDRD = 0XFF;\r\n\r\n    DDRC = 0XFF;\r\n    DDRB = 0XFF;\r\n\r\n    DDRA = 0X00; // INPUT\r\n\r\n    MCUCR = 0x03;\r\n    GICR = 0x40;\r\n    TIMSK = 0x01;\r\n    sei();\r\n\r\n    while(1){\r\n        bin = pinA;\r\n        x = bin/10;\r\n        d1 = bin%10;\r\n        d2 = x%10;\r\n        PORTB = d1;\r\n        PORTC = d2;\r\n    }\r\n}\r\n\r\nISR(TIMER0_OVF_vect){\r\n    PORTD.b7 = 1;\r\n    T0delay();\r\n    PORTD.b7 = 0;\r\n    T0delay();\r\n}\r\n\r\nISR(INT0_vect){\r\n    counter++;\r\n    if(counter<120){\r\n        PORTD.b5 = 1;\r\n        PORT.b6 = 0;\r\n    }\r\n    else{\r\n        PORT.b6 = 1;\r\n        PORT.b5 = 0;\r\n    }\r\n}\r\n```\r\n\r\n## Mid sem 2019 Q5\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid main(){\r\n    DDRA = 0x00;\r\n    DDRB = 0x00;\r\n    DDRC = 0XFF;\r\n\r\n    int x,y, combined;\r\n    x = PINA & 0x0F;\r\n    y = PINB & 0X0F;\r\n    if(x%2 ==0){\r\n        combined = y<<4 | x;\r\n        PORTC = combined;\r\n    }\r\n    else{\r\n        combined = x<<4 | y;\r\n        PORTC = combined;\r\n    }\r\n}\r\n```\r\n\r\n## Mid sem 2019 Q6\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nT0delay(){\r\n\r\n    TCNT0 = 163;\r\n    TCCR0 = 0x02; // Prescaler of 1:8\r\n    while(TIFR&0X01 == 0){}\r\n    TCCR0 = 0x00;\r\n    TIFR = 0x01;\r\n}\r\n\r\nvoid main()\r\n{\r\n    DDRA = 0x0F;\r\n    int i;\r\n    while(1)\r\n    {\r\n        for (i=0;i<=7;i++)\r\n        {\r\n            PORTA = 1<<i;\r\n            T0delay();\r\n        }\r\n    } \r\n}\r\n```\r\n\r\n## Mid sem 2019 Q7\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nvoid main(){\r\n    DDRA = 0XFF;\r\n    DDRB = 0x00;\r\n    DDRD = 0X01;\r\n\r\n    TCCR0 = 0x07;\r\n    \r\n    MCUCR = 0x0B;\r\n    GICR = 0xC0;\r\n    sei();    \r\n\r\n    PORTD = 0x0D; // Activate Pull-up INT0 and INT1\r\n    while(1){\r\n        if(PORTA <= 100)\r\n            PORTA ++;\r\n        else \r\n            PORTA = 0x00;\r\n    }\r\n}\r\n\r\nISR(INT0_vect){\r\n    PORTD.b0 ^= 1;\r\n}\r\n\r\nISR(INT1_vect)\r\n{\r\n    PORTC++;\r\n}\r\n```\r\n\r\n## Mid sem 2018 Q4\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid main()\r\n{\r\n    DDRA = 0x00;\r\n    DDRB = DDRC = DDRD = 0xFF;\r\n    int x, d1,d2,d3, y;\r\n\r\n    while(1)\r\n    {\r\n        x = PINA;\r\n        y = x / 10;\r\n        d1 = x % 10;\r\n        d2 = y % 10;\r\n        d3 = y / 10;\r\n\r\n        PORTB = d1;\r\n        PORTC = d2;\r\n        PORTD = d3;\r\n    }\r\n}\r\n```\r\n\r\n## Mid sem 2018 Q5\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid T0Delay()\r\n{\r\n    TCCR0 = 0x01;\r\n    TCNT0 = 206;\r\n    while((TIFR & 0x01) == 0);\r\n    TIFR = 0x01;\r\n    TCCR0 = 0x00;\r\n}\r\n\r\nvoid main()\r\n{\r\n    DDRB = 0xFF;\r\n    int i, temp;\r\n\r\n    while(1)\r\n    {\r\n        for(i=0;i<8;i++)\r\n        {\r\n            temp = 1<<i;\r\n            PORTB = temp | 1<<(7-i);\r\n            T0Delay();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Mid sem 2018 Q6\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nvoid T0Delay()\r\n{\r\n    TCCR0 = 0x09;\r\n    TCNT0 = 0;\r\n    OCR0 = 50;\r\n    while((TIFR & 0x02) == 0);\r\n    TIFR = 0x02;\r\n    TCCR0 = 0x00;\r\n}\r\n\r\nvoid main()\r\n{\r\n    DDRD = 0xFF;\r\n    DDRA = 0x00;\r\n    DDRC = 0xFF;\r\n    int x;\r\n\r\n    GICR = 0x40; // Local external interrupt\r\n    MCUCR = 0x02; // Mode for external interrupt\r\n    TIMSK = 0x02; // Timer interrupt\r\n    sei(); // Global interrupt\r\n\r\n    PORTD = 0x04; // Activate pull-up\r\n\r\n    while(1)\r\n    {\r\n        x = PINA;\r\n        PORTC = (x >> 1);\r\n    }\r\n}\r\n\r\nISR(TIMER0_COMP_vect)\r\n{\r\n    PORTD ^= 0x10;\r\n    T0Delay();\r\n}\r\n\r\nISR(INT0_vect)\r\n{\r\n    PORTD.b5 ^= 1; \r\n}\r\n```\r\n\r\n## Question 1\r\n> Program to toggle PB4 every 2ms. Use Timer1, Normal Mode and no prescaler and assume clock frequency = 8MHz.\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid T1Delay()\r\n{\r\n    TCNT1 = 49536; // TCNT1 Value for 2ms delay\r\n    \r\n    TCCR1 = 0x0001; // TCCR1 value for normal mode, no prescaling.\r\n    /* Can also be written as follows\r\n        TCCR1H = 0x00;\r\n        TCCR1L = 0x01; \r\n    */\r\n    \r\n    while((TIFR & 0x04) == 0); // Run until timer1 TOV1 flag overflows\r\n\r\n    TIFR = 0x04; // Reset flags\r\n    TCCR1 = 0x0000; // Stop clock\r\n}\r\n\r\nvoid main()\r\n{\r\n    DDRB = 0x10; // Declare PORTB.4 as output\r\n    while(1) // Run forever\r\n    {\r\n        PORTB ^= 0x10; // Toggle PORTB.4\r\n        T1Delay(); // Apply delay\r\n    }\r\n}\r\n```\r\n\r\n## Question 2\r\n> Assuming that a 1Hz clock pulse is fed into into pin T0 (PB0), use the TOV0 flag to extend Timer0 to a 16-bit counter and display the counter on PORTC and PORTD\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid main()\r\n{\r\n    DDRC = 0xFF; // Declare PORTC as output\r\n    DDRD = 0xFF; // Declare PORTD as output\r\n\r\n    PORTB = 0x01; // Activate pull up\r\n    \r\n    TCCR0 = 0x06; // TCCR value for external clock\r\n    TCNT = 0x00; // Start counter from 0\r\n\r\n    while(1) // Run forever\r\n    {\r\n        PORTC = TCNT0; // Transfer content of TCNT0 to PORTC\r\n        while((TIFR & 0x01) == 0) // Run untill roll over\r\n        {\r\n            PORTC = TCNT0; // Transfer continuously to PORTC\r\n        }\r\n\r\n        TIFR = 0x01; // Reset flags\r\n        PORTD += 1; // Increment PORTD\r\n    }\r\n}\r\n```\r\n\r\n## Question 3\r\n> Assume 1Hz external clock is fed to PB1 (T1). Program for counter1 in rising edge mode to count the pulses and display the TCNT1H and TCNT1L registers on PORTD and PORTC, respectively\r\n\r\n```c\r\n#include<avr/io.h>\r\n\r\nvoid main()\r\n{\r\n    PORTB = 0x02; // Activate pull-up\r\n\r\n    DDRC = 0xFF; // Output mode for PORTC\r\n    DDRD = 0x0FF; // Output mode for PORTD\r\n\r\n    TCCR1 = 0x0006; // External clock source, no prescaling\r\n\r\n    TCNT1 = 0x0000; // Set count to 0\r\n\r\n    while(1) // Run forever\r\n    {\r\n        // Perform the required task\r\n        PORTC = TCNT1L;\r\n        PORTD = TCNT1H;\r\n\r\n        while((TIFR & 0x04) == 0)\r\n        {\r\n            PORTC = TCNT1L;\r\n            PORTD = TCNT1H;\r\n        }\r\n\r\n        TIFR = 0x04; // Reset Flag\r\n    }\r\n}\r\n```\r\n\r\n## Question 4\r\n> Using Timer0 and Timer1 interrupts, generate square waves on pins PB1 and PB7 respectively while transferring data from PORTC to PORTD\r\n\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nvoid main()\r\n{\r\n    DDRB = 0x82; // Declare pins B2 and B7 as output\r\n    DDRC = 0x00; // Input PORTC\r\n    DDRD = 0xFF; // Output PORTD\r\n\r\n    TCNT0 = 0x00; // Start timer0 from 0 i.e max delay\r\n    TCNT1H = 0x00;\r\n    TCNT1L = 0x00; // Start timer1 from 0 i.e max delay\r\n\r\n    TCCR0 = 0x01; // Normal mode, no prescaler timer0\r\n    TCCR1 = 0x0001; // Normal mode, no prescaler timer1\r\n\r\n    TIMSK = 0x05; // Enable local interrupt for timer1 and timer0\r\n    sei(); // Enable global interrupts\r\n\r\n    while(1) // Run forever\r\n    {\r\n        PORTD = PINC; // Transfer data from PORTC to PORTD\r\n    }\r\n}\r\n\r\nISR(TIMER0_OVF_vect)\r\n{\r\n    TCNT0 = 0x00; // Reset timer0 again\r\n    PORTB ^= 0x02; // Toggle PORTB.1\r\n}\r\n\r\nISR (TIMER1_OVF_vect)\r\n{\r\n    TCNT1 = 0x0000; // Reset timer1 again\r\n    PORTB ^= 0x80; // Toggle PORTB.7\r\n}\r\n```\r\n\r\n## Question 5\r\n> Using Timer0 and Timer1 interrupts, write a program in which PORTA counts up everytime Timer1 overflows (after every 1 sec it overflows) and a pulse is fed into Timer0 where Timer0 is used as counter and counts up. Furthermore whenever the counter reaches 200, it will toggle the pin PORTB.6. All these should happen while transferring data from PORTC to PORTD. Assume XTAL = 1MHz.\r\n\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nvoid main()\r\n{\r\n    DDRB = 0x40; // Declare PORTB.4 as output pin\r\n    DDRA = 0xFF; // Declare whole PORTA as output\r\n    DDRD = 0xFF; // Declare whole PORTD as output\r\n    DDRC = 0x00; // Declare PORTC as input\r\n\r\n    PORTB = 0x01; // Activate pull-up\r\n\r\n    TCNT0 = -200 // Load Initial value of TCNT0\r\n    TCNT1 = 34286 // Value for 1 sec delay using 1:256 prescaler\r\n\r\n    TCCR0 = 0x06 // External clock, falling edge, no prescaler\r\n    TCCR1 = 0x0004; // Normal mode, 1:256 prescaler\r\n\r\n    TIMSK = 0x05;  // Enable local interrupts for Timer1 and Timer0\r\n    sei(); // Enable Global interrupts\r\n\r\n    while(1) // Run forever\r\n    {\r\n        PORTD = PINC; // Transfer data as required\r\n    }\r\n}\r\n\r\nISR(TIMER0_OVF_vect)\r\n{\r\n    TCNT0 = -200; // Reset count value timer0\r\n    PORTB ^= 0x40; //Toggle PORTB.6 \r\n}\r\n\r\nISR(TIMER1_OVF_vect)\r\n{\r\n    TCNT1 = 34286; // Reset count value timer1\r\n    PORTA++; // Increment value as mentioned\r\n}\r\n```\r\n\r\n## Question 6\r\n> Assume that the INT0 pin is connected to a switch that is normally high. Write a program that toggles PORTC.3 **only once** whenever INTO pin goes low.\r\n\r\n```c\r\n#include<avr/io.h>\r\n#include<avr/interrupt.h>\r\n\r\nvoid main()\r\n{\r\n    DDRC = 0x04; // Declare PORTC.3 as output\r\n    PORTD = 0x04; // Activate External pull-up\r\n\r\n    MCUCR = 0x02; // INT0 is falling edge triggered\r\n    GICR = 0x40; // Enable INT0 local interrupt\r\n    sei(); // Enable global interrupts\r\n\r\n    while(1); // Run forever and do nothing\r\n}\r\n\r\nISR(INT0_vect)\r\n{\r\n    PORTC ^= 0x04; // Toggle PORTC.3\r\n}\r\n```\r\n\r\n> Not clear understanding of Question 6.\r\n","url":"https://sameep1234.github.io/notes/notes\\QzwJieYmtmXZ6OMnYuhA9.html","relUrl":"notes\\QzwJieYmtmXZ6OMnYuhA9.html"},{"doc":"Changelog","title":"Changelog","hpath":"root.changelog","content":"","url":"https://sameep1234.github.io/notes/notes\\changelog.html","relUrl":"notes\\changelog.html"}]
>>>>>>> f304cdc75d33d5fd096dea00c7c7ce6a9e423673
